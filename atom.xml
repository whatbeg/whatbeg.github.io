<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Whatbeg&#39;s blog</title>
  <subtitle>路漫漫其修远兮，仍将上下而求索</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://whatbeg.com/"/>
  <updated>2016-09-10T12:41:14.229Z</updated>
  <id>http://whatbeg.com/</id>
  
  <author>
    <name>whatbeg</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hadoop MapReduce进行WordCount自主编译运行</title>
    <link href="http://whatbeg.com/2016/09/10/hadoop-go-1.html"/>
    <id>http://whatbeg.com/2016/09/10/hadoop-go-1.html</id>
    <published>2016-09-10T12:28:29.000Z</published>
    <updated>2016-09-10T12:41:14.229Z</updated>
    
    <content type="html">&lt;p&gt;上次我们已经搭建了Hadoop的伪分布式环境，并且运行了一下Hadoop自带的例子–WordCount程序，展现良好。但是大多数时候还是得自己写程序，编译，打包，然后运行的，所以做一次自编译打包运行的实验。&lt;/p&gt;
&lt;h3 id=&quot;编辑程序&quot;&gt;&lt;a href=&quot;#编辑程序&quot; class=&quot;headerlink&quot; title=&quot;编辑程序&quot;&gt;&lt;/a&gt;编辑程序&lt;/h3&gt;&lt;p&gt;在Eclipse或者NetBeans中编辑WordCount.java程序，用IDE的好处就是我们可以更方便的选择各种依赖的jar包，并且它会帮我们编译好，我们只需要去workspace中拿出class文件打包就好了，或者直接打包就行。而不用在命令行输入很多依赖jar包去打包，这样更加省事。&lt;/p&gt;
&lt;p&gt;1.新建Java Project，名为WordCount，然后建立一个叫test的package，新建WordCount.java，编辑好。结构如下：&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hadoop-18.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;2.这时候我们的workspace/WordCount/bin/test目录下自动生成了编译好的三个class文件。&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hadoop-19.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;3.将class文件打包。如下图所示，在bin/test目录下输入&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ jar cvf WordCount&lt;span class=&quot;selector-class&quot;&gt;.jar&lt;/span&gt; test/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;即可将class文件打包为WordCount.jar.&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hadoop-23.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;4.运行hdfs:&lt;br&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;keyword&quot;&gt;cd&lt;/span&gt; /usr/&lt;span class=&quot;keyword&quot;&gt;local&lt;/span&gt;/hadoop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ./sbin/start-dfs.&lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ jps    &lt;span class=&quot;comment&quot;&gt;//检查是否启动NameNode,DataNode等&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;5.往HDFS上的input文件夹中put一个文本文件或者xml文件，上篇文章有讲。比如：&lt;br&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hadoop fs -put /usr/local/hadoop/etc/hadoop/*.&lt;span class=&quot;keyword&quot;&gt;xml&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;input&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6.运行WordCount.jar&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ cd ~/workspace/WordCount/bin   &lt;span class=&quot;comment&quot;&gt;//进入到WordCount.jar所在目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hadoop jar WordCount&lt;span class=&quot;selector-class&quot;&gt;.jar&lt;/span&gt; test&lt;span class=&quot;selector-class&quot;&gt;.WordCount&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;input&lt;/span&gt; output&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hadoop fs -cat output/part-r-&lt;span class=&quot;number&quot;&gt;00000&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;//查看输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hadoop-24.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hadoop-25.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;7.关闭hdfs&lt;br&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;keyword&quot;&gt;cd&lt;/span&gt; /usr/&lt;span class=&quot;keyword&quot;&gt;local&lt;/span&gt;/hadoop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ./sbin/stop-dfs.&lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;下次运行时须将output目录删除。&lt;br&gt;到此，我们就编译运行成功了。还是挺简单的。毕竟WordCount是hadoop界的Helloworld啊。&lt;br&gt;以后我们编写hadoop程序，只需要按这个过程编译打包运行一下就可以了。&lt;/p&gt;
&lt;h3 id=&quot;一个错误&quot;&gt;&lt;a href=&quot;#一个错误&quot; class=&quot;headerlink&quot; title=&quot;一个错误&quot;&gt;&lt;/a&gt;一个错误&lt;/h3&gt;&lt;p&gt;之前没有指定包，而是放在默认包内的时候，运行&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hadoop jar WordCount&lt;span class=&quot;selector-class&quot;&gt;.jar&lt;/span&gt; WordCount &lt;span class=&quot;selector-tag&quot;&gt;input&lt;/span&gt; output&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;会出现：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Exception &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; thread &lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt; java&lt;span class=&quot;selector-class&quot;&gt;.lang&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.ClassNotFoundException&lt;/span&gt;: WordCount&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;的错误，后来将WordCount.java重新写在一个package（test）中就不再有这个问题了。&lt;br&gt;即第三个参数一定要是入口类，比如程序属于包test，那么第三个参数须是&lt;code&gt;test.WordCount&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;WordCount-代码&quot;&gt;&lt;a href=&quot;#WordCount-代码&quot; class=&quot;headerlink&quot; title=&quot;WordCount 代码&quot;&gt;&lt;/a&gt;WordCount 代码&lt;/h3&gt;&lt;p&gt;下面的代码下载自网上，我看他还写了很多注释，就直接拿来用了。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; test;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.StringTokenizer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.conf.Configuration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.fs.Path;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.IntWritable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.Text;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapred.JobConf;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.Job;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.Mapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.Reducer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.lib.input.FileInputFormat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.util.GenericOptionsParser;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;WordCount&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 &lt;span class=&quot;comment&quot;&gt;/** &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * MapReduceBase类:实现了Mapper和Reducer接口的基类（其中的方法只是实现接口，而未作任何事情） &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Mapper接口： &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * WritableComparable接口：实现WritableComparable的类可以相互比较。所有被用作key的类应该实现此接口。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Reporter 则可用于报告整个应用的运行进度，本例中未使用。  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TokenizerMapper&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Mapper&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;Object&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;Text&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;Text&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;IntWritable&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  &lt;span class=&quot;comment&quot;&gt;/** &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       * LongWritable, IntWritable, Text 均是 Hadoop 中实现的用于封装 Java 数据类型的类，这些类实现了WritableComparable接口， &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       * 都能够被串行化从而便于在分布式环境中进行数据交换，你可以将它们分别视为long,int,String 的替代品。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       */&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; IntWritable one = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IntWritable(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Text word = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Text();      &lt;span class=&quot;comment&quot;&gt;//Text 实现了BinaryComparable类可以作为key值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;comment&quot;&gt;/** &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	     * Mapper接口中的map方法： &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	     * void map(K1 key, V1 value, OutputCollector&amp;lt;K2,V2&amp;gt; output, Reporter reporter) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	     * 映射一个单个的输入k/v对到一个中间的k/v对 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	     * 输出对不需要和输入对是相同的类型，输入对可以映射到0个或多个输出对。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	     * OutputCollector接口：收集Mapper和Reducer输出的&amp;lt;k,v&amp;gt;对。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	     * OutputCollector接口的collect(k, v)方法:增加一个(k,v)对到output &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	     */&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Object key, Text value, Context context)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	 * 原始数据：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	 * c++ java hello&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			world java hello&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			you me too&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			map阶段，数据如下形式作为map的输入值：key为偏移量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			0  c++ java hello&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 			16 world java hello&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 			34 you me too&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            StringTokenizer itr = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringTokenizer(value.toString());  &lt;span class=&quot;comment&quot;&gt;//得到什么值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (itr.hasMoreTokens()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                word.set(itr.nextToken());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                context.write(word, one);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;IntSumReducer&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Reducer&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;Text&lt;/span&gt;,&lt;span class=&quot;title&quot;&gt;IntWritable&lt;/span&gt;,&lt;span class=&quot;title&quot;&gt;Text&lt;/span&gt;,&lt;span class=&quot;title&quot;&gt;IntWritable&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; IntWritable result = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IntWritable();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 * reduce过程是对输入数据解析形成如下格式数据：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 * (c++ [1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 * (java [1,1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 * (hello [1,1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 * (world [1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 * (you [1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 * (me [1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 * (you [1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 * 供接下来的实现的reduce程序分析数据数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 * &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Text key, Iterable&amp;lt;IntWritable&amp;gt; values, Context context)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (IntWritable val : values) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sum += val.get();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result.set(sum);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            context.write(key, result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	   &lt;span class=&quot;comment&quot;&gt;/** &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       * JobConf：map/reduce的job配置类，向hadoop框架描述map-reduce执行的工作 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       * 构造方法：JobConf()、JobConf(Class exampleClass)、JobConf(Configuration conf)等 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       */&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Configuration conf = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Configuration();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String[] otherArgs = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; GenericOptionsParser(conf, args).getRemainingArgs();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//这里需要配置参数即输入和输出的HDFS的文件路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (otherArgs.length != &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.err.println(&lt;span class=&quot;string&quot;&gt;&quot;Usage: wordcount &amp;lt;in&amp;gt; &amp;lt;out&amp;gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.exit(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Job job = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Job(conf, &lt;span class=&quot;string&quot;&gt;&quot;word count&quot;&lt;/span&gt;);      &lt;span class=&quot;comment&quot;&gt;// Job(Configuration conf, String jobName)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        job.setJarByClass(WordCount.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    job.setMapperClass(TokenizerMapper.class);  &lt;span class=&quot;comment&quot;&gt;// 为job设置Mapper类 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    job.setCombinerClass(IntSumReducer.class);  &lt;span class=&quot;comment&quot;&gt;// 为job设置Combiner类  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    job.setReducerClass(IntSumReducer.class);   &lt;span class=&quot;comment&quot;&gt;// 为job设置Reduce类   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    job.setOutputKeyClass(Text.class);          &lt;span class=&quot;comment&quot;&gt;// 设置输出key的类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    job.setOutputValueClass(IntWritable.class); &lt;span class=&quot;comment&quot;&gt;// 设置输出value的类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    FileInputFormat.addInputPath(job, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Path(otherArgs[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    FileOutputFormat.setOutputPath(job, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Path(otherArgs[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    System.exit(job.waitForCompletion(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;) ? &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;上次我们已经搭建了Hadoop的伪分布式环境，并且运行了一下Hadoop自带的例子–WordCount程序，展现良好。但是大多数时候还是得自己写程序，编译，打包，然后运行的，所以做一次自编译打包运行的实验。&lt;/p&gt;
&lt;h3 id=&quot;编辑程序&quot;&gt;&lt;a href=&quot;#编辑程序&quot;
    
    </summary>
    
      <category term="大数据处理技术 | Big Data" scheme="http://whatbeg.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF-Big-Data/"/>
    
    
      <category term="Hadoop" scheme="http://whatbeg.com/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Linux Ubuntu 16.04安装Hadoop全过程（二） --伪分布式</title>
    <link href="http://whatbeg.com/2016/09/02/hadoop-install-2.html"/>
    <id>http://whatbeg.com/2016/09/02/hadoop-install-2.html</id>
    <published>2016-09-02T09:00:24.000Z</published>
    <updated>2016-09-02T12:02:06.714Z</updated>
    
    <content type="html">&lt;p&gt;本文承接上文，&lt;a href=&quot;http://whatbeg.com/2016/08/31/hadoop-install.html&quot;&gt;Linux Ubuntu 16.04安装Hadoop全过程（一）&lt;/a&gt;，前文实践了单机模式的配置，此文实现伪分布式模式的配置（非YARN）。&lt;/p&gt;
&lt;h2 id=&quot;之前遇到的问题&quot;&gt;&lt;a href=&quot;#之前遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;之前遇到的问题&quot;&gt;&lt;/a&gt;之前遇到的问题&lt;/h2&gt;&lt;p&gt;先说一下遇到的一个问题。&lt;/p&gt;
&lt;p&gt;1.之前添加hadoop用户失败了，/home目录下没有hadoop目录，但是由于并没用到hadoop而是继续用自己的账户，所以没有发觉，后来转换到hadoop去登录，输入正确的账号密码后，黑下屏马上就回到了原来登录前的界面，也就是出现了循环登录的问题，查看了网上的一些解决方案，大致是要需要找到/home/user(user指的是用户名)下的.xsession-errors文件，但是此时问题来了，突然发现/home下没有hadoop目录，所以找到解决方法。一个原因是添加用户的姿势不对，Linux各发行版会有差异，比如上篇文章那样添加则可以成功，这个问题需要好好研究一下。&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hadoop-9.png&quot; alt=&quot;hadoop-9&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;伪分布式模式配置&quot;&gt;&lt;a href=&quot;#伪分布式模式配置&quot; class=&quot;headerlink&quot; title=&quot;伪分布式模式配置&quot;&gt;&lt;/a&gt;伪分布式模式配置&lt;/h2&gt;&lt;p&gt;上一篇文章讲述了在Ubuntu下安装Hadoop的过程，以及单机模式的配置和测试，最终测试成功。&lt;/p&gt;
&lt;p&gt;上篇文章的配置沿用下来，再修改两个文件：&lt;br&gt;1.&lt;code&gt;/usr/local/hadoop/etc/hadoop/core-site.xml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;原本此文件中只有如下内容：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;添加内容使成为：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;hadoop.tmp.dir&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;file:/usr/local/hadoop/tmp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/span&gt;Abase for other temporary directories.&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;fs.defaultFS&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;hdfs://localhost:9000&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2.&lt;code&gt;/usr/local/hadoop/etc/hadoop/hdfs-site.xml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;原本也是空的，添加内容使成为：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;dfs.replication&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;dfs.namenode.name.dir&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;file:/usr/local/hadoop/tmp/dfs/name&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;dfs.datanode.data.dir&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;file:/usr/local/hadoop/tmp/dfs/data&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;即可。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，如果要变回单机模式，清空&lt;code&gt;&amp;lt;configuration&amp;gt;&lt;/code&gt;标签中的内容即可。&lt;br&gt;且如果不是以YARN模式启动的话，无需配置mapred-site.xml。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;启动&quot;&gt;&lt;a href=&quot;#启动&quot; class=&quot;headerlink&quot; title=&quot;启动&quot;&gt;&lt;/a&gt;启动&lt;/h2&gt;&lt;p&gt;1.格式化namenode&lt;br&gt;在/usr/local/hadoop下以用户hadoop的身份执行：&lt;br&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ./&lt;span class=&quot;keyword&quot;&gt;bin/hdfs &lt;/span&gt;namenode -format&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hadoop-7.png&quot; alt=&quot;hadoop-7&quot;&gt;&lt;br&gt;看到如上的提示说明格式化namenode成功了。&lt;/p&gt;
&lt;p&gt;2.启动服务&lt;br&gt;如上，执行&lt;br&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ./sbin/&lt;span class=&quot;literal&quot;&gt;start&lt;/span&gt;-dfs.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可看到：&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hadoop-10.png&quot; alt=&quot;hadoop-7&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后用jps命令来判断是否启动成功，结果只显示：&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hadoop&lt;span class=&quot;variable&quot;&gt;@ubuntu&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:/usr/local/hadoop&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;jps&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3757&lt;/span&gt; Jps&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;没有Datanode和Namenode，说明配置不成功。&lt;br&gt;针对这种情况，依次运行如下命令，最后启动成功：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ./sbin/stop-dfs.sh    # 关闭dfs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ rm -r ./tmp     # 删除 tmp 文件，注意这会删除 HDFS 中原有的所有数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ./bin/hdfs namenode -format    # 重新格式化 NameNode&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ./sbin/start-dfs.sh            # 重启dfs&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hadoop-11.png&quot; alt=&quot;hadoop-11&quot;&gt;&lt;/p&gt;
&lt;p&gt;3.注： jps命令’command not found’的错误解决：&lt;br&gt;jps命令是jdk自带的，找不到命令说明极有可能是环境变量出了问题，用&lt;code&gt;echo $PATH&lt;/code&gt;查看环境变量，果然什么都没有，说明.bashrc中可能没有配置，果然发现，之前配置的.bashrc是root用户的配置文件，在hadoop用户的根目录还需要配置一遍。即打开.bashrc文件，在最后加入如下几行：&lt;br&gt;&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;export JAVA_HOME=&lt;span class=&quot;regexp&quot;&gt;/usr/jdk&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/jdk1.8.0_101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export JRE_HOME=$&amp;#123;JAVA_HOME&amp;#125;/jre&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export CLASSPATH=.:$&amp;#123;JAVA_HOME&amp;#125;/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;:$&amp;#123;&lt;span class=&quot;title&quot;&gt;JRE_HOME&lt;/span&gt;&amp;#125;/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export PATH=$&amp;#123;JAVA_HOME&amp;#125;/&lt;span class=&quot;symbol&quot;&gt;bin:&lt;/span&gt;$PATH&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后&lt;code&gt;source .bashrc&lt;/code&gt;保存即可。&lt;br&gt;此时jps命令启动正常。&lt;/p&gt;
&lt;p&gt;4.启动成功后可打开&lt;a href=&quot;http://localhost:50070&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:50070&lt;/a&gt;查看namenode和datanode或者DFS的信息。&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hadoop-12.png&quot; alt=&quot;hadoop-12&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;伪分布式模式测试&quot;&gt;&lt;a href=&quot;#伪分布式模式测试&quot; class=&quot;headerlink&quot; title=&quot;伪分布式模式测试&quot;&gt;&lt;/a&gt;伪分布式模式测试&lt;/h2&gt;&lt;p&gt;单机模式直接读取的是本地文件，如input目录和output目录，而伪分布式模式需要读取分布式文件系统HDFS中的文件，所以还得先建立HDFS。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ./bin/hdfs dfs -mkdir -p /user/hadoop  # 在HDFS中创建用户目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ./bin/hdfs dfs -mkdir input  # 在用户目录下创建input目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ./bin/hdfs dfs -put ./etc/hadoop/*.xml input  # 将一些测试文件移入input目录，就移配置xml文件作为输入&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注意，我们创建了/user/hadoop用户目录，又使用的是hadoop用户，所以直接用相对路径input即可表示/user/hadoop/input。&lt;/p&gt;
&lt;p&gt;然后执行一个筛出dfs开头的单词的程序：&lt;br&gt;其中&lt;code&gt;./bin/hadoop jar&lt;/code&gt;向集群提交作业&lt;br&gt;&lt;code&gt;grep&lt;/code&gt;是Hadoop提供的一个示例程序。&lt;br&gt;hadoop提供的示例程序如下：（0.19版本）&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hadoop-17.png&quot; alt=&quot;hadoop-17&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ./bin/hadoop jar ./share/hadoop/mapreduce/hadoop-mapreduce-examples-*.jar grep input output &amp;apos;dfs[a-z.]+&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hadoop-13.png&quot; alt=&quot;hadoop-13&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后查看输出，此时输出仍在HDFS中。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ./bin/hdfs dfs -cat output/*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hadoop-14.png&quot; alt=&quot;hadoop-14&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以将HDFS中的文件拷到本地&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ./bin/hdfs dfs -get output ./output&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hadoop-15.png&quot; alt=&quot;hadoop-15&quot;&gt;&lt;br&gt;注意第二次运行的时候需要删除HDFS中的output，否则会报错，因为此中有防止覆盖的机制，不会让你在不知情的情况下就覆盖掉上一个output，所以需要移走或者删除上一个output。&lt;br&gt;最后所有程序运行结束后运行&lt;code&gt;./sbin/stop-dfs.sh&lt;/code&gt;停止守护进程即可。&lt;/p&gt;
&lt;h2 id=&quot;WordCount测试&quot;&gt;&lt;a href=&quot;#WordCount测试&quot; class=&quot;headerlink&quot; title=&quot;WordCount测试&quot;&gt;&lt;/a&gt;WordCount测试&lt;/h2&gt;&lt;p&gt;下面还是进行一下WordCount单词统计程序的测试。&lt;br&gt;先删除HDFS中的output目录：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ./bin/hdfs dfs -rm -r output&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后如同单机模式中运行WordCount程序一样，运行：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ bin/hadoop jar share/hadoop/mapreduce/sources/hadoop-mapreduce-examples-2.7.3-sources.jar org.apache.hadoop.examples.WordCount input output&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后查看结果如下：&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hadoop-16.png&quot; alt=&quot;hadoop-16&quot;&gt;&lt;br&gt;移入的几个xml中（并非全部），总共有302个“单词”，每个单词的词频统计都在文件中汇总。&lt;/p&gt;
&lt;p&gt;至此运行成功，伪分布式系统配置完毕。&lt;/p&gt;
&lt;h2 id=&quot;下一步的工作&quot;&gt;&lt;a href=&quot;#下一步的工作&quot; class=&quot;headerlink&quot; title=&quot;下一步的工作&quot;&gt;&lt;/a&gt;下一步的工作&lt;/h2&gt;&lt;p&gt;1.探索YARN模式&lt;br&gt;2.MapReduce程序的设计与实现（WordCount）&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文承接上文，&lt;a href=&quot;http://whatbeg.com/2016/08/31/hadoop-install.html&quot;&gt;Linux Ubuntu 16.04安装Hadoop全过程（一）&lt;/a&gt;，前文实践了单机模式的配置，此文实现伪分布式模式的配置（非YARN）
    
    </summary>
    
      <category term="大数据处理技术 | Big Data" scheme="http://whatbeg.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF-Big-Data/"/>
    
    
      <category term="Hadoop" scheme="http://whatbeg.com/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Linux Ubuntu 16.04安装Hadoop全过程（一）</title>
    <link href="http://whatbeg.com/2016/08/31/hadoop-install.html"/>
    <id>http://whatbeg.com/2016/08/31/hadoop-install.html</id>
    <published>2016-08-31T08:57:42.000Z</published>
    <updated>2016-09-01T11:15:38.133Z</updated>
    
    <content type="html">&lt;p&gt;本文简要记述了本人参考网上教程在Ubuntu上（虚拟机）搭建Hadoop的过程，以备后用和各位获取。&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Hadoop是当今最流行的分布式系统之一，能够充分利用集群进行分布式程序的开发，以实现大规模数据的高速运算和存储。&lt;br&gt;Hadoop包括两个最重要的设计：HDFS和MapReduce。&lt;br&gt;HDFS是分布式文件系统（Hadoop Distribution File System），为海量数据提供高效的存储。&lt;br&gt;MapReduce是一种并行计算的思想，加快大数据处理的速度。&lt;/p&gt;
&lt;h2 id=&quot;软件&quot;&gt;&lt;a href=&quot;#软件&quot; class=&quot;headerlink&quot; title=&quot;软件&quot;&gt;&lt;/a&gt;软件&lt;/h2&gt;&lt;p&gt;1.JDK 8 （下载：&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html）&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html）&lt;/a&gt;&lt;br&gt;2.Hadoop 2.7.3&lt;br&gt;3.ssh&lt;/p&gt;
&lt;h2 id=&quot;步骤&quot;&gt;&lt;a href=&quot;#步骤&quot; class=&quot;headerlink&quot; title=&quot;步骤&quot;&gt;&lt;/a&gt;步骤&lt;/h2&gt;&lt;h3 id=&quot;安装JDK&quot;&gt;&lt;a href=&quot;#安装JDK&quot; class=&quot;headerlink&quot; title=&quot;安装JDK&quot;&gt;&lt;/a&gt;安装JDK&lt;/h3&gt;&lt;p&gt;1.下载JDK的.tar.gz压缩文件后（这里我下载的是jdk-8u101-linux-x64.tar.gz），将其移动到位置如/usr/jdk:&lt;br&gt;&lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mv &lt;span class=&quot;meta-keyword&quot;&gt;/home/&lt;/span&gt;../Downloads &lt;span class=&quot;meta-keyword&quot;&gt;/usr/&lt;/span&gt;jdk&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hadoop_1.png&quot; alt=&quot;Hadoop-1&quot;&gt;&lt;br&gt;2.然后将压缩文件解压&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tar -zxvf jdk-&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;u101-linux-x64&lt;span class=&quot;selector-class&quot;&gt;.tar&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.gz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3.然后修改配置文件.bashrc，并用source命令保存修改&lt;br&gt;&lt;figure class=&quot;highlight r&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;编辑&lt;span class=&quot;keyword&quot;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt; ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在最后一行添加：&lt;br&gt;&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;export JAVA_HOME=&lt;span class=&quot;regexp&quot;&gt;/usr/jdk&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/jdk1.8.0_101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export JRE_HOME=$&amp;#123;JAVA_HOME&amp;#125;/jre&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export CLASSPATH=.:$&amp;#123;JAVA_HOME&amp;#125;/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;:$&amp;#123;&lt;span class=&quot;title&quot;&gt;JRE_HOME&lt;/span&gt;&amp;#125;/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export PATH=$&amp;#123;JAVA_HOME&amp;#125;/&lt;span class=&quot;symbol&quot;&gt;bin:&lt;/span&gt;$PATH&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;4.然后在任意目录输入&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;java -&lt;span class=&quot;built_in&quot;&gt;version&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;查看Java JDK的安装情况。至此，JDK 8就安装好了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hadoop_2.png&quot; alt=&quot;Hadoop-2&quot;&gt;&lt;/p&gt;
&lt;p&gt;5.注：Java的安装是针对所有用户的，并不是只针对特定用户。&lt;/p&gt;
&lt;h3 id=&quot;创建新的Hadoop用户&quot;&gt;&lt;a href=&quot;#创建新的Hadoop用户&quot; class=&quot;headerlink&quot; title=&quot;创建新的Hadoop用户&quot;&gt;&lt;/a&gt;创建新的Hadoop用户&lt;/h3&gt;&lt;p&gt;1.创建一个新的Hadoop用户用来测试：&lt;/p&gt;
&lt;figure class=&quot;highlight vala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~$ su&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输入密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#useradd -m hadoop -s /bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#passwd hadoop&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;设置密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#adduser hadoop sudo   # 为用户hadoop增加管理员权限&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;配置SSH&quot;&gt;&lt;a href=&quot;#配置SSH&quot; class=&quot;headerlink&quot; title=&quot;配置SSH&quot;&gt;&lt;/a&gt;配置SSH&lt;/h3&gt;&lt;p&gt;完全分布模式和单机伪分布模式都需要用到SSH，以保证在远程管理Hadoop节点以及Hadoop节点间用户共享访问时的安全性。&lt;br&gt;SSH登录类似于远程登录，登录某台Linux主机，并可在上面运行命令。&lt;/p&gt;
&lt;p&gt;1.Ubuntu默认已经安装SSH Client， 我们还要安装SSH Server&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; openssh-&lt;span class=&quot;keyword&quot;&gt;server&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2.在用户hadoop命令行中输入&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;ssh localhost&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;登录到本机，可见此时需要密码才能登录，下面免去此步骤。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hadoop_3a.png&quot; alt=&quot;Hadoop-3&quot;&gt;&lt;/p&gt;
&lt;p&gt;退出刚刚的登录，然后在用户hadoop目录下(~/)新建隐藏目录.ssh，生成密钥对，一直按&lt;enter&gt;键，系统会默认将密钥对保存在.ssh/id_rsa 和 .ssh/id_rsa.pub中&lt;/enter&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight haml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~$ exit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~$ mkdir .ssh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~$ cd .ssh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~/.ssh$ ssh-keygen -t rsa&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hadoop_4a.png&quot; alt=&quot;Hadoop-4&quot;&gt;&lt;/p&gt;
&lt;p&gt;3.然后再执行命令：&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~&lt;span class=&quot;regexp&quot;&gt;/.ssh$ cat ./id&lt;/span&gt;_rsa.pub &lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt; &lt;/span&gt;./authorized_keys&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;4.然后输入&lt;code&gt;ssh localhost&lt;/code&gt;就不再需要密码了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hadoop_5a.png&quot; alt=&quot;Hadoop-5&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;安装Hadoop&quot;&gt;&lt;a href=&quot;#安装Hadoop&quot; class=&quot;headerlink&quot; title=&quot;安装Hadoop&quot;&gt;&lt;/a&gt;安装Hadoop&lt;/h3&gt;&lt;p&gt;1.下载Hadoop包&lt;br&gt;源代码包（需编译）或二进制文件在&lt;a href=&quot;http://hadoop.apache.org/releases.html下载&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://hadoop.apache.org/releases.html下载&lt;/a&gt;&lt;br&gt;编译好的版本(hadoop-2.x.y.tar.gz)或者源代码包(hadoop-2.x.y-src.tar.gz)还可以在 &lt;a href=&quot;http://mirror.bit.edu.cn/apache/hadoop/common/或者&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mirror.bit.edu.cn/apache/hadoop/common/或者&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://mirrors.cnnic.cn/apache/hadoop/common/下载&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mirrors.cnnic.cn/apache/hadoop/common/下载&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2.将下载的Hadoop包（我下载的是hadoop-2.7.3.tar.gz，注意不带src！）移动到/usr/local下，我们将Hadoop安装在这个目录下。&lt;/p&gt;
&lt;p&gt;3.解压&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;-zxvf&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;hadoop-2&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.7&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.3&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.tar&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.gz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;mv&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;hadoop-2&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.7&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.3&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;hadoop&lt;/span&gt;        # 将目录更名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;chown&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;-R&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;hadoop&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;hadoop&lt;/span&gt;        # 更改文件权限&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;虽然Hadoop安装在/usr/local中，也是针对所有用户的，但是我们用账户hadoop来进行整个测试，所以更改文件权限不能不做，否则，在后面&lt;code&gt;./sbin/start-dfs.sh&lt;/code&gt;步会遇到&lt;code&gt;no such file or directory&lt;/code&gt;等错误。&lt;/p&gt;
&lt;p&gt;4.解压后Hadoop即可使用&lt;br&gt;使用如下命令查看是否安装成功&lt;br&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;cd&lt;/span&gt; /usr/&lt;span class=&quot;keyword&quot;&gt;local&lt;/span&gt;/hadoop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./bin/hadoop &lt;span class=&quot;keyword&quot;&gt;version&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hadoop_6.png&quot; alt=&quot;Hadoop-6&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;单机模式配置&quot;&gt;&lt;a href=&quot;#单机模式配置&quot; class=&quot;headerlink&quot; title=&quot;单机模式配置&quot;&gt;&lt;/a&gt;单机模式配置&lt;/h3&gt;&lt;p&gt;单机模式没有守护进程，其实无需进行SSH配置，所以上面SSH配置步可以省略。&lt;/p&gt;
&lt;p&gt;1.打开/usr/local/hadoop/etc/hadoop/hadoop-env.sh&lt;br&gt;2.将&lt;br&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; J&lt;span class=&quot;built_in&quot;&gt;AVA_HOME&lt;/span&gt;=$&amp;#123;J&lt;span class=&quot;built_in&quot;&gt;AVA_HOME&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;处修改为&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; JAVA_HOME=/usr/jdk/jdk1.8.0_101    &lt;span class=&quot;comment&quot;&gt;# 视Java安装位置而定&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; HADOOP_HOME=/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/hadoop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; PATH=&lt;span class=&quot;variable&quot;&gt;$PATH&lt;/span&gt;:/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/hadoop/bin&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后&lt;code&gt;source hadoop-env.sh&lt;/code&gt;以保存修改&lt;/p&gt;
&lt;p&gt;此时单机模式就已配置完成。&lt;/p&gt;
&lt;h3 id=&quot;单机模式测试&quot;&gt;&lt;a href=&quot;#单机模式测试&quot; class=&quot;headerlink&quot; title=&quot;单机模式测试&quot;&gt;&lt;/a&gt;单机模式测试&lt;/h3&gt;&lt;p&gt;1.采用Hadoop自带的示例WordCount来测试单机模式是否安装成功。&lt;/p&gt;
&lt;p&gt;2.在&lt;code&gt;/usr/local/hadoop&lt;/code&gt;路径下创建input目录，然后拷贝统计的输入文件README.txt到input中，然后执行。&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir &lt;span class=&quot;selector-tag&quot;&gt;input&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp README&lt;span class=&quot;selector-class&quot;&gt;.txt&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;input&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bin/hadoop jar share/hadoop/mapreduce/sources/hadoop-mapreduce-examples-&lt;span class=&quot;number&quot;&gt;2.7&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;-sources&lt;span class=&quot;selector-class&quot;&gt;.jar&lt;/span&gt; org&lt;span class=&quot;selector-class&quot;&gt;.apache&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.hadoop&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.examples&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.WordCount&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;input&lt;/span&gt; output&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到输出如下&lt;br&gt;&lt;figure class=&quot;highlight protobuf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;File System Counters&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		FILE: Number of bytes read=&lt;span class=&quot;number&quot;&gt;598380&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		FILE: Number of bytes written=&lt;span class=&quot;number&quot;&gt;1162470&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		FILE: Number of read operations=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		FILE: Number of large read operations=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		FILE: Number of write operations=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Map-Reduce Framework&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Map input records=&lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Map output records=&lt;span class=&quot;number&quot;&gt;179&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Map output bytes=&lt;span class=&quot;number&quot;&gt;2055&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Map output materialized bytes=&lt;span class=&quot;number&quot;&gt;1836&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Input split bytes=&lt;span class=&quot;number&quot;&gt;104&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Combine input records=&lt;span class=&quot;number&quot;&gt;179&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Combine output records=&lt;span class=&quot;number&quot;&gt;131&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Reduce input groups=&lt;span class=&quot;number&quot;&gt;131&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Reduce shuffle bytes=&lt;span class=&quot;number&quot;&gt;1836&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Reduce input records=&lt;span class=&quot;number&quot;&gt;131&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Reduce output records=&lt;span class=&quot;number&quot;&gt;131&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Spilled Records=&lt;span class=&quot;number&quot;&gt;262&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Shuffled Maps =&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Failed Shuffles=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Merged Map outputs=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		GC time elapsed (ms)=&lt;span class=&quot;number&quot;&gt;110&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Total committed heap usage (bytes)=&lt;span class=&quot;number&quot;&gt;242360320&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Shuffle Errors&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		BAD_ID=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		CONNECTION=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		IO_ERROR=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		WRONG_LENGTH=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		WRONG_MAP=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		WRONG_REDUCE=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	File Input Format Counters &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Bytes Read=&lt;span class=&quot;number&quot;&gt;1366&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	File Output Format Counters &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Bytes Written=&lt;span class=&quot;number&quot;&gt;1326&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;即说明配置成功。&lt;br&gt;打开output目录下的part 00000文件，可以看到有每个词的出现次数，即实现了词频统计。&lt;/p&gt;
&lt;p&gt;接下来还将进行伪分布式和集群分布式的配置。&lt;br&gt;见以后的文章。&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;p&gt;[1] &lt;a href=&quot;http://www.powerxing.com/install-hadoop/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.powerxing.com/install-hadoop/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文简要记述了本人参考网上教程在Ubuntu上（虚拟机）搭建Hadoop的过程，以备后用和各位获取。&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Hadoop是当今最流行
    
    </summary>
    
      <category term="大数据处理技术 | Big Data" scheme="http://whatbeg.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF-Big-Data/"/>
    
    
      <category term="Hadoop" scheme="http://whatbeg.com/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>谈谈这个七月</title>
    <link href="http://whatbeg.com/2016/07/29/justtalk01.html"/>
    <id>http://whatbeg.com/2016/07/29/justtalk01.html</id>
    <published>2016-07-29T13:44:06.000Z</published>
    <updated>2016-07-29T13:49:32.599Z</updated>
    
    <content type="html">&lt;p&gt;很久没有写文字了，最近也是挺忙的，工作日忙着工作，周末忙着出去玩。&lt;/p&gt;
&lt;p&gt;想想一个月前毕业之际的情景还历历在目，当时的自己走的爽快，不留下一丝伤感，不带走一丝怀念，等到发觉四年同学真的就分别了， 呆了四年的母校也终究离开了， 还没来得及好好珍惜，却已经迟了。狄更斯有一句话我觉得写得特别好，是在地铁过道里看见的，每次坐地铁回来都会看上几眼，摘自他的《远大前程》，“马换了一次又一次，路越赶越远，再要回去已经来不及了，于是我只得继续往前走。朝雾早已在一片肃穆中消散净尽，那花花世界就展现在我面前。”，是的，再要回去已经来不及了，我们都得继续往前赶，我们都朝着我们美好的未来奔去，愿我们大家都能过上自己想要的生活。&lt;/p&gt;
&lt;p&gt;这段时间作为实习生，没安排什么重要的工作，感觉学习的过程更多，由于投了一个数据研发，以为是做数据分析，结果是做策略，需要各种综合性的知识，作为相关方面的近似小白，我不得不各种看书学习，绝大多数都是 数学，但大抵都学的很浅，姑且只了解了个思想而已，每一门都可以到很深，数学接触多了我发现其实数学基础是很重要的，现实中很多过程都有它的数学描述，尽管可能做了一些合理的或者简化的假设，数学确是解决一些现实问题比如规划，决策问题的好工具，而且我还发现， 大学以及以前的数学教育都充斥着应付考试的教育思想，大多数学生学一门课就是干学知识，学计算方法，对数学知识或者科目的来源，理论基础，思想方法及应用都没什么概念，导致学了不会用，我觉得这个问题很有必要进行一定的改良。当然扯远了，回到话题，最近还是继续补一下数学和统计学习吧，要把打通数学知识网络作为目标，求其上，才有可能得其上。&lt;/p&gt;
&lt;p&gt;除了工作之外，剩下的就是周末出去走了，北京要说能走的地方，说多也不是巨多，但是绝对不算少了，很久以前就已经打算到了这一段时间，，准备利用周末把北京城走个底儿掉。目前已经完成了大半，还剩下故宫，长城，天坛，颐和园，王府井，798艺术区，中国美术馆等等，，最近北京也很热，出去走实在是一种受罪的过程，而且是个稍微热门点的景点都至少得排半个小时队才能进去，不过走过的景点都感觉很好，果然是帝王之地，什刹海，北海让人心旷神怡， 行走其中，努力地去想象先人们在这片土地上生活的景象，仿佛身临其境，与他们有了一个交流，天安门则雄伟壮阔，南锣鼓巷则是小吃街以及各种文艺，创意小店的聚集地，有点像西安的回民街，长沙的太平街，成都的宽窄巷子，南京的夫子庙等等，可能是看了一些类似的地方，感到新奇的不是那么多了，不过文宇奶酪确实可以，口感爽滑，奶香浓溢，推荐。清华北大也不错，都很大，不过都很傲娇，清华周末开放，北大则要放假才开放，两个学校每次进去的人队能排几千米长，足见中国家长和孩子们对最高学府的认可与向往，不过我每次都是机智地从偏门进的。国家博物馆藏品丰富，一路看下来却又感触，不过不了解一些历史，干看好像并看不出啥来，都是一些古人用过的器皿遗物等等，不过也能体会到自古人们就有着伟大的智慧，心灵手巧。恭王府虽极尽奢华，风水宝地，走在其中，仿佛能看到和珅往日的享受，但在现代人看来仍显破了些，但毕竟也是时代所限使然。&lt;/p&gt;
&lt;p&gt;这个月就要结束了，收获不可谓不大，不可谓太大，要学的东西太多，反而顾之无及，看了这个没看那个，周末也鲜有时间充电学习，下个月要做一些实事了，很期待。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;很久没有写文字了，最近也是挺忙的，工作日忙着工作，周末忙着出去玩。&lt;/p&gt;
&lt;p&gt;想想一个月前毕业之际的情景还历历在目，当时的自己走的爽快，不留下一丝伤感，不带走一丝怀念，等到发觉四年同学真的就分别了， 呆了四年的母校也终究离开了， 还没来得及好好珍惜，却已经迟了。狄更斯有
    
    </summary>
    
      <category term="随笔 | Essays" scheme="http://whatbeg.com/categories/%E9%9A%8F%E7%AC%94-Essays/"/>
    
    
      <category term="随笔" scheme="http://whatbeg.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>我的毕业旅行</title>
    <link href="http://whatbeg.com/2016/06/22/graduationtrip.html"/>
    <id>http://whatbeg.com/2016/06/22/graduationtrip.html</id>
    <published>2016-06-22T06:49:04.000Z</published>
    <updated>2016-06-25T06:41:43.253Z</updated>
    
    <content type="html">&lt;p&gt;2016年6月14号，在没有过多准备下，与7位同学一起，开始了一场类似说走就走的毕业旅行。&lt;br&gt;这次旅行以西安为主，后来分开，我们其中四人又转场来到重庆，最后回到成都。在旅行中收获了诸多欢乐，也尝试了许多新奇事物，看到了以前看不到的东西，留下一点小记。&lt;/p&gt;
&lt;p&gt;6月14深夜到达西安站，吃完东西睡到第二天中午，下午开始对西安的游览。&lt;br&gt;来到西安的第一站就来到了大雁塔，但是大雁塔正在修葺，所以外表看上去就有点那啥了，里面则是经典的塔式布局，靠墙是楼梯，中间的空地用来摆放物品，中间通往四个方向，每个方向有一个拱形的窗。虽然大雁塔是玄奘造来收藏经书的塔，但是整个走下来并不能发现到多少痕迹。&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/gt1.jpg-sf&quot; alt=&quot;大雁塔&quot;&gt;&lt;/p&gt;
&lt;p&gt;大雁塔景区旁边有一个地下宫，地下宫走进去一条长廊，壁上的画描述了玄奘一生重大事件，总共120米长，再到里面还有玄奘曾经的袈裟，鞋，背篓等遗物，以上这些是唯一能值回票价的部分了，其余的就呵呵了。石壁上乱刻乱画的现象也很严重，终于见到了所谓的景区乱画现象，这种行为简直让人感到恶心。&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/gt2.jpg-sf&quot; alt=&quot;大雁塔地下宫&quot;&gt;&lt;/p&gt;
&lt;p&gt;游完大雁塔，我们一行来到钟楼，不过白天的钟楼没有其夜景漂亮，就是一座城楼，唯一比较壮观的就是城楼上空有许多的鸟儿盘旋，好像是许多鸟儿在屋檐下做了自己的巢的缘故。&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/gt3.jpg-sf&quot; alt=&quot;白天的钟楼&quot;&gt;&lt;/p&gt;
&lt;p&gt;夜晚的钟楼，灯光闪烁，蔚为壮观。&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/gt4.jpg-sf&quot; alt=&quot;钟楼夜景&quot;&gt;&lt;/p&gt;
&lt;p&gt;钟楼后面，鼓楼附近有一条小吃街，名叫回民街，灯光闪烁，人头攒动，吆喝声四起，热闹得很，属于西安必逛之地，特色小吃，手工艺品都很多，不过逛到后面你就会发现千篇一律，统共的种类也就那么多。就是在这里我吃到了biangbiang面和牛羊肉泡馍，biangbiang面有点像刀削面，但是有裤腰带那么宽，吃起来非常柔软，口感很好，大赞。而牛羊肉泡馍嘛，就呵呵了，第一次吃泡馍往往不会把馍撕得很碎，所以会造成很多馍块烫不熟，影响口感，而且我是实在吃不惯这些干巴巴面食类的东西，所以嘛，就呵呵了。&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/gt5.jpg-sf&quot; alt=&quot;回民街&quot;&gt;&lt;/p&gt;
&lt;p&gt;个人闲照。&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/gt6.jpg-sf&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;第二天安排是跟团游华清宫和兵马俑，这两个地方如果没有导游给你讲点什么，自己看还真不好看出啥意思，下图就是著名的骊山。&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/gt7.jpg-sf&quot; alt=&quot;骊山&quot;&gt;&lt;/p&gt;
&lt;p&gt;骊山脚下的华清宫，当年是唐明皇的行宫，澡堂子，洗澡的地方很多，下图是其中一个，看到这些昔日的汤池，唐皇昔日的享受仿佛至于目前，这是一次与历史的亲密接触，游历史景点，要的就是这种昔日景象仿佛近在眼前的历史感，一旦产生这种感受，就不虚此行了。当天不禁重看了一遍《长恨歌》，虽然在高中学过，但实际上并未对它进行过深刻的品味，因为我们不熟悉这段历史，在后来的日子逐渐对这段历史有了一些了解，然后再到此地，整个过程到此刻为止，突然地对这首诗瞬间产生了深切的感受，简直痛快。&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/gt8.jpg-sf&quot; alt=&quot;莲花汤&quot;&gt;&lt;/p&gt;
&lt;p&gt;贵妃像&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/gt9.jpg-sf&quot; alt=&quot;贵妃像&quot;&gt;&lt;/p&gt;
&lt;p&gt;终于来到了西安最重要的古迹，八大奇迹之一，很震撼。兵马俑的制造工艺极其严格，毕竟是秦始皇为自己造的陵寝，一切以质量为上。&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/gt10.jpg-sf&quot; alt=&quot;兵马俑&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/gt11.jpg-sf&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/gt12.jpg-sf&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/gt13.jpg-sf&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;最后一天下午到了大明宫，然而到这发现好多荒地，荒地前面留块牌子写着这以前是什么什么建筑，反正一行啥也没看到，一个丹凤门，人为迹象也很明显，没啥大意思。&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/gt15.jpg-sf&quot; alt=&quot;丹凤门&quot;&gt;&lt;/p&gt;
&lt;p&gt;17号下午离开西安，西安站对面就是西安城墙，西安的城墙围住了主城区，城墙很高很大，城墙体现了不少古城味道。&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/gt16.jpg-sf&quot; alt=&quot;西安站&quot;&gt;&lt;/p&gt;
&lt;p&gt;18号接着来到重庆，住在解放碑商圈，离解放碑很近，所以去解放碑也很方便，据说解放碑有很多重庆美女，然而我们并未看到很多啊，看到更多的是老头老太太，不过在平常的路上到时看到很多。&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/gt17.jpg-sf6sy&quot; alt=&quot;解放碑&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/gt18.jpg-sf&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/gt19.jpg-sf&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;不巧的是，刚刚玩了一天不到，晚上重庆就开始下大雨，一直到第二天中午还没停，没能坐上游船，也没能去到朝天门码头欣赏一下重庆码头的景象，实属遗憾。&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/gt20.jpg-sf&quot; alt=&quot;洪崖洞夜景&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/gt21.jpg-sf&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;之所以来到重庆，一大半的原因是为了吃，一是想试试重庆的小面，二一个则是重庆火锅了。试了一下小面，味道不错，面条是黄色的，碱面，但是没有我预想的那样好吃。重庆火锅吃了两顿，一顿是在洪崖洞里面吃的，又贵还不咋地，果然是不该去景点吃东西。后一顿是在将要离开的那天中午，选了一家重庆十佳火锅之一的朱氏胖子烂火锅，味道还行，不过感觉也没有胜过其他以前迟到的火锅太多，感觉此类火锅的味道大抵都差不多，火锅的味道一个在底料一个在蘸料，蘸料自己配置，都是由基本的一些调味料组成，所以并没有什么差异，要看自己配制的水平，而底料确实有分别，但是就我吃火锅的经验来看，也没有哪家火锅汤底能有绝顶美味。&lt;br&gt;不知道是不是迟到了还没熟透的肉的原因还是太辣的原因，反正吃完后肚子在很长一段时间都有点不适。&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/gt22.jpg-sf&quot; alt=&quot;重庆火锅&quot;&gt;&lt;/p&gt;
&lt;p&gt;吃完火锅匆匆赶往火车站回成都，就这样结束了6天的毕业旅行，能有这么一帮朋友一起吃喝一起玩，一起逗比一起嗨，也是挺幸福的一件事情，同学即将分别，这份友谊，这份记忆长在。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;2016年6月14号，在没有过多准备下，与7位同学一起，开始了一场类似说走就走的毕业旅行。&lt;br&gt;这次旅行以西安为主，后来分开，我们其中四人又转场来到重庆，最后回到成都。在旅行中收获了诸多欢乐，也尝试了许多新奇事物，看到了以前看不到的东西，留下一点小记。&lt;/p&gt;
&lt;p&gt;6月
    
    </summary>
    
      <category term="随笔 | Essays" scheme="http://whatbeg.com/categories/%E9%9A%8F%E7%AC%94-Essays/"/>
    
    
      <category term="随笔" scheme="http://whatbeg.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>处理地图数据的6种方法</title>
    <link href="http://whatbeg.com/2016/06/03/map.html"/>
    <id>http://whatbeg.com/2016/06/03/map.html</id>
    <published>2016-06-03T06:51:30.000Z</published>
    <updated>2016-06-03T06:56:51.593Z</updated>
    
    <content type="html">&lt;p&gt;最近找到一个网站，&lt;a href=&quot;http://www.pm25x.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.pm25x.com/&lt;/a&gt;，发现上面有全国基本所有市的实时空气质量指数（AQI），就将它们爬了下来，存入了xlsx文件和CSV文件。又想着要利用一下才好，于是想到了描绘全国城市AQI分布图。这时就需要画包括省市的中国地图。&lt;br&gt;最终找到了如下几种方式来根据数据描绘地图：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SVG格式处理来画图，参照《鲜活的数据》&lt;/li&gt;
&lt;li&gt;R语言&lt;/li&gt;
&lt;li&gt;地图慧&lt;/li&gt;
&lt;li&gt;Excel&lt;/li&gt;
&lt;li&gt;地图API&lt;/li&gt;
&lt;li&gt;其他画图工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;SVG&quot;&gt;&lt;a href=&quot;#SVG&quot; class=&quot;headerlink&quot; title=&quot;SVG&quot;&gt;&lt;/a&gt;SVG&lt;/h3&gt;&lt;p&gt;SVG方法在Wiki Creative Commons上没有找到市一级的svg格式的中国地图，并且他那个id我看不懂，不知道代表什么，查了一下中国行政区划编码，没有40开头的，而我下的某一个svg中国地图中有个id是’_40…’，所以排除是行政区划编码，那我就不知道是什么意思了，排除此方法。&lt;/p&gt;
&lt;h3 id=&quot;R语言&quot;&gt;&lt;a href=&quot;#R语言&quot; class=&quot;headerlink&quot; title=&quot;R语言&quot;&gt;&lt;/a&gt;R语言&lt;/h3&gt;&lt;p&gt;R语言有一定的地图处理能力，相信应该可以搞定，但是此前并未接触过R语言，重新学来解决一个简单的问题似乎有点杀鸡用牛刀的感觉，划不来。排除。&lt;br&gt;关于R语言画地图我倒是看到这几篇文章[1],[2],[3]，收藏下。&lt;/p&gt;
&lt;h3 id=&quot;地图慧&quot;&gt;&lt;a href=&quot;#地图慧&quot; class=&quot;headerlink&quot; title=&quot;地图慧&quot;&gt;&lt;/a&gt;地图慧&lt;/h3&gt;&lt;p&gt;地图慧[4]提供在线地图制作，可以精确到市县一级，提供上传xlsx和CSV格式的数据，利用收集的AQI数据做的一副全国城市AQI分布图如下：&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/aqi.png&quot; alt=&quot;全国城市AQI指数分布-5月20日晚&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Excel&quot;&gt;&lt;a href=&quot;#Excel&quot; class=&quot;headerlink&quot; title=&quot;Excel&quot;&gt;&lt;/a&gt;Excel&lt;/h3&gt;&lt;p&gt;采用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OfficeMapFree_setup(2.2007.0.2.1)&lt;/li&gt;
&lt;li&gt;Microsoft Office Excel 2007&lt;br&gt;可以画，没试过，见[5]，[6]&lt;br&gt;WPS好像不得行，在线的有Google Sheet.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;地图API&quot;&gt;&lt;a href=&quot;#地图API&quot; class=&quot;headerlink&quot; title=&quot;地图API&quot;&gt;&lt;/a&gt;地图API&lt;/h3&gt;&lt;p&gt;谷歌地图，百度地图，雅虎地图，Bing地图都有API可供调用，只是需要去了解它们的API，并具有一定的编程技能。&lt;/p&gt;
&lt;h3 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h3&gt;&lt;p&gt;其他制作软件大部分都是英文的，而且有些只能画美国地图，对中国地图来说不是很适合，可以考虑用他们分析美国数据或者世界地图数据，对此问题时间成本太高，排除。&lt;br&gt;不过仍然值得把它们列一下，它们基本来自《鲜活的数据》这本书。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Modest Maps&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.polymaps.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Polymaps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ArcGIS&lt;/li&gt;
&lt;li&gt;Many Eyes&lt;/li&gt;
&lt;li&gt;GeoCommons&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;资料&quot;&gt;&lt;a href=&quot;#资料&quot; class=&quot;headerlink&quot; title=&quot;资料&quot;&gt;&lt;/a&gt;资料&lt;/h3&gt;&lt;p&gt;[1] &lt;a href=&quot;http://cos.name/2013/01/drawing-map-in-r-era/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://cos.name/2013/01/drawing-map-in-r-era/&lt;/a&gt;&lt;br&gt;[2] &lt;a href=&quot;http://cos.name/2009/07/drawing-china-map-using-r/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://cos.name/2009/07/drawing-china-map-using-r/&lt;/a&gt;&lt;br&gt;[3] &lt;a href=&quot;http://xccds1977.blogspot.com/2012/07/blog-post_26.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://xccds1977.blogspot.com/2012/07/blog-post_26.html&lt;/a&gt;&lt;br&gt;[4] &lt;a href=&quot;http://www.dituhui.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;地图慧&lt;/a&gt;&lt;br&gt;[5] &lt;a href=&quot;http://jingyan.baidu.com/article/91f5db1bee10e91c7f05e39d.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Excel 地图&lt;/a&gt;&lt;br&gt;[6] &lt;a href=&quot;http://www.36dsj.com/archives/12053&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Excel 百度迁徙地图&lt;/a&gt;&lt;br&gt;[7] &lt;a href=&quot;http://flowingdata.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Flowing Data&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近找到一个网站，&lt;a href=&quot;http://www.pm25x.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.pm25x.com/&lt;/a&gt;，发现上面有全国基本所有市的实时空气质量指数（AQI），就将它们爬了下来，存入了
    
    </summary>
    
      <category term="数据科学 | Data Science" scheme="http://whatbeg.com/categories/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6-Data-Science/"/>
    
    
      <category term="数据分析" scheme="http://whatbeg.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>【2016读书】5月读书笔记</title>
    <link href="http://whatbeg.com/2016/05/31/2016read-may.html"/>
    <id>http://whatbeg.com/2016/05/31/2016read-may.html</id>
    <published>2016-05-31T03:08:44.000Z</published>
    <updated>2016-05-31T03:40:53.044Z</updated>
    
    <content type="html">&lt;h2 id=&quot;《谁动了我的奶酪》-斯宾塞·约翰逊&quot;&gt;&lt;a href=&quot;#《谁动了我的奶酪》-斯宾塞·约翰逊&quot; class=&quot;headerlink&quot; title=&quot;《谁动了我的奶酪》 斯宾塞·约翰逊&quot;&gt;&lt;/a&gt;《谁动了我的奶酪》 斯宾塞·约翰逊&lt;/h2&gt;&lt;p&gt;这本书故事看来很简单，主要说的就是要拥抱变化，提前察觉变化，做好准备应对变化，尽快适应变化等等。总之就是叫你不要因循守旧，变则通，通则久。&lt;/p&gt;
&lt;h2 id=&quot;《幸福之路》-罗素-刘勃译&quot;&gt;&lt;a href=&quot;#《幸福之路》-罗素-刘勃译&quot; class=&quot;headerlink&quot; title=&quot;《幸福之路》 罗素  (刘勃译)&quot;&gt;&lt;/a&gt;《幸福之路》 罗素  (刘勃译)&lt;/h2&gt;&lt;p&gt;数学专业，获得诺贝尔文学奖的哲学大师罗素在这本书里阐述了我们不快乐的一些原因和如何变得快乐的一些想法，文字很好，娓娓道来，具有很大的思维启发性，可惜有部分地方翻译的别别扭扭，但是还好啦。&lt;br&gt;这本书分两部分，第一部分论述了有哪些原因让我们不快乐，第二部分则论述了我们应该如何去变得快乐幸福，在罗素看来，幸福不是一件会主动落到人们头上的东西，它也是需要人去争取的。我摘出一些觉得可以细细品味的句段如下：&lt;/p&gt;
&lt;h3 id=&quot;第一部分&quot;&gt;&lt;a href=&quot;#第一部分&quot; class=&quot;headerlink&quot; title=&quot;第一部分&quot;&gt;&lt;/a&gt;第一部分&lt;/h3&gt;&lt;p&gt;谈到什么令人不快乐时，他谈到，&lt;br&gt;“随着岁月的流逝，我更加热爱生活了，这部分是因为我发现了什么是我最想要的东西，并且慢慢的得到了不少，还有就是我成功地抛开了一些永远都无法实现的欲望，如获得这个或那个领域确切的知识，但在很大程度上是因为我逐渐减少了对自己的过分关注。…渐渐地我学会了不太在乎自己和自己的缺点，开始将自己的注意力越来越多地放到外部事物上”&lt;br&gt;“工作上的所有真正的成功取决于你对与工作相关的事是否真的感兴趣。”&lt;/p&gt;
&lt;p&gt;论拜伦式痛苦时，他谈到，&lt;br&gt;“聪明人会在环境允许的范围内尽情快乐”，不要故作忧伤，以享受痛苦为荣，而感到自己高人一等，或者装作一副禁欲系的样子，事实上很可能这样的人都不知道为什么要这样。&lt;/p&gt;
&lt;p&gt;论竞争时，他说道，现在的人们过于将竞争胜利看做是幸福的主要源泉了，事实上不值得为了成功而失去其他一些生活中的美好的幸福的要素，而现在普世都看重人的成功，所以我们更应该有自己的独立思考，是不是要随波逐流，还有，“除非一个人知道如何应对自己的成功，否则他的成功定会使其备受煎熬。”&lt;br&gt;要想生活快乐，首先应该具备一定的烦闷耐受力，真正的快乐只能常驻在平静的环境里，过度的兴奋只会让人神经麻痹，最后只留下疲倦，空虚和厌恶感。&lt;br&gt;“有秩序的头脑就是在合适的时间里充分地思考一件事，而不是在所有的时间里断断续续地思考这件事”&lt;br&gt;“必须做出决定时，一旦掌握所有信息，只管给出你的最佳判断就是了，优柔寡断是最劳神的事情了。”&lt;br&gt;“如果知道让我们焦虑的事情并不重要，就会大大减少我们的忧虑”，事实上，我们的行为远没有我们想象的那么重要，放在历史的长河中，我们的成功与失败，欢乐与痛苦都没什么大不了的。&lt;br&gt;“应对各种恐惧的恰当方式就是理性地，镇静地，全神贯注地思考它，知道你熟悉它为止，那样，恐惧就减弱了，我们的思想也转移了”&lt;br&gt;“仅靠成功是不能远离嫉妒的，因为总能找到比你成功的人，要想远离嫉妒，就应该好好享受你面前的快乐，做你必须做的工作，避免与人作比较”&lt;br&gt;“我们小时候听了太多的教育和道德，导致我们很多时候会产生犯罪感，或者出现两个原则的分裂，这时候就应该运用我们的理性深刻地思考，给自己确立一个信念，并且让它成为任何时刻都坚信的准则。”&lt;/p&gt;
&lt;p&gt;论被虐狂：&lt;br&gt;要记住，你的动机并不总像你想的那么无私&lt;br&gt;不要过高估计你的价值&lt;br&gt;不要指望别人也像你一样看重你&lt;br&gt;不要幻想着大多数人总是在想怎么害你&lt;/p&gt;
&lt;p&gt;论舆论恐惧症，&lt;br&gt;人都是欺软怕硬的，如果你显示出了害怕，就等于说你是很好的猎物，而如果你满不在乎，他们就会怀疑自己的力量，进而会放过你。&lt;/p&gt;
&lt;h3 id=&quot;第二部分&quot;&gt;&lt;a href=&quot;#第二部分&quot; class=&quot;headerlink&quot; title=&quot;第二部分&quot;&gt;&lt;/a&gt;第二部分&lt;/h3&gt;&lt;p&gt;对于大多数人来说，快乐的源泉之一就是坚信某事。&lt;br&gt;幸福的秘诀在于，兴趣范围要尽可能地广，尽可能善意地对待你感兴趣的人和物。&lt;br&gt;在所有的小心谨慎中，爱情上的小心谨慎可能是最能毁掉真正幸福的东西了。&lt;br&gt;目标的持续性是获得长久幸福最根本的要素之一。&lt;/p&gt;
&lt;p&gt;总结一下，获得幸福的根本方法有以下几点：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;眼光向外看，不要过分关注自己&lt;/li&gt;
&lt;li&gt;不要人格分裂，让自己的信念一致起来&lt;/li&gt;
&lt;li&gt;动机要纯，比如做一件事最好是因为你喜欢做那件事&lt;/li&gt;
&lt;li&gt;勇敢&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;《数学之美》-吴军&quot;&gt;&lt;a href=&quot;#《数学之美》-吴军&quot; class=&quot;headerlink&quot; title=&quot;《数学之美》  吴军&quot;&gt;&lt;/a&gt;《数学之美》  吴军&lt;/h2&gt;&lt;p&gt;很早就听说了这本书，只是一直没有机会读到，前段时间读完《浪潮之巅》，领略到了吴军博士的作品风采，不禁让我找出这本《数学之美》来读一读，总的来说，吴军博士的作品的特点就是“读着不累，还有收获”，《浪潮之巅》着重介绍了众多处在时代前沿或者曾经赫赫有名的科技公司的历史，而这本《数学之美》则介绍了许多IT领域背后的数学原理，虽然没有那么的详尽，但是做了大概的介绍，绝大部分都浅显易懂。&lt;br&gt;这本书的内容主要围绕作者自己的专业领域–自然语言处理，并延伸到密码学，机器学习，大数据等内容，其中对文字，信息，数字的历史溯源部分尤其有趣，书中还介绍了诸多自然语言处理等领域的大师，以及他们是如何成为一个领域的大师的，正如李星教授所说，成为大师有其必然性，那就是他们的思维方法。&lt;br&gt;书中贯穿着许多科学研究中的重要思维方法，比如生活中大量用到的，真正有用的方法往往是简单而又朴实的。正如爱因斯坦所说，“从希腊哲学到现代物理学的整个科学史中，不断有人力图把表面上极为复杂的自然现象归结为几个简单的基本概念和关系，这就是整个自然哲学的基本原理。”这对我们的思维是一种极大的启发，在我的经验中，当我们去解一个不是太难和繁琐算法题的时候，如果你想着想着，越想越复杂以至于感叹这题怎么这么难，那么多半是你想错了方向，虽然你还是不一定能找到正确的方法，但你基本可以否定那个会很复杂的解法。从大量经验来看，绝大多数算法题的解法都非常地简洁明了，关键在于想不想得到。&lt;br&gt;又比如，做任何事情都有道和术之分，老子讲“道法术”，道是宇宙亘古不变的法则，而数学就是科学之“道”，法是人们根据自然规律总结掌握的做事的一套方法，比如某类知识体系，某种模型等是法，而具体的操作技术则是术，比如编程中API的用法，某些工具的用法等是术。&lt;br&gt;综合来说，&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;“道”即万物变迁循环中亘古不变的规律，在个人层面就是人生境界和价值观，判断坏美丑喜的标准，是生来就有的天赋，不易改变，只能靠长期修养去领悟&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“法”是一套规则体系和原理原则，是实现价值观的指导方针和思路，可因事物内在的变化规律而变化，可通过对长期实践的思考和归纳总结而得出&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“术”是在规则体系指导下的具体操作方法，只要指导原则（法）不变，具体方法可千变万化，术可通过练习获得，亦可通过对法的推理而产生&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;尽管本书已经尽量兼顾细节与通俗，但是仍然有几处地方我觉得有点模糊难懂，比如隐含马尔克夫模型的讲解部分，RSA算法的推导略显跳跃，让人有点摸不着头脑，想要了解只能求助于其他媒介。&lt;br&gt;但是总的来说，这本书对于我们从事计算机行业的年轻人都值得一读，尤其是那些自然语言处理，机器学习，大数据，密码学，搜索引擎领域相关的同学。&lt;/p&gt;
&lt;h2 id=&quot;《我的精神家园》-王小波&quot;&gt;&lt;a href=&quot;#《我的精神家园》-王小波&quot; class=&quot;headerlink&quot; title=&quot;《我的精神家园》 王小波&quot;&gt;&lt;/a&gt;《我的精神家园》 王小波&lt;/h2&gt;&lt;p&gt;王小波的杂文集，他的文字风趣幽默，对时事点评一针见血，直爽率真，毫无避讳，是个真性情的作家，看他的书就感觉很哈皮，但是又真正能领略到其深刻的寓意和主题，回味悠长。很少有杂文能让人看的咯咯发笑的，王小波让我领略到了。值得一读！&lt;/p&gt;
&lt;p&gt;一些书摘：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;人活在世上，不必什么都知道，只知道最好的就够了&lt;/li&gt;
&lt;li&gt;要努力去做事， 拼命地想问题，这才是自己的救星&lt;/li&gt;
&lt;li&gt;欣赏通俗作品有种诀窍，就是不要把它们当真&lt;/li&gt;
&lt;li&gt;青年的动人之处，就在于他们的勇气，和他们的远大前程&lt;/li&gt;
&lt;li&gt;一座城市的历史不可能是别的，只能是它的建筑。…中国有五千年的文明史，这部历史一半写在故纸上，一半埋在地下，只是缺少了一部立在地上的历史，可以供人在其中漫步&lt;/li&gt;
&lt;li&gt;能见到古人所见，感到古人所感，这种感觉就是历史感&lt;/li&gt;
&lt;li&gt;做成一件事，需要比呼吁更大的勇气和努力。要是你有这些勇气和努力，不妨动手去做。要是没这份勇气和努力，不如闭上嘴，省点唾沫，使厕所的墙壁保持清洁&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;《悉达多》-赫尔曼·黑塞&quot;&gt;&lt;a href=&quot;#《悉达多》-赫尔曼·黑塞&quot; class=&quot;headerlink&quot; title=&quot;《悉达多》 赫尔曼·黑塞&quot;&gt;&lt;/a&gt;《悉达多》 赫尔曼·黑塞&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;一个人如果不能给予快乐就无法获得快乐&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;黑塞最有名的哲学小说，以前从未接触过哲学小说，是偶然看到，然后评分也不错才看的，说实话拿到这本书我首先把序读了一遍，感觉可以试读一下，实在不行再放弃也不迟，然后当晚读到深夜，第二天就读完了。&lt;br&gt;本书讲述了一个灵魂从圣洁到污浊到重回圣洁，一个自我从探求，到迷失，再到最终寻求到自我知道的过程。&lt;br&gt;悉达多从小有一个很好地家庭环境，并受到很好地教育，本人也很聪颖，可是当他长大以后他却发现婆罗门的那些教义根本没什么用，按他所说，言辞无法表达智慧，一个人无法学习到智慧，他想找的是自我，自我的教义，他想寻找自我的智慧，于是他毅然辞别父母，去到远方师从沙门（苦行者），在他们哪里他学到了很多，但是他发现老沙门也无法得道，又去找佛陀乔达摩求道，乔达摩个人的举止和内心的安宁让他膜拜不已，在他心中，乔达摩就是得道者，可是他仍知道，乔达摩的智慧不是他自己的智慧，他无法学到他的智慧，于是他继续寻找，而他的同行者做了佛陀的弟子。他来到一座大城，想向名妓伽摩拉学习情爱，伽摩拉问他会什么，他说他会等待，思考和斋戒，凭着这三样东西，他迅速地从伽摩斯瓦弥那里挣到了自己的财富，于是便一发不可收拾，他逐渐沉溺于世俗的享乐，丢掉了自己的本心，最后他突然醒悟，对自己的样子恶性不已，于是抛掉一切，回到当年来的河边，与一个船夫生活在一起，每日向河流学习，从河流中悟道，最后经过种种际遇，终于悟到了世界的圆融统一。&lt;br&gt;世界周而复始，循环往复，我们每个个体都只是微小的一环。&lt;br&gt;人们可以寻见智慧，在生命中体现智慧，以智慧自强，以智慧来创造奇迹，但人们不可能去传授智慧。&lt;br&gt;学会热爱这个世界，热爱她的本来面目。&lt;/p&gt;
&lt;p&gt;叙述一遍故事可能并不是一个好主意。但是这种书的特点就是带着神秘，晦涩，有很多地方难以理解，不想其他书看着就懂，需要靠自身的经验与体悟去读他，也要靠自身经验事物才能获得自身的智慧。&lt;/p&gt;
&lt;h2 id=&quot;《从一到无穷大》-G-伽莫夫&quot;&gt;&lt;a href=&quot;#《从一到无穷大》-G-伽莫夫&quot; class=&quot;headerlink&quot; title=&quot;《从一到无穷大》 G.伽莫夫&quot;&gt;&lt;/a&gt;《从一到无穷大》 G.伽莫夫&lt;/h2&gt;&lt;p&gt;一本很好的科普书，从数学讲到空间，时间，相对论，微观世界，生物学，物理学，化学，再到宏观世界，宇宙以及宇宙的起源等等。&lt;br&gt;不求全部读懂，不过真的收获不少，读的时候有一种复习高中物理化学生物的感觉。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;《谁动了我的奶酪》-斯宾塞·约翰逊&quot;&gt;&lt;a href=&quot;#《谁动了我的奶酪》-斯宾塞·约翰逊&quot; class=&quot;headerlink&quot; title=&quot;《谁动了我的奶酪》 斯宾塞·约翰逊&quot;&gt;&lt;/a&gt;《谁动了我的奶酪》 斯宾塞·约翰逊&lt;/h2&gt;&lt;p&gt;这本书故事看来很简单
    
    </summary>
    
      <category term="读书 | Reading" scheme="http://whatbeg.com/categories/%E8%AF%BB%E4%B9%A6-Reading/"/>
    
    
      <category term="读书" scheme="http://whatbeg.com/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>当我谈写作时我谈些什么</title>
    <link href="http://whatbeg.com/2016/05/23/talkwrite.html"/>
    <id>http://whatbeg.com/2016/05/23/talkwrite.html</id>
    <published>2016-05-23T13:50:51.000Z</published>
    <updated>2016-05-24T13:26:01.474Z</updated>
    
    <content type="html">&lt;p&gt;论文初稿终于告成，又可以偷得浮生几日闲了，上次谈了谈&lt;a href=&quot;http://whatbeg.com/2016/05/02/talkread.html&quot;&gt;阅读&lt;/a&gt;，这次来说说写作这件事儿。&lt;/p&gt;
&lt;p&gt;笔者最早接触博客是在2012年，1月17日注册了新浪博客，那时候韩寒和方舟子在博客上打笔仗闹得正欢，为了更加密切的关注，就顺手注册了一个新浪博客。后来也发了一些个文章，现在回去看那些文字真是有点哭笑不得。&lt;/p&gt;
&lt;p&gt;时隔两年，时间来到2013年12月份，我注册了博客园，开始写“技术博客”，其实刚开始并不是想写技术博客才注册的，只是想记录自己不会做或者做错的一些算法题而已，到后来慢慢地写一些自己觉得值得分享的算法题的题解，再后来就慢慢地什么都写了，在我的老博客中有390多篇文章，2年多的时间写了那么多，是有多爱分享。。其中大部分是算法题的解题报告，还有一些比赛的解题报告，解题报告的特点在于篇幅不长，一般简单描述一下问题和解法，再贴上代码，就完成了，所以还是不太费时间的。&lt;/p&gt;
&lt;p&gt;在一些博客网站上都写过文章，比如新浪，网易，博客园，CSDN等等，感觉各有不同：新浪写写随笔什么的，发个长微博还行，写技术文章的话还是算了，对代码不友好，而且没什么开发者会天天登新浪去看文章，而且新浪广告太多，太多，太多，对用户太不友好；网易的话广告要少一些，但是好像没什么人看。博客园简洁，广告少，开发者多至少前几年是这样的，但是笔者也提几点问题，不是用得着菩萨求菩萨，用不着菩萨骂菩萨，而是客观地提几点：一是主题太丑，严苛一点说，除了笔者现在用的这款比较好看之外，其它无疑都很丑，想套用一句王者荣耀中张良的台词，“伤心不是哭的理由，傻才是”，追求简洁不应该是丑的理由，懒才是，二是现在明显感觉到博客园首页文章质量在下降，大牛在减少，是时候想点办法了。笔者离开博客园还有一个原因就是这是一个.NET,C#,前端等技术风靡的站点，这类技术的开发者居多，其他技术内容得不到太大的关注，所以注定基因不合适，虽然现在在博客园写各种技术和人生经历的文章也多了起来。CSDN的话界面笔者也不喜欢，虽然这个平台开发者众多，主题也多，但是正是主题太多，导致几乎没有其首页的概念，太过宽泛，多看看可以，写的话就算了，评论也不友好，每次很久才能评上一条。这些种种再加上独立博客已经建成，域名也买了，是时候进入一个独立发展的阶段了，时间在向前推移，在某些阶段就会发生某些故事，不是么？&lt;/p&gt;
&lt;p&gt;其实笔者的写作目标很简单，就是写出一些既有益又有趣的东西，这里其实就是向内和向外两种，对自己有益是向内，对他人有益和有趣是向外的，内外兼修是我的目标，嘻嘻。如果我觉得一篇文章写出来对自己或者对读者有益，那么不妨一写，对自己有益的有比如知识的梳理总结，备忘的内容，某些错误解决过程，或者自己写着开心的随笔等等，对他人有益的包括经验类文章，知识总结，错误解决的过程，搜集整理类，推荐类文章等等。&lt;/p&gt;
&lt;p&gt;小时候觉得作文是很难写的，每次写作文都要斟酌叙旧才能动笔，而且总感觉写的不好。其实是因为那时候要写的不是自己想写的，作为一个理工科的男生，我表示正式作文这么多年写的议论文外的文章不超过3篇，而且写记叙文什么的得分还超低，直接没信心了，议论文的话大体有一个固定的格式，说明一下论点，举几个名人的例子，可怜那些名人尤其是某几个，自己一个故事被中国无数中小学生举了无数遍。。长大了发现，其实写文章没那么难，自己想写什么就写什么就行了，我们不是搞文学创作的，没必要过分斟酌语言，语言朴实，把想说的说清楚就可以了，这样想来，其实挺简单的。&lt;/p&gt;
&lt;p&gt;在杂文上，我喜欢王小波式的文风，针砭时弊，对很多社会问题提出了自己的见解，文笔幽默，坦率真实，看他的杂文集简直是一种享受，我蛮希望自己也能写出这样的文章。在哲理散文中，我喜欢罗素，尼采那样的讲述，并没有太多晦涩的哲学术语，尤其是罗素先生，他的《幸福之路》面向普罗大众，文章平实但又发人深省，妙语不断。而尼采而没有那么好懂了，但是他的语句往往揭示一种普遍规律与法则而不是具体问题的分析，大概这就是哲学家吧。我喜欢这种哲学，受尼采先生的影响，我经常也会思考并写下一些我对事物或人情的一些根本法则，并自以为在寻求智慧，其乐无穷。&lt;/p&gt;
&lt;p&gt;关于写作与个人经历的丰富程度的关系，笔者还是赞同作者的经历能够使作品更加丰富，至少他的经历可以成为向内写的素材。我看很多文章集都有一个共同的特点，就是文章会掺杂着作者许多的经历，看王小波的杂文往往可以看到他写自己上山下乡的经历，进场的经历，与社会各路人士打交道的经历；看吴军的《浪潮之巅》，其中也会写道很多自己在谷歌时的经历；如果没有这些经历，我想，能写的应该少很多吧。&lt;/p&gt;
&lt;p&gt;当然不爱写作的自是可以不写，一个人不需要写多少字也能过这一生，所以写作只是作为一种兴趣爱好吧，笔者写作的核心就是热爱写作，热爱分享，这两点是支撑我写下去的主要原因，不管多没时间，有好的题目好的想法就像动动笔把它记下来。&lt;/p&gt;
&lt;p&gt;希望我能将这份热爱保持下去，直到老了写不动了为止。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;2016.5.23 于成都&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;论文初稿终于告成，又可以偷得浮生几日闲了，上次谈了谈&lt;a href=&quot;http://whatbeg.com/2016/05/02/talkread.html&quot;&gt;阅读&lt;/a&gt;，这次来说说写作这件事儿。&lt;/p&gt;
&lt;p&gt;笔者最早接触博客是在2012年，1月17日注册了新浪博客，那
    
    </summary>
    
      <category term="随笔 | Essays" scheme="http://whatbeg.com/categories/%E9%9A%8F%E7%AC%94-Essays/"/>
    
    
      <category term="随笔" scheme="http://whatbeg.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>快速入门Scrapy(一)--简书打赏</title>
    <link href="http://whatbeg.com/2016/05/19/learnscrapy.html"/>
    <id>http://whatbeg.com/2016/05/19/learnscrapy.html</id>
    <published>2016-05-19T08:39:52.000Z</published>
    <updated>2016-05-21T07:20:14.476Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Scrapy是什么？&quot;&gt;&lt;a href=&quot;#Scrapy是什么？&quot; class=&quot;headerlink&quot; title=&quot;Scrapy是什么？&quot;&gt;&lt;/a&gt;Scrapy是什么？&lt;/h2&gt;&lt;p&gt;Scrapy是一款网络爬虫框架，官方文档的描述如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Scrapy是一个为了爬取网站数据，提取结构性数据而编写的应用框架。 可以应用在包括数据挖掘，信息处理或存储历史数据等一系列的程序中。&lt;/p&gt;
&lt;p&gt;其最初是为了 页面抓取 (更确切来说, 网络抓取 )所设计的， 也可以应用在获取API所返回的数据(例如 Amazon Associates Web Services ) 或者通用的网络爬虫。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以前写小型爬虫的话还可以自己写，用urllib,BeautifulSoup,Requests什么的就能解决了，后来我发现遇到一个新问题又得重新来一遍这些代码，又得去看前面是怎么写的，而且自己写容易怎么高兴怎么来，代码写的太乱，不好维护，过段时间再来看又要花时间才能看懂。&lt;/p&gt;
&lt;p&gt;用框架的好处就是代码结构清晰，代码重用，不用对新的问题又重新来一遍代码，而且功能更强大，能快速解决自己手写代码所不能短时间解决的问题。&lt;/p&gt;
&lt;h2 id=&quot;平台&quot;&gt;&lt;a href=&quot;#平台&quot; class=&quot;headerlink&quot; title=&quot;平台&quot;&gt;&lt;/a&gt;平台&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Windows 8.1&lt;/li&gt;
&lt;li&gt;Python 2.7.10&lt;/li&gt;
&lt;li&gt;简书&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Scrapy安装&quot;&gt;&lt;a href=&quot;#Scrapy安装&quot; class=&quot;headerlink&quot; title=&quot;Scrapy安装&quot;&gt;&lt;/a&gt;Scrapy安装&lt;/h2&gt;&lt;p&gt;Scrapy完美支持Python 2.x，虽然现在已经慢慢在支持Python 3.x了，但是可能还会遇到不少情况。我刚开始学习Scrapy想用Python 3.5的，都安装好了，但是运行的时候还是有引包错误：&lt;br&gt;&lt;figure class=&quot;highlight qml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;ImportError&lt;/span&gt;: cannot &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;string&quot;&gt; module &#39;_win32stdio&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;搜了一些，也没有解决，而且后面可能还会有很多问题，就暂时等一等它们的更新吧，先用回2.7，解决问题再说。&lt;br&gt;（By the way,看到了下面这个）&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/scrapy5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在Windows,Python 3.x下不能简单的&lt;code&gt;pip install scrapy&lt;/code&gt;来一条龙安装scrapy，因为中间会出一些错误。&lt;br&gt;我参考了 &lt;a href=&quot;http://www.cnblogs.com/silverbullet11/p/4966608.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【1】&lt;/a&gt; 以及 &lt;a href=&quot;https://www.webucator.com/blog/2015/03/how-to-install-lxml-for-python-3-on-64-bit-windows/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【2】&lt;/a&gt;，采用安装wheel文件的方式极其有效。&lt;/p&gt;
&lt;h3 id=&quot;Python-3-5下Scrapy安装&quot;&gt;&lt;a href=&quot;#Python-3-5下Scrapy安装&quot; class=&quot;headerlink&quot; title=&quot;Python 3.5下Scrapy安装&quot;&gt;&lt;/a&gt;Python 3.5下Scrapy安装&lt;/h3&gt;&lt;p&gt;1.安装Python，这个不说了&lt;br&gt;2.去&lt;a href=&quot;http://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml&lt;/a&gt;下载合适你的Python版本的lxml的wheel文件，我下载的是&lt;code&gt;lxml-3.4.4-cp35-none-win32.whl&lt;/code&gt;，下载3.6.0版本好像不得行，在我的平台上报错：&lt;br&gt;&lt;code&gt;lxml-3.6.0-cp35-cp35m-win32.whl is not a supported wheel on this platform&lt;/code&gt;，不支持我的平台。&lt;/p&gt;
&lt;p&gt;下载完后，将whl文件拷贝到Python安装目录下，然后cmd进入到你的Python安装目录，运行&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;pip3&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;lxml-3&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.4&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.4-cp35-none-win32&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.whl&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后运行：&lt;br&gt;&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip3 &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; scrapy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在cmd中输入scrapy，如果输出版本信息并没有报错，那么恭喜你，搞定了，是不是很爽！&lt;/p&gt;
&lt;h3 id=&quot;Python-2-7下Scrapy的安装&quot;&gt;&lt;a href=&quot;#Python-2-7下Scrapy的安装&quot; class=&quot;headerlink&quot; title=&quot;Python 2.7下Scrapy的安装&quot;&gt;&lt;/a&gt;Python 2.7下Scrapy的安装&lt;/h3&gt;&lt;p&gt;Python2.7下直接&lt;code&gt;pip install scrapy&lt;/code&gt;，如果报错，看报错的内容是什么，找出问题出在哪个依赖包上，在网上搜索该包的whl文件（符合版本），直接pip install whl文件 来安装就好了。我是问题处在twisted包上，所以去网上下载了老版本的twisted安装的。&lt;/p&gt;
&lt;h2 id=&quot;开始项目&quot;&gt;&lt;a href=&quot;#开始项目&quot; class=&quot;headerlink&quot; title=&quot;开始项目&quot;&gt;&lt;/a&gt;开始项目&lt;/h2&gt;&lt;p&gt;我们将所学的马上利用到实际问题中来。[5]&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;爬取简书首页文章的打赏描述和打赏数，以企获得打赏描述对打赏数的影响&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其实打赏数这个东西和文章的质量是最相关的，但是通过大量数据的挖掘统计，是否能将这种相关性弱化一下，从而显露出打赏描述和打赏数的关系呢？这就有趣了，值得研究。而且还可以同时学习框架和做有趣的事，岂不是人生一大乐趣。&lt;/p&gt;
&lt;h3 id=&quot;创建Scrapy项目&quot;&gt;&lt;a href=&quot;#创建Scrapy项目&quot; class=&quot;headerlink&quot; title=&quot;创建Scrapy项目&quot;&gt;&lt;/a&gt;创建Scrapy项目&lt;/h3&gt;&lt;p&gt;通过如下语句创建Scrapy项目：&lt;br&gt;&lt;figure class=&quot;highlight gcode&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;scrapy startproject jia&lt;span class=&quot;symbol&quot;&gt;nshu2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后会生成一个目录jianshu，目录结构如下：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;jianshu/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scrapy&lt;span class=&quot;selector-class&quot;&gt;.cfg&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jianshu/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        __init__&lt;span class=&quot;selector-class&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        items&lt;span class=&quot;selector-class&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pipelines&lt;span class=&quot;selector-class&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        settings&lt;span class=&quot;selector-class&quot;&gt;.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        spiders/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            __init__.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;spiders目录存放主爬取代码，是整个项目的核心。需要在spider下自己新建自己的爬取程序。&lt;/li&gt;
&lt;li&gt;scrapy.cfg是项目的配置文件。&lt;/li&gt;
&lt;li&gt;settings.py是项目的设置文件。&lt;/li&gt;
&lt;li&gt;items.py定义我们要爬取的字段信息。&lt;/li&gt;
&lt;li&gt;pipelines.py是项目的管道文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;定义items-py&quot;&gt;&lt;a href=&quot;#定义items-py&quot; class=&quot;headerlink&quot; title=&quot;定义items.py&quot;&gt;&lt;/a&gt;定义items.py&lt;/h3&gt;&lt;p&gt;首先定义我们需要爬取的字段：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; scrapy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Jianshu2Item&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(scrapy.Item)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# define the fields for your item here like:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# name = scrapy.Field()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url = scrapy.Field()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    likeNum = scrapy.Field()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;编写主爬程序&quot;&gt;&lt;a href=&quot;#编写主爬程序&quot; class=&quot;headerlink&quot; title=&quot;编写主爬程序&quot;&gt;&lt;/a&gt;编写主爬程序&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; scrapy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;postSpider&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(scrapy.spiders.Spider)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name = &lt;span class=&quot;string&quot;&gt;&#39;post&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    start_urls = [&lt;span class=&quot;string&quot;&gt;&#39;http://www.jianshu.com&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, response)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        articles = response.xpath(&lt;span class=&quot;string&quot;&gt;&#39;//ul[@class=&quot;article-list thumbnails&quot;]/li&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; article &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; articles:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            url = article.xpath(&lt;span class=&quot;string&quot;&gt;&#39;div/h4/a/@href&#39;&lt;/span&gt;).extract()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            likeNum = article.xpath(&lt;span class=&quot;string&quot;&gt;&#39;div/div/span[2]/text()&#39;&lt;/span&gt;).extract()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(url,likeNum)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后试着运行：&lt;br&gt;&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;scrapy crawl &lt;span class=&quot;built_in&quot;&gt;post&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;来运行我们的爬虫，中间又报了一次”No module named win32api”错误，直接pip install pypiwin32即可。&lt;br&gt;然后可以看到正确运行了，爬取了20篇文章后，爬虫自动停止，cmd中打印正常。&lt;br&gt;中间用到了XPath来解析HTML，找到元素具体的位置，我们找到首页的HTML的第一篇文章：&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/scrapy1.png&quot; alt=&quot;First Post&quot;&gt;&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;articles = response.xpath(&lt;span class=&quot;string&quot;&gt;&#39;//ul[@class=&quot;article-list thumbnails&quot;]/li&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这句找到所有文章的HTML段，response是我们爬取时服务器返回的HTML。&lt;br&gt;我们看到所有文章都包含在&lt;code&gt;&amp;lt;ul class=&amp;quot;article-list thumbnails&amp;quot;&amp;gt;&lt;/code&gt;中，并且以&lt;code&gt;&amp;lt;li class=have-img&amp;gt;&lt;/code&gt;开头，所以就不难理解XPath中为什么这么写了。&lt;br&gt;有BeautifulSoup基础的同学应该很好理解XPath了。&lt;/p&gt;
&lt;h3 id=&quot;使用Item&quot;&gt;&lt;a href=&quot;#使用Item&quot; class=&quot;headerlink&quot; title=&quot;使用Item&quot;&gt;&lt;/a&gt;使用Item&lt;/h3&gt;&lt;p&gt;我们爬取数据肯定不是为了打印出来看一下就算了，而是想要保存数据，一般来说，Spider爬取到数据之后通过items返回，还记得我们之前定义的items么，这时候就可以派上用场了。&lt;br&gt;写出完整代码：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; scrapy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; jianshu2.items &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Jianshu2Item&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;postSpider&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(scrapy.spiders.Spider)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name = &lt;span class=&quot;string&quot;&gt;&#39;post&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    start_urls = [&lt;span class=&quot;string&quot;&gt;&#39;http://www.jianshu.com&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, response)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        articles = response.xpath(&lt;span class=&quot;string&quot;&gt;&#39;//ul[@class=&quot;article-list thumbnails&quot;]/li&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; article &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; articles:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            url = article.xpath(&lt;span class=&quot;string&quot;&gt;&#39;div/h4/a/@href&#39;&lt;/span&gt;).extract()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            likeNum = article.xpath(&lt;span class=&quot;string&quot;&gt;&#39;div/div/span[2]/text()&#39;&lt;/span&gt;).extract()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item = Jianshu2Item()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item[&lt;span class=&quot;string&quot;&gt;&#39;url&#39;&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39;http://www.jianshu.com/&#39;&lt;/span&gt;+url[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; likeNum == []:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;#print(url,likeNum)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                item[&lt;span class=&quot;string&quot;&gt;&#39;likeNum&#39;&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;#print(url,int(likeNum[0].split(&#39; &#39;)[-1]))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                item[&lt;span class=&quot;string&quot;&gt;&#39;likeNum&#39;&lt;/span&gt;] = int(likeNum[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].split(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt; item&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;执行&lt;code&gt;scrapy crawl post -o items.json&lt;/code&gt;就把数据保存到json中了。&lt;br&gt;yield 语句提交item。&lt;br&gt;注意打赏有可能没有，所以span也没有，这里判断一下。&lt;/p&gt;
&lt;p&gt;数据如下：&lt;br&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.jianshu.com//p/6d7bf7d611aa&quot;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;&quot;likeNum&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.jianshu.com//p/e47d86ce78d4&quot;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;&quot;likeNum&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.jianshu.com//p/e69606806d6c&quot;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;&quot;likeNum&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.jianshu.com//p/d7159874c59c&quot;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;&quot;likeNum&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.jianshu.com//p/d38e8074ae94&quot;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;&quot;likeNum&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.jianshu.com//p/6c8a0d0447cd&quot;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;&quot;likeNum&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.jianshu.com//p/beff4ff80b25&quot;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;&quot;likeNum&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.jianshu.com//p/d7e626cf02d7&quot;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;&quot;likeNum&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.jianshu.com//p/524b13db9ce3&quot;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;&quot;likeNum&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.jianshu.com//p/39449bcf9c28&quot;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;&quot;likeNum&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.jianshu.com//p/970412b3c34d&quot;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;&quot;likeNum&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.jianshu.com//p/2f98170f6eda&quot;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;&quot;likeNum&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.jianshu.com//p/e91ab8e7a517&quot;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;&quot;likeNum&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.jianshu.com//p/59a6caf3d965&quot;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;&quot;likeNum&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.jianshu.com//p/ee5432e57dd3&quot;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;&quot;likeNum&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.jianshu.com//p/00b7662bd335&quot;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;&quot;likeNum&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.jianshu.com//p/1815b4071362&quot;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;&quot;likeNum&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.jianshu.com//p/b00f7a2f0295&quot;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;&quot;likeNum&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.jianshu.com//p/7f5fc5a01b75&quot;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;&quot;likeNum&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;attr&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;http://www.jianshu.com//p/84c10f2cf100&quot;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;&quot;likeNum&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们想将数据直接存在CSV这样的文件中怎么办呢？方法就是使用&lt;a href=&quot;http://scrapy-chs.readthedocs.io/zh_CN/latest/topics/feed-exports.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Feed exports&lt;/a&gt;，在settings.py文件中添加：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;FEED_URI=&lt;span class=&quot;string&quot;&gt;u&#39;D:\Python27\jianshu2\jianshu2\spiders\data.csv&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FEED_FORMAT=&lt;span class=&quot;string&quot;&gt;&#39;CSV&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一次运行&lt;code&gt;scrapy crawl post -o data.csv&lt;/code&gt;，然后后面不用加-o data.csv，即可输出到data.csv中。&lt;/p&gt;
&lt;h3 id=&quot;获取打赏描述&quot;&gt;&lt;a href=&quot;#获取打赏描述&quot; class=&quot;headerlink&quot; title=&quot;获取打赏描述&quot;&gt;&lt;/a&gt;获取打赏描述&lt;/h3&gt;&lt;p&gt;我们已经获得了url和打赏数，这已经是一个巨大的进步了。&lt;br&gt;然而我们还需要根据这个url再进一步爬到文章里面去，并且我们希望在一个爬虫里面就解决了，不想搞很多爬虫。&lt;br&gt;这时候问题转化为： 如何爬取需要的属性在不同页面的items？&lt;br&gt;这时候我们加一个属性’quote’，这个属性在打开url的页面中。&lt;br&gt;这时候，看到&lt;a href=&quot;http://scrapy-chs.readthedocs.io/zh_CN/latest/topics/request-response.html#passing-additional-data-to-callback-functions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;，仿照它的写法，通过meta传递item参数，即相当于&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;主函数先确定一些参数(‘url’,’likeNum’)，剩下的交给另一个函数去做，然后另一个函数算出’quote’参数后把item还给主函数，主函数整合一下item，然后yield生成就好了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;部分代码：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;request = Request(posturl,callback=self.parse_donate)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;request.meta[&lt;span class=&quot;string&quot;&gt;&#39;item&#39;&lt;/span&gt;] = item&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt; request&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;parse_donate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, response)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        donate = response.xpath(&lt;span class=&quot;string&quot;&gt;&#39;//div[@class=&quot;support-author&quot;]/p/text()&#39;&lt;/span&gt;).extract()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        item = response.meta[&lt;span class=&quot;string&quot;&gt;&#39;item&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(str(donate)) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item[&lt;span class=&quot;string&quot;&gt;&#39;quote&#39;&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item[&lt;span class=&quot;string&quot;&gt;&#39;quote&#39;&lt;/span&gt;] = str(donate[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].encode(&lt;span class=&quot;string&quot;&gt;&#39;utf-8&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; item&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;爬取多页&quot;&gt;&lt;a href=&quot;#爬取多页&quot; class=&quot;headerlink&quot; title=&quot;爬取多页&quot;&gt;&lt;/a&gt;爬取多页&lt;/h3&gt;&lt;p&gt;这时候我们发现爬的太少了，只有20篇。又看到首页下面有一个【点击查看更多】按钮，我们试着在代码中‘按下’这个按钮，然后获取下面内容的url，递归调用parse即可添加更多的文章。&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;next_link = selector.xpath(&lt;span class=&quot;string&quot;&gt;&#39;//*[@id=&quot;list-container&quot;]/div[@class=&quot;load-more&quot;]/button/@data-url&#39;&lt;/span&gt;).extract()[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; next_link:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            next_link = self.url + str(next_link)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt; Request(next_link,callback=self.parse)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;使用Pipeline&quot;&gt;&lt;a href=&quot;#使用Pipeline&quot; class=&quot;headerlink&quot; title=&quot;使用Pipeline&quot;&gt;&lt;/a&gt;使用Pipeline&lt;/h3&gt;&lt;p&gt;有了item之后，item会被传递给Item Pipeline，我们可以在pipelines.py中对item做一些操作，比如写到json文件中。&lt;/p&gt;
&lt;p&gt;Item Pipeline的典型应用如下，更多见中文文档。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;清洗HTML数据&lt;/li&gt;
&lt;li&gt;验证item中的数据&lt;/li&gt;
&lt;li&gt;查重或者丢弃&lt;/li&gt;
&lt;li&gt;保存结果到文件(json,数据库,csv等）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;于是我们编写pipelines.py如下，将item数据写入到json文件中：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; codecs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Jianshu2Pipeline&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	self.file = codecs.open(&lt;span class=&quot;string&quot;&gt;&#39;items.json&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;wb&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;utf-8&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;process_item&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, item, spider)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        line = json.dumps(dict(item)) + &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.file.write(line.decode(&lt;span class=&quot;string&quot;&gt;&quot;unicode_escape&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; item&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;不得不用codecs来解决编码问题。Python在Windows下的编码真让人头疼。&lt;br&gt;这时候我们写道json中，其实url都可以去掉了，我们并不关心。&lt;br&gt;效果如下：&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/scrapy3.png&quot; alt=&quot;Result&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;合并打赏描述，根据打赏数排序&quot;&gt;&lt;a href=&quot;#合并打赏描述，根据打赏数排序&quot; class=&quot;headerlink&quot; title=&quot;合并打赏描述，根据打赏数排序&quot;&gt;&lt;/a&gt;合并打赏描述，根据打赏数排序&lt;/h3&gt;&lt;p&gt;修改pipelines.py文件，用一个全局的字典dict记录每种语句的打赏数之和，然后根据打赏数排序，写到新的csv文件中。&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; codecs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; operator &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; itemgetter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Jianshu2Pipeline&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    self.file = codecs.open(&lt;span class=&quot;string&quot;&gt;&#39;items.json&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;wb&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;utf-8&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    self.quote = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    self.filecsv = codecs.open(&lt;span class=&quot;string&quot;&gt;&#39;items.csv&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;utf-8&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;process_item&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, item, spider)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        line = json.dumps(dict(item)) + &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.file.write(line.decode(&lt;span class=&quot;string&quot;&gt;&quot;unicode_escape&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; item[&lt;span class=&quot;string&quot;&gt;&#39;quote&#39;&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; self.quote.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.quote[item[&lt;span class=&quot;string&quot;&gt;&#39;quote&#39;&lt;/span&gt;]] += item[&lt;span class=&quot;string&quot;&gt;&#39;likeNum&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.quote[item[&lt;span class=&quot;string&quot;&gt;&#39;quote&#39;&lt;/span&gt;]] = item[&lt;span class=&quot;string&quot;&gt;&#39;likeNum&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.filecsv.seek(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lis = sorted(self.quote.items(),key=itemgetter(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),reverse=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(lis)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            line2 = lis[i][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + &lt;span class=&quot;string&quot;&gt;&#39;\t&#39;&lt;/span&gt; + str(lis[i][&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]) + &lt;span class=&quot;string&quot;&gt;&#39;\r\n&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.filecsv.write(line2.decode(&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; item&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/scrapy4.png&quot; alt=&quot;排序后结果&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;结语&quot;&gt;&lt;a href=&quot;#结语&quot; class=&quot;headerlink&quot; title=&quot;结语&quot;&gt;&lt;/a&gt;结语&lt;/h2&gt;&lt;p&gt;由结果可以看出，第一条打赏数最多，不难理解，因为这句是默认的打赏描述，所以使用的基数很大，所以不能说明什么。由于数据量太少，只能爬6页，所以还不是很能说明问题。但是学习scrapy，了解scrapy的目的已经初步达到了，虽然还只是初步学习。但是找出统计上相对能够吸引人打赏的描述的目的还没有达到，需要加大数据量。&lt;/p&gt;
&lt;p&gt;由结果还可以看出，其实打赏描述的个性化挺强的，很多都是个人信息。所以呢，还是要大数据。&lt;/p&gt;
&lt;p&gt;查看源码点击进入我的Github: &lt;a href=&quot;https://github.com/whatbeg/jianshudonate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;本文源码&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;p&gt;[1] &lt;a href=&quot;http://www.cnblogs.com/silverbullet11/p/4966608.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Windows上Python3.5安装Scrapy(lxml)&lt;/a&gt;&lt;br&gt;[2] &lt;a href=&quot;https://www.webucator.com/blog/2015/03/how-to-install-lxml-for-python-3-on-64-bit-windows/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to install LXML for Python 3 on 64-bit Windows&lt;/a&gt;&lt;br&gt;[3] &lt;a href=&quot;http://www.jianshu.com/p/61911e00abd0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python爬虫框架Scrapy快速入门&lt;/a&gt;&lt;br&gt;[4] &lt;a href=&quot;http://scrapy-chs.readthedocs.io/zh_CN/latest/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Scrapy中文文档&lt;/a&gt;&lt;br&gt;[5] &lt;a href=&quot;http://whatbeg.com/2016/05/18/hexo-donate.html&quot;&gt;本文应用目标&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Scrapy是什么？&quot;&gt;&lt;a href=&quot;#Scrapy是什么？&quot; class=&quot;headerlink&quot; title=&quot;Scrapy是什么？&quot;&gt;&lt;/a&gt;Scrapy是什么？&lt;/h2&gt;&lt;p&gt;Scrapy是一款网络爬虫框架，官方文档的描述如下：&lt;/p&gt;
&lt;blockq
    
    </summary>
    
      <category term="数据科学 | Data Science" scheme="http://whatbeg.com/categories/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6-Data-Science/"/>
    
    
      <category term="Python" scheme="http://whatbeg.com/tags/Python/"/>
    
      <category term="数据分析" scheme="http://whatbeg.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客Jacman主题优化(二)--打赏功能</title>
    <link href="http://whatbeg.com/2016/05/18/hexo-donate.html"/>
    <id>http://whatbeg.com/2016/05/18/hexo-donate.html</id>
    <published>2016-05-18T15:26:29.000Z</published>
    <updated>2016-08-07T05:49:33.246Z</updated>
    
    <content type="html">&lt;p&gt;–本博客5月18日优化，增加博客打赏功能&lt;/p&gt;
&lt;p&gt;使用Hexo这款博客框架已经很久了，期间也一直在摸索，一次次地修改代码，看效果，修改，看效果…，现在已经大致熟悉了整个框架的结构，能够自主完成对主题的修改了。&lt;/p&gt;
&lt;p&gt;接下来可以考虑写一篇解析Hexo框架的文章，一来加深自己对框架的理解，方便后续研究，而来也为其他刚开始接触Hexo的童鞋提供一些方法，让他们能够更快地适应，熟悉这个框架。&lt;/p&gt;
&lt;p&gt;今天偶然看到一个打赏功能，于是想在自己的博客上实现一下，虽然自觉自己的文章还有待加强，但是客官您随意啦。听说，打赏我的人最后都找到了真爱~&lt;/p&gt;
&lt;p&gt;灵感起源于&lt;a href=&quot;http://icehe.me/web/donate/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇文章&lt;/a&gt;，初始采用的是这篇文章的最终版代码，后来自己进行了大量的修改，并且嵌入到了框架中。接下来，就来讲讲具体怎么做吧。&lt;/p&gt;
&lt;h2 id=&quot;什么叫嵌入到博客中？为什么这么干？&quot;&gt;&lt;a href=&quot;#什么叫嵌入到博客中？为什么这么干？&quot; class=&quot;headerlink&quot; title=&quot;什么叫嵌入到博客中？为什么这么干？&quot;&gt;&lt;/a&gt;什么叫嵌入到博客中？为什么这么干？&lt;/h2&gt;&lt;p&gt;嵌入到博客中，简单说来，就是嵌入到博客模板中，不是单纯地贴HTML代码来改变显示内容，而是将自己要显示的信息写在主题的配置文件&lt;code&gt;_config.yml&lt;/code&gt;中，然后通过HTML模板在网页中显示，这样，每次想修改显示内容的时候，就不用去艰难地寻找具体的ejs文件，然后找到具体的HTML代码，然后找到具体的标签位置再去修改了，而是打开&lt;code&gt;_config.yml&lt;/code&gt;，直接编辑，搞定。这样也有利于标准化，这才是一个轮子应有的功能。之前我做很多主题优化的时候，很多都是直接粘HTML代码，代码短的话无伤大雅，但是代码长的话，随着时间的推移，整个代码就没法看了，不利于维护。&lt;/p&gt;
&lt;h2 id=&quot;要做什么？&quot;&gt;&lt;a href=&quot;#要做什么？&quot; class=&quot;headerlink&quot; title=&quot;要做什么？&quot;&gt;&lt;/a&gt;要做什么？&lt;/h2&gt;&lt;p&gt;我们要实现的目标就是只需在&lt;code&gt;themes\jacman\_config.yml&lt;/code&gt;文件中添加如下语句：&lt;br&gt;&lt;figure class=&quot;highlight qml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;donate&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;enable&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;text&lt;/span&gt;: 打赏我的人，运气都不会太差~&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;wechat&lt;/span&gt;: &lt;span class=&quot;attribute&quot;&gt;http&lt;/span&gt;:&lt;span class=&quot;comment&quot;&gt;//7xsl28.com1.z0.glb.clouddn.com/wechatpay.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;alipay&lt;/span&gt;: &lt;span class=&quot;attribute&quot;&gt;http&lt;/span&gt;:&lt;span class=&quot;comment&quot;&gt;//7xsl28.com1.z0.glb.clouddn.com/alipay.jpg&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;web&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;即可实现如本文最下方的样式：&lt;/p&gt;
&lt;p&gt;首先有一个按钮，如果读者不想打赏，自然不会去点它：&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/dashang2.png&quot; alt=&quot;Donate 1&quot;&gt;&lt;/p&gt;
&lt;p&gt;但是如果点击按钮的话，就转而显示如下效果：&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/dashang3.png&quot; alt=&quot;Donate 2&quot;&gt;&lt;/p&gt;
&lt;p&gt;读者用微信或者支付宝扫描二维码即可实现打赏功能。&lt;/p&gt;
&lt;p&gt;这里也可以添加一个网页版的支付宝付款链接，这里采用的是云打赏，因为云打赏支持支付宝支付和微信支付，而微信支付还是要扫码，支付宝的话倒是可以选择网页支付和扫码支付，反正感觉稍微有点繁琐，跟外卖付款的程序一样，但是我估计读者肯定没有外卖付款那么积极的，不过既然做了，还是贴出来。将上面的web值改为false可以不显示web端付款链接，及中间那个“赏”字。&lt;/p&gt;
&lt;h2 id=&quot;怎么做？&quot;&gt;&lt;a href=&quot;#怎么做？&quot; class=&quot;headerlink&quot; title=&quot;怎么做？&quot;&gt;&lt;/a&gt;怎么做？&lt;/h2&gt;&lt;p&gt;因为我们想要将打赏功能嵌入到每一篇博客当中，所以我们需要改动文章显示的HTML模板。&lt;br&gt;找到&lt;code&gt;themes\jacman\layout\_partial\post\article.ejs&lt;/code&gt;&lt;br&gt;这就是文章的HTML模板文件，在&lt;code&gt;&amp;lt;div class=&amp;quot;article-content&amp;quot;&amp;gt;...&amp;lt;/div&amp;gt;&lt;/code&gt;的下面，&lt;code&gt;&amp;lt;%- partial(&amp;#39;footer&amp;#39;) %&amp;gt;&lt;/code&gt;的上面插入如下HTML代码：&lt;br&gt;&lt;figure class=&quot;highlight erb&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ruby&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (theme.donate) &amp;#123; &lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- css --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/css&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    .center &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	        text-align: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    .hidden &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	        display: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		.donate_bar a.btn_donate&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			display: inline-block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			width: 82px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			height: 82px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			background: url(&quot;http://7xsl28.com1.z0.glb.clouddn.com/btn_reward.gif&quot;) no-repeat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			_background: url(&quot;http://7xsl28.com1.z0.glb.clouddn.com/btn_reward.gif&quot;) no-repeat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- http://img.t.sinajs.cn/t5/style/images/apps_PRF/e_media/btn_reward.gif&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			     因为本 hexo 生成的博客所用的 theme 的 a:hover 带动画效果，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				 为了在让打赏按钮显示效果正常 而 添加了以下几行 css，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				 嵌入其它博客时不一定要它们。 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			-webkit-transition: background 0s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			-moz-transition: background 0s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			-o-transition: background 0s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			-ms-transition: background 0s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			transition: background 0s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- /让打赏按钮的效果显示正常 而 添加的几行 css 到此结束 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		.donate_bar a.btn_donate:hover&amp;#123; background-position: 0px -82px;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		.donate_bar .donate_txt &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			display: block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			color: #9d9d9d;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			font: 14px/2 &quot;Microsoft Yahei&quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		.bold&amp;#123; font-weight: bold; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- /css --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- Donate Module --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;donate_module&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- btn_donate &amp;amp; tips --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;donate_board&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;donate_bar center&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    ------------------------------------------------------------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;btn_donate&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;btn_donate&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;target&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;_self&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;javascript:;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Donate 打赏&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;donate_txt&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ruby&quot;&gt; theme.donate.text &lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- /btn_donate &amp;amp; tips --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- donate guide --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;donate_guide&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;donate_bar center hidden&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    ------------------------------------------------------------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ruby&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(theme.donate.web) &amp;#123; &lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;100%&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;align&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;center&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;dashmain&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;dash-main-id-87895f&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;dash-main-3 87895f-0.99&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://www.dashangcloud.com/static/ds.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ruby&quot;&gt; &amp;#125; &lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;%=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ruby&quot;&gt; theme.donate.wechat &lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;string&quot;&gt;%&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;用微信扫一扫哦~&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;fancybox&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;article0&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;%=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ruby&quot;&gt; theme.donate.wechat &lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;string&quot;&gt;%&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;微信打赏 Donate&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;190px&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;auto&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;%=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ruby&quot;&gt; theme.donate.alipay &lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;string&quot;&gt;%&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;用支付宝扫一扫即可~&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;fancybox&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;article0&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;%=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ruby&quot;&gt; theme.donate.alipay &lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;string&quot;&gt;%&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;支付宝打赏 Donate&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;190px&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;auto&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;donate_txt&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ruby&quot;&gt; theme.donate.text &lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- /donate guide --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- donate script --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;btn_donate&#39;&lt;/span&gt;).onclick = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			$(&lt;span class=&quot;string&quot;&gt;&#39;#donate_board&#39;&lt;/span&gt;).addClass(&lt;span class=&quot;string&quot;&gt;&#39;hidden&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    $(&lt;span class=&quot;string&quot;&gt;&#39;#donate_guide&#39;&lt;/span&gt;).removeClass(&lt;span class=&quot;string&quot;&gt;&#39;hidden&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;donate_on_web&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			$(&lt;span class=&quot;string&quot;&gt;&#39;#donate&#39;&lt;/span&gt;).submit();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; original_window_onload = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.onload;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.onload = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (original_window_onload) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                original_window_onload();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;donate_board_wdg&#39;&lt;/span&gt;).className = &lt;span class=&quot;string&quot;&gt;&#39;hidden&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- /donate script --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- /Donate Module --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ruby&quot;&gt; &amp;#125; &lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第95行开头的那段代码可以不加。&lt;br&gt;整个逻辑就是：&lt;br&gt;判断是否需要显示打赏模块，是的话，就显示。&lt;br&gt;显示的内容有两种，按钮和二维码，首先将二维码隐藏起来，等到用户按动按钮，则将按钮隐藏起来，二维码显示出来。&lt;/p&gt;
&lt;p&gt;这样我们的打赏功能就做好了，是不是很简单呢？你也可以试试哦。&lt;br&gt;如果这篇文章对你有用，你不妨也打赏下我呢~ :)&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;–本博客5月18日优化，增加博客打赏功能&lt;/p&gt;
&lt;p&gt;使用Hexo这款博客框架已经很久了，期间也一直在摸索，一次次地修改代码，看效果，修改，看效果…，现在已经大致熟悉了整个框架的结构，能够自主完成对主题的修改了。&lt;/p&gt;
&lt;p&gt;接下来可以考虑写一篇解析Hexo框架的文章，
    
    </summary>
    
      <category term="错误解决与优化 | Err&Opt" scheme="http://whatbeg.com/categories/%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E4%B8%8E%E4%BC%98%E5%8C%96-Err-Opt/"/>
    
    
      <category term="hexo" scheme="http://whatbeg.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>给机器学习初学者的建议</title>
    <link href="http://whatbeg.com/2016/05/17/adviceforMLfish.html"/>
    <id>http://whatbeg.com/2016/05/17/adviceforMLfish.html</id>
    <published>2016-05-17T03:12:50.000Z</published>
    <updated>2016-05-18T13:15:15.175Z</updated>
    
    <content type="html">&lt;p&gt;本文译自康奈尔大学信息科学系助理教授David Mimno写的《Advice for students of machine learning》，Mimno先生总结了一些对于机器学习学生/初学者的建议，强调理论与实践相结合，要有耐心和毅力，并提出了深入研究一篇论文的方法。希望对读者有所帮助。&lt;br&gt;原文地址：&lt;a href=&quot;http://www.mimno.org/articles/ml-learn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.mimno.org/articles/ml-learn/&lt;/a&gt;&lt;br&gt;Mimno先生主页：&lt;a href=&quot;http://mimno.infosci.cornell.edu/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mimno.infosci.cornell.edu/&lt;/a&gt;&lt;br&gt;下面是译文正文：&lt;/p&gt;
&lt;p&gt;=============================================================&lt;br&gt;题名：给机器学习初学者的建议&lt;br&gt;作者：David Mimno&lt;br&gt;译者：&lt;a href=&quot;http://whatbeg.com/about/&quot;&gt;whatbeg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最近我的一个学生问我学习机器学习的建议，于是我写下了这篇文章，此文偏向于我个人的经验，但我还是要概括一下。&lt;/p&gt;
&lt;p&gt;我现在最乐意推荐的入门书籍是Kevin Murphy的书《机器学习》(&lt;a href=&quot;https://book.douban.com/subject/10758624/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Machine Learning&lt;/a&gt;)&lt;br&gt;你可能也想读&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Chris Bishop的《模式识别和机器学习》(译者注：&lt;a href=&quot;https://book.douban.com/subject/2061116/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pattern Recognition and Machine Learning&lt;/a&gt;, PRML，经典书籍，豆瓣评分9.6)&lt;/li&gt;
&lt;li&gt;Daphne Koller的《概率图模型》(&lt;a href=&quot;https://book.douban.com/subject/4007200/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Probabilistic Graphical Models : Principles and Techniques&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;以及David Mackay的《信息理论：推理与学习算法》(&lt;a href=&quot;https://book.douban.com/subject/1789534/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Information Theory, Inference and Learning Algorithms&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;任何你学习的关于线性代数和概率论/统计学的知识都会有所帮助。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Strang的《线性代数概论》(&lt;a href=&quot;https://book.douban.com/subject/4530041/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Introduction To Linear Algebra&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Gelman,Carlin,Stern和Rubin的《贝叶斯数据分析》(&lt;a href=&quot;https://book.douban.com/subject/1464230/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bayesian Data Analysis, Second Edition&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Gelman和Hill的《用回归和多级/分层模型进行数据分析》(&lt;a href=&quot;https://book.douban.com/subject/2859924/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Data Analysis Using Regression and Multilevel/Hierarchical Models&lt;/a&gt;)&lt;br&gt;等，这些都是我喜欢的书籍。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不要想着一开始就获得某个知识的所有方面，尽量从多个不同的资源去阅读对同一个知识的描述。&lt;/p&gt;
&lt;p&gt;没有什么比你自己亲自尝试更重要。选择一个模型，然后实现它，将它与其它开源实现进行比较，想一想，是不是有什么使程序工作的计算或者数学上的技巧呢？&lt;/p&gt;
&lt;p&gt;读一些论文。我在读研究生的时候，早上和晚上都有20分钟在公交车上，我包里总是带着一篇有趣的论文，公交不是重点–真正起作用的是我每天能花大约半小时在阅读（这些论文）上。&lt;/p&gt;
&lt;p&gt;选择一篇你喜欢的论文，然后花一个星期深入研究它，无时无刻不想着它，回忆每个公式的形式，花点时间散步并琢磨每个变量是如何影响结果的，不同的变量是怎样相互影响的。想一想公式6是如何得到公式7的&lt;code&gt;--&lt;/code&gt;作者常常省略中间步骤和代数细节，你可以将步骤补充完整。&lt;/p&gt;
&lt;p&gt;要有耐心和毅力。&lt;br&gt;记住冯·诺伊曼所说的，“Young man, in mathematics you don’t understand things. You just get used to them.”。（大意是，年轻人，在数学上你什么都没理解，你只是习惯了它们）&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文译自康奈尔大学信息科学系助理教授David Mimno写的《Advice for students of machine learning》，Mimno先生总结了一些对于机器学习学生/初学者的建议，强调理论与实践相结合，要有耐心和毅力，并提出了深入研究一篇论文的方法。希
    
    </summary>
    
      <category term="译文 | Translation" scheme="http://whatbeg.com/categories/%E8%AF%91%E6%96%87-Translation/"/>
    
    
      <category term="机器学习" scheme="http://whatbeg.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="译文" scheme="http://whatbeg.com/tags/%E8%AF%91%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>怎样写出优秀的研究论文？</title>
    <link href="http://whatbeg.com/2016/05/10/how2wtpaper.html"/>
    <id>http://whatbeg.com/2016/05/10/how2wtpaper.html</id>
    <published>2016-05-10T07:44:54.000Z</published>
    <updated>2016-05-12T03:05:59.644Z</updated>
    
    <content type="html">&lt;p&gt;本文译自微软剑桥研究院Simon Peyton Jones的演讲PPT。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E8%A5%BF%E8%92%99%C2%B7%E4%BD%A9%E9%A0%93%C2%B7%E7%93%8A%E6%96%AF&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;西蒙·佩顿·琼斯&lt;/a&gt;（Simon Peyton Jones，1958年1月18日－），生于南非，英国计算机科学家，毕业于剑桥大学三一学院，以研究函数编程语言的实作与应用为主，特别是针对惰性函数编程语言（lazy functional languages）。他对Haskell编程语言的发展有很大贡献，为格拉斯哥大学的荣誉教授，也在剑桥大学指导博士生。&lt;/p&gt;
&lt;p&gt;2013年他做了这篇演讲，阐述了研究者应该如何写出一篇优秀的论文，有哪些原则和细节需要注意，引起了很大关注与反响。以下是译文：&lt;/p&gt;
&lt;p&gt;===========================================&lt;br&gt;题名： 如何写出伟大的论文&lt;br&gt;作者： Simon Peyton Jones&lt;br&gt;译者： &lt;a href=&quot;http://whatbeg.com/&quot;&gt;whatbeg&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;一、前言&quot;&gt;&lt;a href=&quot;#一、前言&quot; class=&quot;headerlink&quot; title=&quot;一、前言&quot;&gt;&lt;/a&gt;一、前言&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;为什么苦恼？&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;谬论：&lt;br&gt;我们写论文和做演讲主要是为了给他人留下影响，获得荣誉或提升。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;论文是为了交流想法&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你的目标应当是： &lt;strong&gt;让你的想法像病毒一般感染你的读者&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;论文比程序更能持久（想想莫扎特）&lt;/li&gt;
&lt;li&gt;毫不夸张地说，如果你保有那些最伟大的想法，那么他们可以是无价之宝。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;论文模式1&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;想法-&amp;gt;做研究-&amp;gt;写论文&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;论文模式2&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;想法-&amp;gt;写论文-&amp;gt;做研究&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这种模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使我们更清晰、专注&lt;/li&gt;
&lt;li&gt;使我们不理解的地方明朗化&lt;/li&gt;
&lt;li&gt;打开一扇与他人对话交流的门： 现实检验，批评，合作&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;不要被吓到了&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;谬论：&lt;br&gt;在你写论文或做演讲之前你需要有一个出色的想法（其他人似乎是&lt;code&gt;*&lt;/code&gt;）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;正确的方法是：&lt;br&gt;你可以关于任何想法写论文和做演讲，不管这个想法对于你有多么的脆弱&lt;code&gt;*&lt;/code&gt;和微不足道。&lt;/p&gt;
&lt;p&gt;写论文就是： 你首先怎样去开发你的想法&lt;code&gt;*&lt;/code&gt;&lt;br&gt;通常你的想法在一开始看起来更有趣味性和挑战性&lt;/p&gt;
&lt;h2 id=&quot;二、论文的目的&quot;&gt;&lt;a href=&quot;#二、论文的目的&quot; class=&quot;headerlink&quot; title=&quot;二、论文的目的&quot;&gt;&lt;/a&gt;二、论文的目的&lt;/h2&gt;&lt;p&gt;论文的目的是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;传达你的想法&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;（从你的脑子到读者的脑子）&lt;br&gt;所有其他都要服从于这个目标&lt;/p&gt;
&lt;p&gt;论文的目的&lt;strong&gt;不是&lt;/strong&gt;去描述一个让人感到莫名其妙的系统&lt;br&gt;你的读者最感兴趣的是你论文里的可重复的思维过程，而不是一个可用的人工系统。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;传达想法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这儿有一个问题&lt;/li&gt;
&lt;li&gt;它很有趣&lt;/li&gt;
&lt;li&gt;它还没被解决&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;这是我的想法&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;我的想法能行（细节，数据）&lt;/li&gt;
&lt;li&gt;我的想法相比其他人的怎么怎么样…&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;结构&quot;&gt;&lt;a href=&quot;#结构&quot; class=&quot;headerlink&quot; title=&quot;结构&quot;&gt;&lt;/a&gt;结构&lt;/h3&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;摘要 （4句话）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;介绍 （1页）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;问题 （1页）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;我的想法 （2页）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;细节 （5页）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;相关工作 （1-2页）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;总结与展望 （0.5页）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;我常常最后才写摘要&lt;/li&gt;
&lt;li&gt;程序委员会成员(Program Committee Members)根据摘要来决定是否读这篇论文&lt;/li&gt;
&lt;li&gt;四句话[Kent Berk]:&lt;ul&gt;
&lt;li&gt;陈述问题&lt;/li&gt;
&lt;li&gt;为什么这是一个有趣的问题&lt;/li&gt;
&lt;li&gt;你的方案达到了什么效果&lt;/li&gt;
&lt;li&gt;你的方案后面还能带来什么&lt;code&gt;*&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例子：&lt;br&gt;1.很多论文写的很烂，很难理解，这很遗憾，因为即使他们有好想法也可能不被欣赏&lt;br&gt;2.遵循一些简单的规律就能够极大地提升论文质量&lt;br&gt;3.你的工作会更多地被大家使用，而且你得到的反馈反过来也会促进你的研究&lt;/p&gt;
&lt;h4 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h4&gt;&lt;p&gt;1.描述问题&lt;br&gt;2.说明你的贡献&lt;br&gt;…就够了&lt;/p&gt;
&lt;h5 id=&quot;1-说明问题（举例）&quot;&gt;&lt;a href=&quot;#1-说明问题（举例）&quot; class=&quot;headerlink&quot; title=&quot;1.说明问题（举例）&quot;&gt;&lt;/a&gt;1.说明问题（举例）&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/hwrp1.png&quot; alt=&quot;Use an example&quot;&gt;&lt;/p&gt;
&lt;h5 id=&quot;2-说明你的贡献&quot;&gt;&lt;a href=&quot;#2-说明你的贡献&quot; class=&quot;headerlink&quot; title=&quot;2.说明你的贡献&quot;&gt;&lt;/a&gt;2.说明你的贡献&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;首先将你的贡献列出来&lt;/li&gt;
&lt;li&gt;贡献列表驱动了整篇论文： 后面的论文都是在证实你在这里做出的声明&lt;/li&gt;
&lt;li&gt;读者会想，“我天，如果你真的能做出这个，那是多么刺激啊，我要读下去！”&lt;/li&gt;
&lt;li&gt;不要让读者去猜你到底贡献了什么！&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/hwrp2.png&quot; alt=&quot;Contribution List&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;贡献应该是可以驳倒的&lt;/strong&gt;：（译者注：这里应该是‘不’可驳倒吧我觉得）&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/hwrp10.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Tips: 不要写 “论文余下的部分是…”&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;比如&lt;br&gt;&lt;figure class=&quot;highlight erlang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;论文余下的部分如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.介绍问题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;.~&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;.总结..&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;相反，可以采用一些向前的引用，引用到介绍的叙述中&lt;br&gt;介绍部分（包括贡献）应该纵览整篇论文，因此，向前引用每一个重要的部分吧。&lt;/p&gt;
&lt;h4 id=&quot;问题，想法，细节&quot;&gt;&lt;a href=&quot;#问题，想法，细节&quot; class=&quot;headerlink&quot; title=&quot;问题，想法，细节&quot;&gt;&lt;/a&gt;问题，想法，细节&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;还不要写相关工作！&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/hwrp3.png&quot; alt=&quot;No Related Work yet&quot;&gt;&lt;/p&gt;
&lt;p&gt;问题1： 在读者与你的想法之间另辟他径&lt;code&gt;*&lt;/code&gt;&lt;br&gt;问题2： 读者对问题还一无所知，所以你的各种技术的权衡的描述（小心修改过的）绝对是无法理解的。&lt;/p&gt;
&lt;p&gt;所以，将你的精力集中在以下叙述上：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;描述问题，以及为什么它有意思&lt;/li&gt;
&lt;li&gt;描述你的想法&lt;/li&gt;
&lt;li&gt;论证你的想法，展示它是怎样解决问题的，并完善细节&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;顺便可以提到相关的工作，但是务必将这方面讨论推到最后。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;论文的负担&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/hwrp4.png&quot; alt=&quot;The payload of your paper&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;听起来很动人，但是…&lt;/li&gt;
&lt;li&gt;让读者昏昏欲睡&lt;/li&gt;
&lt;li&gt;在一篇论文里，你&lt;strong&gt;必须&lt;/strong&gt;提供细节，但是&lt;strong&gt;首先&lt;/strong&gt;请传达你的想法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用&lt;strong&gt;例子&lt;/strong&gt;介绍你的问题和想法，然后才推广到一般情况。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/hwrp5.png&quot; alt=&quot;Using examples&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;传达想法&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释你的想法，想象你正在用白板跟人讲一样&lt;/li&gt;
&lt;li&gt;首先要传达的是你的直觉&lt;/li&gt;
&lt;li&gt;一旦你的读者有了直观的感觉，他就能够跟上你的细节（反之则不行）&lt;/li&gt;
&lt;li&gt;（这样的话）即使他跳过了一些细节，他也仍然可以获得一些有价值的东西&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;证明&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你的介绍里面做了很多断言(Claim)&lt;/li&gt;
&lt;li&gt;论文体中提供每个断言的证明&lt;/li&gt;
&lt;li&gt;检查每个介绍里的断言，定位其证明，然后前向引用该断言&lt;/li&gt;
&lt;li&gt;证明可以是： 分析和比较，定理，测量，案例研究&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;相关工作&quot;&gt;&lt;a href=&quot;#相关工作&quot; class=&quot;headerlink&quot; title=&quot;相关工作&quot;&gt;&lt;/a&gt;相关工作&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;谬论：&lt;br&gt;为了让我的工作看起来更好，我应该让别人的工作看起来更差&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;真相： 称赞不像货币&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;给予别人的工作以称赞并不会减少你的论文能够得到的称赞&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;热情地承认那些帮助过你的人们&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/hwrp6.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;更大度地对待竞争. “在他的具有启发性地论文[Foo98]中，他表示… 我们在他的基础上进一步发展如下…”&lt;/li&gt;
&lt;li&gt;承认你的方法的缺点&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你暗示一个想法是你的，但是审查者发现不是，那么一般是以下两种情况之一：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你不知道这是一个老的想法了（情况不妙）&lt;/li&gt;
&lt;li&gt;你知道，但是你假装想法是你的（情况非常不妙）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;确保相关工作的准确性&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个好的计划：当你觉得你已经完成了，将你的稿子发给相关工作的作者，并问他，“您能帮我确保我正确地描述了您的工作么？”&lt;/li&gt;
&lt;li&gt;通常他们会对你进行有益的批评&lt;/li&gt;
&lt;li&gt;不管怎样，他们可能会是你论文的审查者，所以预先获得他们的评论是极好的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;过程&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;早早的开始&lt;ul&gt;
&lt;li&gt;仓促写成的论文往往被拒&lt;/li&gt;
&lt;li&gt;论文就像红酒一样，它们需要时间去沉淀&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;合作&lt;/li&gt;
&lt;li&gt;用并行版本控制系统(CVS,Concurrent Version System)促进合作&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;寻求帮助&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Tips： 让你的论文尽可能被更多友好的受试者阅读&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;当然，专家更好&lt;/li&gt;
&lt;li&gt;不是专家也不错&lt;/li&gt;
&lt;li&gt;每个读者只会帮你阅读一次且仅一次，所以要谨慎&lt;/li&gt;
&lt;li&gt;仔细解释你需要什么（“我在这不知道该怎么继续了” 比 “帮我看看有没有拼写错误” 更重要）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;倾听你的评审者&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Tips： 每一次评审都价值连城，无论批评还是赞扬，都要抱以感谢。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这很….难， 但是很…很…重要&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将每一个批评看作是正面的建议，例如你有些地方可以解释的更清楚&lt;/li&gt;
&lt;li&gt;千万不要回复说“你个傻bi，我的意思是X”。修改你的论文以便让你的X能让最傻bi的读者看懂&lt;/li&gt;
&lt;li&gt;热情地感谢他们，他们在你那儿花了时间&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;语言与格式&quot;&gt;&lt;a href=&quot;#语言与格式&quot; class=&quot;headerlink&quot; title=&quot;语言与格式&quot;&gt;&lt;/a&gt;语言与格式&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;基本素质&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;按时提交&lt;/li&gt;
&lt;li&gt;遵守长度限制&lt;ul&gt;
&lt;li&gt;不要缩窄边缘&lt;/li&gt;
&lt;li&gt;不要用&lt;font size=&quot;1&quot;&gt;太小的字体&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;有条件，在附录中提供支撑证据（如实验数据，证明）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;别忘了使用拼写检查&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;视觉结构&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用以下部件为你论文的视觉结构加分：&lt;ul&gt;
&lt;li&gt;章节和子章节&lt;/li&gt;
&lt;li&gt;着重号&lt;/li&gt;
&lt;li&gt;斜体&lt;/li&gt;
&lt;li&gt;代码&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;学会如何画图，用上去&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例子：&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/hwrp7.png&quot; alt=&quot;Virtual Structure&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用主动的语气&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;被动语气更加“谦虚”，但是它抑制了你论文的表现。无论如何都要避免&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/hwrp8.png&quot; alt=&quot;Use active voice&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用简单直接的语言&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/hwrp9.png&quot; alt=&quot;Use simple direct language&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;希望你记住以下几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;确定你的关键想法&lt;/li&gt;
&lt;li&gt;让你的贡献显示出来&lt;/li&gt;
&lt;li&gt;用例子&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;更多阅读材料&quot;&gt;&lt;a href=&quot;#更多阅读材料&quot; class=&quot;headerlink&quot; title=&quot;更多阅读材料&quot;&gt;&lt;/a&gt;更多阅读材料&lt;/h2&gt;&lt;p&gt;1.&lt;a href=&quot;http://research.microsoft.com/en-us/um/people/simonpj/papers/giving-a-talk/writing-a-paper-slides.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;原文地址&lt;/a&gt;&lt;br&gt;2.&lt;a href=&quot;http://www.cs.cmu.edu/afs/cs.cmu.edu/user/mleone/web/how-to.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;研究和写作的建议&lt;/a&gt;&lt;br&gt;3.&lt;a href=&quot;https://www.youtube.com/watch?v=g3dkRsTqdDA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;本演讲Youtube视频&lt;/a&gt;&lt;br&gt;4.&lt;a href=&quot;http://prog3.com/sbdm/blog/bluecol/article/details/47339397&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多相关文章集锦&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;旁边有&lt;code&gt;*&lt;/code&gt;的句子都是我觉得翻译有所不够准确地地方，欢迎大家提出意见！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文译自微软剑桥研究院Simon Peyton Jones的演讲PPT。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E8%A5%BF%E8%92%99%C2%B7%E4%BD%A9%E9%A0%93%C2%B7%E7%93
    
    </summary>
    
      <category term="译文 | Translation" scheme="http://whatbeg.com/categories/%E8%AF%91%E6%96%87-Translation/"/>
    
    
      <category term="译文" scheme="http://whatbeg.com/tags/%E8%AF%91%E6%96%87/"/>
    
      <category term="CS" scheme="http://whatbeg.com/tags/CS/"/>
    
  </entry>
  
  <entry>
    <title>当我学完Python我学了些什么</title>
    <link href="http://whatbeg.com/2016/05/02/learnpython.html"/>
    <id>http://whatbeg.com/2016/05/02/learnpython.html</id>
    <published>2016-05-02T11:31:11.000Z</published>
    <updated>2016-05-20T08:17:02.199Z</updated>
    
    <content type="html">&lt;p&gt;本文是本人学完Python后的一遍回顾，加深理解顺便留作手册以备查阅。&lt;/p&gt;
&lt;p&gt;学习Python的这几天来，觉得Python还是比较简单，容易上手的，就基本语法而言，但是有些高级特性掌握起来还是有些难度，需要时间去消化。Python给我最大的印象就是语法简洁，就像写伪代码一样，很多其他语言要用很多行才能实现的操作Python可能几行就搞定了，这让人摆脱了繁杂的语法而专注于问题本身，这也正是我为什么不太喜欢Java的原因之一，虽然它很强大。&lt;/p&gt;
&lt;h2 id=&quot;一、Python简介&quot;&gt;&lt;a href=&quot;#一、Python简介&quot; class=&quot;headerlink&quot; title=&quot;一、Python简介&quot;&gt;&lt;/a&gt;一、Python简介&lt;/h2&gt;&lt;p&gt;Python是一种用来编写应用程序的高级程序设计语言,TIOBE程序语言排行榜2016年4月的排名如下：&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/TIOBE201604.png&quot; alt=&quot;TIOBE 2016.04&quot;&gt;&lt;/p&gt;
&lt;p&gt;Python实现强势逆袭，而且我相信，随着时间的推移，国内Python语言未来前景也是一片向好。&lt;br&gt;Python的特点是优雅简单，易学易用（虽然我感觉还是有一些概念不容易理解），Python的哲学是尽量用最少的，最简单易懂的代码实现需要的功能。Python适宜于开发网络应用，脚本写作，日常简单小工具等等。Python的缺点是效率较低，但是在大量的场合效率却不是那么重要或者说Python不是其性能瓶颈，所以不要太在意。其次是2.x-3.x的过渡使得许多3.x还缺少很多2.x下的模块，不过也在完善中。其次就是源代码无法加密，发布Python程序其实就是发布源代码。&lt;/p&gt;
&lt;h2 id=&quot;二、基础语法要点&quot;&gt;&lt;a href=&quot;#二、基础语法要点&quot; class=&quot;headerlink&quot; title=&quot;二、基础语法要点&quot;&gt;&lt;/a&gt;二、基础语法要点&lt;/h2&gt;&lt;p&gt;1.如果一个字符串中有许多需要转义的字符，而又不想写那么多&lt;code&gt;\&lt;/code&gt;,那么可以用 &lt;code&gt;r&amp;#39;...&amp;#39;&lt;/code&gt; 表示 &lt;code&gt;&amp;#39;...&amp;#39;&lt;/code&gt;内的内容不转义。&lt;/p&gt;
&lt;p&gt;2.Python可用&lt;code&gt;&amp;#39;&amp;#39;&amp;#39;...&amp;#39;&amp;#39;&amp;#39;&lt;/code&gt;来表示多行内容，如：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;line1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;line2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;line3&#39;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;line1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;line2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;line3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3.Python的逻辑运算and, or, not 分别对应C语言中的&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;, &lt;code&gt;||&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;4.Python的整数与浮点数大小都没有范围。&lt;/p&gt;
&lt;p&gt;5.Python中除法有两种： &lt;code&gt;/&lt;/code&gt;除出来必是浮点数， &lt;code&gt;//&lt;/code&gt;除出来是整数，即地板除。&lt;/p&gt;
&lt;p&gt;6.Python中一切皆引用。每个对象都有一个引用计数器（内部跟踪变量）进行跟踪，引用计数值表示该对象有多少个引用，当初次产生赋给变量时，引用计数为1，其后没进行下列行为中的任意一种都会增加引用计数：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;赋值：  a = b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;用作函数参数传递： func(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;成为容器对象的一个元素： lis = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,a]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;以下任意一种行为都会减少引用计数：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;del&lt;/span&gt;销毁： &lt;span class=&quot;keyword&quot;&gt;del&lt;/span&gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;变量另赋给其他对象：a = &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;对象从容器中删除:  lis.remove(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;身在的容器被销毁： &lt;span class=&quot;keyword&quot;&gt;del&lt;/span&gt; lis&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;7.深拷贝与浅拷贝的概念与对比，有点复杂，看这篇文章&lt;/p&gt;
&lt;p&gt;8.list，tuple和dict，set&lt;/p&gt;
&lt;p&gt;list： 为列表，是一个有序集合，类似于数组但又比数组功能强大，可以随时append,pop元素，下标从0开始，且下标为加n模n制，即lis[-1] = lis[len-1]，下标范围[-len,len-1].&lt;/p&gt;
&lt;p&gt;tuple：为元组，类似于list，但list为可变类型，而tuple不可变，即没有append,pop等函数。一个建议是为了安全起见，能用tuple代替list尽量用tuple。如果tuple只有一个元素，要写成如(1,)以避免歧义。&lt;/p&gt;
&lt;p&gt;dict：字典类型，存放key-value键值对，可以根据key迅速地找出value，当然，key必须是不可变类型，如下是错误的：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;dic = &amp;#123;[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]:&lt;span class=&quot;string&quot;&gt;&#39;value&#39;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;pyshell#10&amp;gt;&quot;&lt;/span&gt;, line &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dic = &amp;#123;[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]:&lt;span class=&quot;string&quot;&gt;&#39;value&#39;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TypeError: unhashable type: &lt;span class=&quot;string&quot;&gt;&#39;list&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;list与dict的优劣对比：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dict:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;插入，查找速度快，跟key的数目无关&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;需占用大量内存，内存浪费严重&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;list:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;插入，查找速度慢，O(n)的复杂度，随元素个数增加而增加&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;占用内存小&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;dict内部存放的顺序和key放入的顺序是没有关系的&lt;/p&gt;
&lt;p&gt;set：set与dict类似，相当于只有key没有value的dict，每个key不同，set间有 &amp;amp;， | 等操作对应集合的交，并操作。&lt;/p&gt;
&lt;h2 id=&quot;三、函数&quot;&gt;&lt;a href=&quot;#三、函数&quot; class=&quot;headerlink&quot; title=&quot;三、函数&quot;&gt;&lt;/a&gt;三、函数&lt;/h2&gt;&lt;p&gt;1.函数是对象，函数名即是指向对应函数对象的引用，所以可以将函数名赋给一个变量，相当于给函数起一个‘别名’。&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;mmm = max&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;mmm(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2.Python函数可以返回“多个值”，之所以打引号，是因为实际上返回的多个值拼成了一个元组，返回这个元组。&lt;/p&gt;
&lt;p&gt;3.定义默认参数需要牢记：默认参数必须指向不变对象。否则第一次调用和第二次调用结果会不一样，因为可变的默认参数调用后改变了。&lt;/p&gt;
&lt;p&gt;4.可变参数：传入的参数个数是可变的，可以是0个或多个。可变参数会将你传入的参数自动组装为一个tuple。在你传入的list或tuple名字前加一个 &lt;code&gt;*&lt;/code&gt; 即说明传入的是可变参数。习惯写法为*args。&lt;/p&gt;
&lt;p&gt;5.关键字参数：传入0个或多个含参数名的参数，这些参数被自动组装成一个dict。习惯写法&lt;code&gt;**kw&lt;/code&gt;，如&lt;code&gt;**a&lt;/code&gt;表示把a中所有的键值对以关键字参数的形式传入kw，获得一个dict，这个dict是a的一份拷贝，对kw改动不会传递到a&lt;/p&gt;
&lt;p&gt;6.命名关键字在函数定义中跟在一个*分割符后，如&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(a,b,*,c,d)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;c,d为命名关键字参数，可以限制调用者可以传入的参数名，同时可以提供默认值。&lt;/p&gt;
&lt;p&gt;7.参数定义顺序：必选参数，默认参数，可变参数/命名关键字参数，关键字参数。&lt;/p&gt;
&lt;p&gt;8.切片操作格式为lis[首下标：尾下标：间隔]，如果都不填，即lis[::]则代表整个容器lis&lt;/p&gt;
&lt;p&gt;9.用圆括号()括起来一个列表生成式创建一个生成器generator，generator保存生成算法，我们可以用next(g)取得生成器g的下一个返回值。生成器的好处就是我们不需要提前生成所有列表元素，而是需要时再生成，这在某些情况下可以节省许多内存。算法也可以不是列表生成式而是自定义函数，只需在函数定义中包含yield关键字。&lt;/p&gt;
&lt;p&gt;10.map()和reduce()： 二者都是高阶函数。map()接收两个参数，一个是函数，一个是Iterable序列，map将传入的函数依次作用在序列每一个元素上，并把结果作为新的Iterator返回。reduce()类似累积计算版的map()，把一个函数作用在一个序列上，每次接收两个参数，将结果继续与序列的下一个元素做累积计算。&lt;/p&gt;
&lt;p&gt;利用map和reduce编写一个str2float函数，如把字符串&lt;code&gt;&amp;#39;123.456&amp;#39;&lt;/code&gt;转换成浮点数123.456：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; functools &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; reduce&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;str2float&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(s)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(x,y)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x*&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; + y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;char2num&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(s)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;3&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;4&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;5&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;6&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;7&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;8&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;9&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;&amp;#125;[s]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(x,y)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x*&lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt; + y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a,b = s.split(&lt;span class=&quot;string&quot;&gt;&#39;.&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&#39;a=&#39;&lt;/span&gt;,a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&#39;b=&#39;&lt;/span&gt;,b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; reduce(f1, map(char2num,a)) + &lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;*reduce(f2, map(char2num,b[::&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&lt;span class=&quot;string&quot;&gt;&#39;str2float(\&#39;123.456\&#39;) =&#39;&lt;/span&gt;, str2float(&lt;span class=&quot;string&quot;&gt;&#39;123.456&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;11.fliter()函数过滤序列，类似于map()作用于每一元素，根据返回值是True或者False决定舍弃还是保留该元素。函数返回一个Iterator。&lt;/p&gt;
&lt;p&gt;12.sorted()函数可实现排序，类似于C++库中的sort()函数，但是比其更加简洁，语法为&lt;code&gt;sorted(lis,key=func,reverse=T/F)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;key函数可实现自定义的排序规则，reverse表示升序还是降序。&lt;/p&gt;
&lt;p&gt;13.一个函数可以返回一个函数，但是返回时该函数并未执行，所以返回函数中不要引用任何可能发生变化的变量，否则会出现逻辑错误。&lt;/p&gt;
&lt;p&gt;14.装饰器(decorator): 当需要增强函数的功能却不希望修改函数本身，那么可以采用装饰器这种运行时动态增加功能的方式，增加的功能卸载装饰器函数中。如在执行前后打印&lt;code&gt;&amp;#39;begin call&amp;#39;&lt;/code&gt;和&lt;code&gt;&amp;#39;end call&amp;#39;&lt;/code&gt;，可以这样做：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; functools&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(func)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;    @functools.wraps(func)     #为了校正函数签名，最好写上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;wrapper&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(*args,**kw)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&#39;begin call&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        f = func(*args,**kw)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&#39;end call&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; f&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; wrapper&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@log&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hah&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&#39;hahahaha&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hah()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;begin call&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hahahaha&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end call&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;15.偏函数： functools.partial()，作用是将一个函数的某些参数固定住，作为新函数的参数，即固定住该参数，返回一个新函数，使调用更简单。&lt;/p&gt;
&lt;h2 id=&quot;四、面向对象编程&quot;&gt;&lt;a href=&quot;#四、面向对象编程&quot; class=&quot;headerlink&quot; title=&quot;四、面向对象编程&quot;&gt;&lt;/a&gt;四、面向对象编程&lt;/h2&gt;&lt;p&gt;1.Python实例变量可以自由地绑定任何属性&lt;/p&gt;
&lt;p&gt;2.为了不让内部属性不被外部访问，在属性的名称前加上两个下划线&lt;code&gt;__&lt;/code&gt;，这样就变成了一个私有变量(private)，注意，不能直接访问不代表一定不能访问，事实上，加双下划线后Python就会将其改名为&lt;code&gt;_class名__name&lt;/code&gt;，所以还是可以这样来访问这个‘私有’变量。&lt;/p&gt;
&lt;p&gt;3.对于静态语言，如果要求传入一个class类型的对象，那么传入的对象必须是class类型或者其子类，否则将无法调用class中的方法，而Python这样的动态语言有‘鸭子类型’一说，即不一定要传入class类型或其子类，而只要保证传入的对象中有要使用的方法即可。&lt;/p&gt;
&lt;p&gt;4.如果想要限制实例可以绑定的属性，那么在定义class时定义一个&lt;code&gt;__slots__&lt;/code&gt;变量即可，例如：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Student&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    __slots__ = (&lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;age&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注意，&lt;code&gt;__slots__&lt;/code&gt;限制的属性对当前类实例起完全限制作用，且与子类共同定义其&lt;code&gt;__slots__&lt;/code&gt;，也就是说子类可以定义自己的&lt;code&gt;__slots__&lt;/code&gt;，子类实例允许定义的属性就是自身的&lt;code&gt;__slots__&lt;/code&gt;加上父类的&lt;code&gt;__slots__&lt;/code&gt;，即并集。&lt;/p&gt;
&lt;p&gt;5.&lt;code&gt;@&lt;/code&gt; property装饰器可以使一个getter方法变成属性，如果方法名为me，那么&lt;code&gt;@me.setter&lt;/code&gt;装饰器则可使一个setter方法变成属性。这样可以使代码更简短，同时可对参数进行必要的检查。&lt;/p&gt;
&lt;p&gt;6.通过多重继承，可使子类拥有多个父类的所有功能。&lt;/p&gt;
&lt;p&gt;7.在类中&lt;code&gt;__call__&lt;/code&gt;方法可使实例对象像函数那样直接调用，作用即是该方法定义的过程。&lt;/p&gt;
&lt;p&gt;8.ORM(Object Relational Mapping 对象关系映射)，就是把关系数据库的一行映射为一个对象，也就是一个类对应一个表。ORM的实现需要通过metaclass元类修改类的定义。元类可以改变类创建时的行为。&lt;/p&gt;
&lt;h2 id=&quot;五、调试&quot;&gt;&lt;a href=&quot;#五、调试&quot; class=&quot;headerlink&quot; title=&quot;五、调试&quot;&gt;&lt;/a&gt;五、调试&lt;/h2&gt;&lt;p&gt;1.Python调试方法：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;直接打印&lt;/li&gt;
&lt;li&gt;断言&lt;/li&gt;
&lt;li&gt;pdb&lt;/li&gt;
&lt;li&gt;IDE&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;六、IO编程&quot;&gt;&lt;a href=&quot;#六、IO编程&quot; class=&quot;headerlink&quot; title=&quot;六、IO编程&quot;&gt;&lt;/a&gt;六、IO编程&lt;/h2&gt;&lt;p&gt;1.序列化： 把变量从内存中变成可存储或传输的过程称之为序列化。Python用pickle模块实现序列化。序列化之后，就可以把序列化后的内容存储到磁盘上或者通过网络进行传输。pickle.dumps()将对象序列化成一个bytes,而pickle.loads()可以根据bytes反序列化出对象。&lt;/p&gt;
&lt;p&gt;2.pickle虽好，但是它专为Python而生，所以要在不同语言间传递对象，最好还是xml或者json，而json表示格式是一个字符串，更易读取，且比xml快，所以更加适宜于对象序列化。Python内置了json模块，相应方法仍然是dumps()和loads()。&lt;/p&gt;
&lt;p&gt;3.但是在默认情况下，有些对象是无法序列化的，所以我们有时还需要定制转换方法，告诉json该如何将某类对象转换成可序列为json格式的{}对象。如下即是一个转换方法：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;mantodict&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(std)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;: std.name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;age&#39;&lt;/span&gt;: std.age,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;: std.id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;七、进程与线程&quot;&gt;&lt;a href=&quot;#七、进程与线程&quot; class=&quot;headerlink&quot; title=&quot;七、进程与线程&quot;&gt;&lt;/a&gt;七、进程与线程&lt;/h2&gt;&lt;p&gt;1.Python用mutiprocessing模块来实现多进程。&lt;/p&gt;
&lt;p&gt;2.如果要大量创建子进程，可以使用进程池,示例如下：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; multiprocessing &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Pool&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    p = Pool(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p.apply_async(long_time_task, args=(i,))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&#39;Waiting for all subprocesses done...&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    p.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    p.join()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&#39;All subprocesses done.&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;要使用进程池需新建Pool对象，对Pool对象调用join()使等待池中所有子进程运行完毕，调用join()方法之前必须调用close()，且此后无法再新加子进程。&lt;/p&gt;
&lt;p&gt;3.使用subprocess模块可以方便的启动并管理一个子进程，控制其输入输出。&lt;/p&gt;
&lt;p&gt;4.进程间通信使用Queue,Pipes实现。&lt;/p&gt;
&lt;p&gt;5.threading模块管理线程。threading.lock()创建线程锁，防止同时访问互斥资源造成的错误，示例如下：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;lock = threading.Lock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lock.acquire()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;change(mutex)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lock.release()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;6.ThreadLocal可以解决参数在一个线程中各个函数之间互相传递的问题。&lt;/p&gt;
&lt;p&gt;7.managers模块实现分布式进程。&lt;/p&gt;
&lt;h2 id=&quot;八、正则表达式与常用内建模块&quot;&gt;&lt;a href=&quot;#八、正则表达式与常用内建模块&quot; class=&quot;headerlink&quot; title=&quot;八、正则表达式与常用内建模块&quot;&gt;&lt;/a&gt;八、正则表达式与常用内建模块&lt;/h2&gt;&lt;p&gt;1.re模块进行正则表达式编译和匹配，如果该表达式需要匹配很多次，那么最好进行编译从而大大节省时间。&lt;/p&gt;
&lt;p&gt;正则表达式匹配邮箱例子：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hah = re.compile(&lt;span class=&quot;string&quot;&gt;&#39;[0-9a-zA-Z]+[\.[0-9a-zA-Z]+]*\@[0-9a-zA-Z]+\.[a-z]&amp;#123;2,3&amp;#125;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(hah.match(&lt;span class=&quot;string&quot;&gt;&#39;someone@gmail.com&#39;&lt;/span&gt;).group())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(hah.match(&lt;span class=&quot;string&quot;&gt;&#39;bill.gates@microsoft.com&#39;&lt;/span&gt;).group())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; i &amp;lt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r = input(&lt;span class=&quot;string&quot;&gt;&#39;请输入邮箱：&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(hah.match(r).group())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2.datetime模块进行日期和时间的处理，每一个时间对应一个timestamp，我们把1970年1月1日 00:00:00 UTC+00:00时区的时刻称为epoch time，记为0（1970年以前的时间timestamp为负数），当前时间就是相对于epoch time的秒数，称为timestamp。字符串和datetime也可以相互转换，采用strptime()方法，字符串转换为datetime时需要设定一个识别格式，其中&lt;br&gt;&lt;figure class=&quot;highlight mojolicious&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;span class=&quot;perl&quot;&gt;%Y-%m-%d %H:%M:%S&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;分别表示年-月-日 时-分-秒。&lt;br&gt;从datetime得出月份，星期等字符串用strftime()方法，其中：&lt;br&gt;&lt;figure class=&quot;highlight mojolicious&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;span class=&quot;perl&quot;&gt;%a, %b %d %H:%M&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;分别表示星期, 月份 日期 时:分。&lt;br&gt;示例：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; datetime &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; datetime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r = &lt;span class=&quot;string&quot;&gt;&#39;2015-11-23 12:01&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dt = datetime.strptime(r, &lt;span class=&quot;string&quot;&gt;&#39;%Y-%m-%d %H:%M&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(dt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;week = dt.strftime(&lt;span class=&quot;string&quot;&gt;&#39;%a %b %d, %H:%M&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(week)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2015&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-11&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-23&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;01&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Mon Nov &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;01&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3.datetime与timestamp的相互转换&lt;br&gt;有时候我们为了方便表示和存储时间，常将它转化为一个timestamp，即用一个唯一的数来表示时间，也方便看出时间早晚，有时候我们也需要将timestamp转化回我们惯常的时间格式，这就需要在timestamp和datetime之间相互转换，转换示例如下，主要函数为timestamp()和fromtimestamp()：&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&amp;gt; from datetime import datetime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&amp;gt; dtime = datetime(&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&amp;gt; dtime.timestamp()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1463731980.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&amp;gt; tstamp = dtime.timestamp()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&amp;gt; normaltime = datetime.fromtimestamp(tstamp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&amp;gt; normaltime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;datetime.datetime(&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&amp;gt; print(normaltime)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;4.collections是Python内建的一个集合模块，提供了许多有用的集合类。&lt;/p&gt;
&lt;p&gt;5.Base64是一种任意二进制到文本字符串的编码方法，常用于在URL、Cookie、网页中传输少量二进制数据。&lt;/p&gt;
&lt;p&gt;6.struct模块用来解决bytes和其他二进制数据类型的转换。&lt;/p&gt;
&lt;p&gt;7.Python的hashlib提供了常见的哈希算法，如MD5，SHA1等等。hashlib实现简单登录：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; hashlib&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;db = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;michael&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;e10adc3949ba59abbe56e057f20f883e&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;bob&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;878ef96e86145580c38c87f0410ad153&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;alice&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;99b1c2188db85afee403b1536010c2c9&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_md5&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ostr)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    md5 = hashlib.md5()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    md5.update(ostr.encode())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; md5.hexdigest()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(user, password)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r = get_md5(password)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; name &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; db:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; db[name] == r:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(login(&lt;span class=&quot;string&quot;&gt;&#39;bob&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;abc999&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;8.Python的内建模块itertools提供了非常有用的用于操作迭代对象的函数。&lt;/p&gt;
&lt;p&gt;9.urllib提供了一系列用于操作URL的功能。如GET,POST…&lt;/p&gt;
&lt;p&gt;10.PIL(Python Imaging Library Python图像库)是一个强大的图像处理标准库，功能强大却又简单易用。现在的名字叫做Pillow。可以如下安装Pillow:&lt;br&gt;&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip3 &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; pillow&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从下面生成数字验证码的程序可以窥其一斑：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; PIL &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Image, ImageDraw, ImageFont, ImageFilter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; random&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 随机字母:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;rndChar&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; chr(random.randint(&lt;span class=&quot;number&quot;&gt;48&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;57&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 随机颜色1:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;rndColor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (random.randint(&lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;), random.randint(&lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;), random.randint(&lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 随机颜色2:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;rndColor2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (random.randint(&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;127&lt;/span&gt;), random.randint(&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;127&lt;/span&gt;), random.randint(&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;127&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 240 x 60:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;width = &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;height = &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;image = Image.new(&lt;span class=&quot;string&quot;&gt;&#39;RGB&#39;&lt;/span&gt;, (width, height), (&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 创建Font对象:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;font = ImageFont.truetype(&lt;span class=&quot;string&quot;&gt;&#39;ariblk.ttf&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 创建Draw对象:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;draw = ImageDraw.Draw(image)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 填充每个像素:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(width):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; y &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(height):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        draw.point((x, y), fill=rndColor())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 输出文字:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; t &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    draw.text((&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt; * t + &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;), rndChar(), font=font, fill=rndColor2())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 模糊:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;image = image.filter(ImageFilter.BLUR)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;image.save(&lt;span class=&quot;string&quot;&gt;&#39;code.jpg&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;jpeg&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果：&lt;br&gt;&lt;img src=&quot;http://images2015.cnblogs.com/blog/591194/201602/591194-20160204134523569-1149420708.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;九、网络编程和电子邮件&quot;&gt;&lt;a href=&quot;#九、网络编程和电子邮件&quot; class=&quot;headerlink&quot; title=&quot;九、网络编程和电子邮件&quot;&gt;&lt;/a&gt;九、网络编程和电子邮件&lt;/h2&gt;&lt;p&gt;1.网络编程主要是TCP和UDP的编程，示例见&lt;a href=&quot;http://www.cnblogs.com/whatbeg/p/5155524.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【Python网络编程】利用Python进行TCP、UDP套接字编程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2.SMTP是发送邮件的协议，Python内置对SMTP的支持，可以发送纯文本邮件、HTML邮件以及带附件的邮件。Python对SMTP支持有smtplib和email两个模块，email负责构造邮件，smtplib负责发送邮件。Python内置一个poplib模块，实现了POP3协议，可以直接用来收邮件。由于现在绝大多数大型邮件服务商都采取了反垃圾邮件措施，所以这部分的简单实验并没有成功，还需进一步研究，等遇到具体情况再说。&lt;/p&gt;
&lt;p&gt;3.Python内嵌了sqlite数据库，还可以自行安装连接mysql，MySQL是当前最流行的开源数据库，在行业内有着广泛的应用。&lt;/p&gt;
&lt;h2 id=&quot;十、Web开发和异步IO&quot;&gt;&lt;a href=&quot;#十、Web开发和异步IO&quot; class=&quot;headerlink&quot; title=&quot;十、Web开发和异步IO&quot;&gt;&lt;/a&gt;十、Web开发和异步IO&lt;/h2&gt;&lt;p&gt;1.WSGI(Web Server Gateway Interface) 服务器网关接口。&lt;/p&gt;
&lt;p&gt;2.Python web 开发框架：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.jinkan.org/docs/flask/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Flask&lt;/a&gt;：流行的Web框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.djangoproject.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Django&lt;/a&gt;：全能型Web框架 &lt;a href=&quot;http://python.usyiyi.cn/django/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;中文文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://webpy.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;web.py&lt;/a&gt;：一个小巧的Web框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.bottlepy.org/docs/dev/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bottle&lt;/a&gt;：和Flask类似的Web框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.tornadoweb.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tornado&lt;/a&gt;：Facebook的开源异步Web框架 &lt;a href=&quot;http://www.tornadoweb.org/en/stable/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3.协程&lt;/p&gt;
&lt;h2 id=&quot;十一、更多资料&quot;&gt;&lt;a href=&quot;#十一、更多资料&quot; class=&quot;headerlink&quot; title=&quot;十一、更多资料&quot;&gt;&lt;/a&gt;十一、更多资料&lt;/h2&gt;&lt;p&gt;[1]&amp;nbsp;&lt;a href=&quot;http://www.liaoxuefeng.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 廖雪峰Python教程&lt;/a&gt;&lt;br&gt;[2]&amp;nbsp;&lt;a href=&quot;https://read.douban.com/reader/ebook/284513/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; Django入门教程&lt;/a&gt;&lt;br&gt;[3] &lt;a href=&quot;https://read.douban.com/ebook/16691849/?dcs=book-search&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《编程小白学Python》&lt;/a&gt;&lt;br&gt;[4] &lt;a href=&quot;https://book.douban.com/subject/3117898/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Python源码剖析》&lt;/a&gt;&lt;br&gt;[5] &lt;a href=&quot;https://book.douban.com/subject/10773324/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《Python标准库》&lt;/a&gt; Python字典式书籍，大部头&lt;/p&gt;
&lt;p&gt;（完） 2016.2.4初稿  5.2修改&lt;br&gt;原文地址：&lt;a href=&quot;http://whatbeg.com/2016/05/02/learnpython.html&quot;&gt;http://whatbeg.com/2016/05/02/learnpython.html&lt;/a&gt; 转载请注明出处。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文是本人学完Python后的一遍回顾，加深理解顺便留作手册以备查阅。&lt;/p&gt;
&lt;p&gt;学习Python的这几天来，觉得Python还是比较简单，容易上手的，就基本语法而言，但是有些高级特性掌握起来还是有些难度，需要时间去消化。Python给我最大的印象就是语法简洁，就像写伪
    
    </summary>
    
      <category term="Python" scheme="http://whatbeg.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://whatbeg.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>当我谈阅读时我谈些什么</title>
    <link href="http://whatbeg.com/2016/05/02/talkread.html"/>
    <id>http://whatbeg.com/2016/05/02/talkread.html</id>
    <published>2016-05-02T02:24:35.000Z</published>
    <updated>2016-05-23T13:54:17.466Z</updated>
    
    <content type="html">&lt;p&gt;我从小就喜欢阅读，小时候爷爷常常倒腾进来各种的书籍，我总能找到很多我想看的书，那时学业不紧，一放暑假就是狂玩，玩腻了就看看书，记得当年三国水浒这两部读得我热血澎湃，里面的仗义豪情，英雄气概让我为之痴迷，并且还不遗余力地收集着那些人物卡片，当然，方便面大部分是别人吃的。上到高中，空余时间就少了很多，充斥在我们周围的大多变成了读者，青年文摘，电脑报，篮球报，游戏报等故事资讯类读物，都是相互传阅，也是蛮有意思的。&lt;/p&gt;
&lt;p&gt;到大学我经常去图书馆找书来看，可是前几年都是看到一本，略略翻看一下，觉得有点意思就拿来看了，一看可能就坚持看完，不是极烂我一般不会中途丢掉，可是当时的品鉴力是很弱的，不知道什么是好书，什么是不值得拿起来看的书，导致鸡汤读了很多，成功学也读了不少，这两样书我现在是深恶痛绝的，为什么？&lt;/p&gt;
&lt;p&gt;因为这些书要么试图讲一些众所周知的道理，要么就是极力鼓吹成功，大谈怎样能成功，你可以成功之类的话，仿佛名利权就是这个世界上的唯一价值取向。我们都知道，懂得很多道理，也不见得能过好这一生，道理都懂，可是做到的人很少，鸡汤只能起到暂时麻醉的作用，如果一个人一味沉溺于心灵鸡汤，不仅会逐渐丧失行动力，而且会变得懦弱和玻璃心。&lt;/p&gt;
&lt;p&gt;成功学的书籍更是我们这个时代浮躁的产物，市场上充斥着大量的这类书籍，这些书籍无非先谈一下它的主题，然后举几个例子，然后总结一下这个主题，我们应该怎么怎么做就能成功，应该积极向上，培养人脉，向上管理等等，一个问题是它将别人成功的运气成分极大的忽视了，二是它只写到了成功的案例，而忽略了广大的失败案例，即‘&lt;a href=&quot;http://baike.baidu.com/view/4846327.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;幸存者偏见&lt;/a&gt;’，简单来说就是我们是看到了成功的例子，而失败的例子不会说话。三是妄图使人们相信他们都可以复制里面的成功。四是甚至会编一些逻辑都说不通的故事来忽悠。简直就是洗脑书。&lt;/p&gt;
&lt;p&gt;如果你还是想看点励志的东西，鼓励鼓励自己克服逆境，勇往直前，不放看看某些伟大人物的传记或者传记小说，看看《名人传》，《梵高传》，《约翰·克里斯朵夫》里面那些人物是怎么跟生活搏斗，跟世界搏斗，跟自己搏斗的，你的生活马上充满激情和勇气，当然，过几天仍然可能会早上起来一条路，但是这些名作的优越性在于它会紧紧扎根到我们的心里，强化人们的心灵，当我们遇到低谷时就会在潜意识里获得跳出来的巨大勇气。&lt;/p&gt;
&lt;p&gt;所以说，我的品鉴力是看过很多书才逐渐建立起来的，不过我仍然希望读者能够提前学习到这种品鉴力，实在要体察万类，那些无益的品类最多涉及一本就够了。如果读者不认为自己有着良好的品鉴力，一个好的方法是开始某本书之前事先看一下豆瓣读书的评分和评价，这样往往能帮你决定是否值得读下去。&lt;/p&gt;
&lt;p&gt;在做过必要的筛选过后，世界上的好书仍然不计其数，人们不可能穷尽这些书，所以还是需要作必要的选择取舍。鬼谷先生曾说，欲多则心散，心散则志衰，志衰则思不达也。如果老是此也想读彼也想读，借了或买了一大堆书，极有可能的结果是放在那里吃灰。或者可能滋生急于读完而不是读好的心态，好好的一场与大师的谈话就变成了“大师你快点说，我还约了别的大师”了，诸君切忌。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;我从小就喜欢阅读，小时候爷爷常常倒腾进来各种的书籍，我总能找到很多我想看的书，那时学业不紧，一放暑假就是狂玩，玩腻了就看看书，记得当年三国水浒这两部读得我热血澎湃，里面的仗义豪情，英雄气概让我为之痴迷，并且还不遗余力地收集着那些人物卡片，当然，方便面大部分是别人吃的。上到高
    
    </summary>
    
      <category term="随笔 | Essays" scheme="http://whatbeg.com/categories/%E9%9A%8F%E7%AC%94-Essays/"/>
    
    
      <category term="读书" scheme="http://whatbeg.com/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>【2016读书】4月读书笔记</title>
    <link href="http://whatbeg.com/2016/04/30/2016read-april.html"/>
    <id>http://whatbeg.com/2016/04/30/2016read-april.html</id>
    <published>2016-04-30T14:04:16.000Z</published>
    <updated>2016-05-14T11:40:23.702Z</updated>
    
    <content type="html">&lt;h2 id=&quot;《追风筝的人》-卡勒德·胡赛尼&quot;&gt;&lt;a href=&quot;#《追风筝的人》-卡勒德·胡赛尼&quot; class=&quot;headerlink&quot; title=&quot;《追风筝的人》 卡勒德·胡赛尼&quot;&gt;&lt;/a&gt;《追风筝的人》 卡勒德·胡赛尼&lt;/h2&gt;&lt;p&gt;看完《追风筝的人》的感觉远不如正在看的时候感觉强烈，似乎我只是看完了一个故事，一个稍微有点长的故事。看完这本书，给我留下深刻影响的并非是这个故事，而是这个故事发生的国度，对，阿富汗，第一次对阿富汗这个国家了解到这个程度。以前的我对阿富汗的印象包括：战乱，贫穷，干旱，可是现在多了几样：政治，苦难，人性，以及宗教。这是个离我们不远的国度，他们依然有着美丽善良的人们，即使遭受战争，动乱，宗教迫害，种族歧视，仍然有很多可爱热心的人生活在那里。阿米尔和哈桑，他们都是善良的，只是他们在那个充满种族歧视的年代，难免无法做成真正的朋友，哈桑的忠心让我钦佩，阿米尔的悔改让我动容。总之，盖上这本书，回荡在我脑中的，更多的是那个年代阿富汗一幅幅的画面。为这个故事致敬，为作者致敬！&lt;/p&gt;
&lt;h2 id=&quot;《HTTP权威指南》-David等&quot;&gt;&lt;a href=&quot;#《HTTP权威指南》-David等&quot; class=&quot;headerlink&quot; title=&quot;《HTTP权威指南》 David等&quot;&gt;&lt;/a&gt;《HTTP权威指南》 David等&lt;/h2&gt;&lt;p&gt;全面介绍了HTTP协议的各个部分，十多年前的书了，但是至今仍被奉为Web开发者必读经典。我的书评：&lt;a href=&quot;http://whatbeg.com/2016/04/06/httpguide.html&quot;&gt;http://whatbeg.com/2016/04/06/httpguide.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;《浪潮之巅》-下-吴军&quot;&gt;&lt;a href=&quot;#《浪潮之巅》-下-吴军&quot; class=&quot;headerlink&quot; title=&quot;《浪潮之巅》(下)  吴军&quot;&gt;&lt;/a&gt;《浪潮之巅》(下)  吴军&lt;/h2&gt;&lt;p&gt;此前很多人推荐这本书，拿起一看，迅速地吸引了我，这本书讲述了很多科技公司的历史，有辉煌有没落。这本书只讲商业，无关其他。如果你是一个程序员，那么这本书能把你的视角从具体的技术上升到整个行业，能让你有不同的感受。&lt;br&gt;简单介绍一下这本书，它讲了如下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一些曾经辉煌一时，但是后来又没落下去的公司&lt;/li&gt;
&lt;li&gt;解释了什么叫风险投资，以及对风险投资进行剖析，并介绍了一些著名的风投公司。&lt;/li&gt;
&lt;li&gt;信息产业的规律性&lt;ul&gt;
&lt;li&gt;70-20-10定律：一个稳定的信息行业老大占市场份额70%，老二占20%左右，而剩下的10%由剩下的小公司划分。&lt;/li&gt;
&lt;li&gt;诺威格定律：一个公司的市场占有率超过50%，就无法再使占有率翻番了，它的成长会受限于整个行业的成长，所以，它只能寻求新的增长点，才能不断满足华尔街的预期。&lt;/li&gt;
&lt;li&gt;基因决定定律：一个公司的基因决定了一个公司的命运，一个公司做到一定的程度想要转型是很困难的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;斯坦福大学的教育模式，是创业的孵化器。&lt;/li&gt;
&lt;li&gt;介绍了投资银行，金融体系，华尔街的重要作用。&lt;/li&gt;
&lt;li&gt;介绍了Google公司的历史与其企业文化&lt;/li&gt;
&lt;li&gt;成功的转基因的例子： 诺基亚，3M，GE&lt;/li&gt;
&lt;li&gt;探讨了什么是最佳的商业模式，即印钞机一样的自动挣钱的模式，如Google的广告系统，eBay、亚马逊的在线时长，戴尔的虚拟工厂，腾讯的虚拟物品等。&lt;/li&gt;
&lt;li&gt;探讨互联网2.0，以及成功的互联网2.0公司，虽然极少&lt;/li&gt;
&lt;li&gt;金融风暴，金融危机是如何产生的，又是如何影响科技公司的。&lt;/li&gt;
&lt;li&gt;云计算及其泡沫与机会&lt;/li&gt;
&lt;li&gt;对下一个千亿公司领域等的分析预测。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;精彩书摘：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.通过一款产品抓住终端用户，然后通过一些服务从每一个用户身上挣钱。&lt;/li&gt;
&lt;li&gt;2.中国的问题是，人们似乎不需要靠科技的进步和实业就可以取得财富。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;《爱你就像爱生命》-王小波&quot;&gt;&lt;a href=&quot;#《爱你就像爱生命》-王小波&quot; class=&quot;headerlink&quot; title=&quot;《爱你就像爱生命》  王小波&quot;&gt;&lt;/a&gt;《爱你就像爱生命》  王小波&lt;/h2&gt;&lt;p&gt;王小波的作品语言很优美，有时也很直白，什么话都是可以说的，这也体现了他的真实，不矫饰，读来着实有趣。&lt;br&gt;这本书是他的书信集，大部分是情书吧，不得不说小波叔简直太能撩了，撩得天昏地暗，日月无光，是块冰也被他说化了。。&lt;br&gt;波叔还是一个地道的程序员来的，什么C语言，汇编，FORTRAN，虚拟内存，玩的飞起，各种程序自己写，攒机搞DIY也是一把好手，什么？电脑坏了？换块板子就好了。&lt;br&gt;还有一段描述欧洲各国的话挺精彩，也很准确：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;英国与欧陆截然不同，又古板又整齐，不过穷得很&lt;br&gt;法国人贪大求洋，拼命摆排场，追尖端，就没看见卢浮宫已经被烟熏黑了&lt;br&gt;意大利到处都是古迹和贼&lt;br&gt;奥地利和德国没有不守规矩的人&lt;br&gt;荷兰干净漂亮，比利时又破又烂&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;还有一些现在流行的脏话好像这里也有，不会是他发明的吧。。&lt;br&gt;比如什么“肚皮上割口子，假充二笔(bi)”（这话我一开始都没懂。。），“傻逼”之类的词。&lt;br&gt;这就是王小波，一个有趣的人。&lt;br&gt;经典语录：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我曾经相信只要不虚度光阴，把命运赐给我的全部智力发挥到顶点，做成一件无愧于人类智慧的事情，就对得起自己，并且也是对未来的贡献。&lt;/li&gt;
&lt;li&gt;请你不要恨我，我给你唱一支好听的歌吧。&lt;/li&gt;
&lt;li&gt;人在年轻时，觉得到处都是人，别人的事都是你的事，到了中年以后，才觉得世界上除了家人已经一无所有，自己的事都做不过来。以此类推，到了老年，必定觉得很孤独，还会觉得做什么都力不从心。&lt;/li&gt;
&lt;li&gt;静下来想你，觉得一切都美好得不可思议。&lt;/li&gt;
&lt;li&gt;我的勇气和你的勇气加起来，对付这个世界总够了吧？要无忧无虑地去抒情，去歌舞狂欢，去向世界发出我们的声音，我一个人是不敢的，我怕人家说我疯，有了你我就敢。只要有你一个，就不孤独！ &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;五月读书计划&quot;&gt;&lt;a href=&quot;#五月读书计划&quot; class=&quot;headerlink&quot; title=&quot;五月读书计划&quot;&gt;&lt;/a&gt;五月读书计划&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;1.《机器学习实战》&lt;br&gt;2.《鸟哥的Linux私房菜》&lt;br&gt;3.《浪潮之巅》&lt;br&gt;4.&amp;nbsp;&amp;nbsp;王小波作品&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;《追风筝的人》-卡勒德·胡赛尼&quot;&gt;&lt;a href=&quot;#《追风筝的人》-卡勒德·胡赛尼&quot; class=&quot;headerlink&quot; title=&quot;《追风筝的人》 卡勒德·胡赛尼&quot;&gt;&lt;/a&gt;《追风筝的人》 卡勒德·胡赛尼&lt;/h2&gt;&lt;p&gt;看完《追风筝的人》的感觉远不如正在看
    
    </summary>
    
      <category term="读书 | Reading" scheme="http://whatbeg.com/categories/%E8%AF%BB%E4%B9%A6-Reading/"/>
    
    
      <category term="读书" scheme="http://whatbeg.com/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>许巍写歌最喜欢用什么词？</title>
    <link href="http://whatbeg.com/2016/04/26/xuweilrc.html"/>
    <id>http://whatbeg.com/2016/04/26/xuweilrc.html</id>
    <published>2016-04-26T11:22:39.000Z</published>
    <updated>2016-05-21T07:20:10.700Z</updated>
    
    <content type="html">&lt;h2 id=&quot;关键词&quot;&gt;&lt;a href=&quot;#关键词&quot; class=&quot;headerlink&quot; title=&quot;关键词&quot;&gt;&lt;/a&gt;关键词&lt;/h2&gt;&lt;p&gt;结巴分词 中文分词 TF-IDF 词频 逆文档频率&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;自从第一次听到许巍的歌，就深深地迷上了他的歌，感觉每一首都钻到了我的心里，也早已把他的歌听得烂熟了。许巍，我最喜欢的歌手，没有之一！&lt;/p&gt;
&lt;p&gt;本文我要解决以下问题： &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;爬取许巍每首歌的歌词，统计他最喜欢用哪些词（即歌词的关键词）&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;很简单地想到就是直接统计每个词出现的次数（词频TF，词出现的频率，下文同），这样确实可以得到大部分的信息。但是也有两点不好：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.有很多诸如”的”,”一个”,”没有”等无实意的助词等可能会得到很高的词频，这些词叫做“&lt;a href=&quot;http://baike.baidu.com/view/3784680.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;停用词&lt;/a&gt;”，当然我们可以把它们去掉，像我的代码里就去掉了长度小于2的词，两个词及以上就不能再去了，但是还是会有一些残留。&lt;/li&gt;
&lt;li&gt;2.如果出现次数一样呢？当然如果只是为了看下每个词出现的情况，大概了解一下，其实统计下词频就够了，但是为了充分利用数据（好不容易爬来的。。），并得到更多的信息，不妨再多做一步吧。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;考虑词频相同的两个词A和B，都出现n次，如果A只在一篇文章出现，出现n次，而B在n篇文章中出现，每篇都出现1次，那么我们认为B这个词很常见，大家都有，所以并不重要，也不能够很好地区分文档；而词A要出现只出现在一篇文章，出现地点比较少，大家不常见到，且能够很好地区分出那篇文档，那么认为它更加重要。自然想到重要性的体现用某个单词在多少篇文档中出现的次数来衡量（sfd），这就是IDF（逆文档频率 Inverse Document Frequency)。&lt;br&gt;上面两个指标TF和IDF乘起来就得到了著名的TF-IDF算法fd的核心。&lt;br&gt;&lt;a href=&quot;http://baike.baidu.com/view/1228847.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;什么是TF-IDF算法?&lt;/a&gt;&lt;br&gt;下面是计算方法：&lt;br&gt;由于每首歌的长短不同，所以我们将词频归一化，即某个词的词频记为该词在每篇文章中的次数除以该篇文章的总词数的累加和。&lt;/p&gt;
&lt;p&gt;$$ TF_i = \sum{Freq_i \over Length(D_d)}$$&lt;/p&gt;
&lt;p&gt;而IDF记为文档总数除以出现该词的文档数，显然，出现某个词的文档数越多，分母越大，则IDF越小，比重越小。&lt;/p&gt;
&lt;p&gt;$$IDF_i = log({|D| \over numDoc_i})$$&lt;/p&gt;
&lt;p&gt;$$TF-IDF = TF \times IDF$$&lt;/p&gt;
&lt;h2 id=&quot;获取数据&quot;&gt;&lt;a href=&quot;#获取数据&quot; class=&quot;headerlink&quot; title=&quot;获取数据&quot;&gt;&lt;/a&gt;获取数据&lt;/h2&gt;&lt;p&gt;获取数据细节不说了，就是查看网页源代码，然后制定爬取策略，我没有用框架，但是代码量也不大。如果不熟悉爬取数据的方法，可以看我这几篇文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://whatbeg.com/2016/04/14/logincnblogs.html&quot;&gt;【Python模拟登录】(二) 加密与重放方式登录 -以模拟登录博客园为例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/whatbeg/p/5325529.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【Python数据分析】Python3操作Excel-以豆瓣图书Top250为例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/whatbeg/p/4199604.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【Python数据分析】简单爬虫 爬取知乎神回复&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/whatbeg/p/5127850.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【Python数据分析】工作日发文章比周末发文章访问量高？&lt;/a&gt;&lt;br&gt;这里还是贴下实现的代码：&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; urllib&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; bs4 &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; BeautifulSoup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; codecs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getPostdata&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(artistId=&lt;span class=&quot;number&quot;&gt;1158&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s = requests.Session()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    postData = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;type&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;artSong&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&#39;artistId&#39;&lt;/span&gt;: artistId&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; s,postData&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PrintLis&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(lis)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(lis)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(lis[j])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Cleanit&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Str)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Str = Str.replace(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;/br&amp;gt;&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Str = Str.replace(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;br/&amp;gt;&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Str = Str.replace(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;/div&amp;gt;&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Str = Str.replace(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;div class=&quot;lrc&quot; id=&quot;lrc_yes&quot;&amp;gt;&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;).strip()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    returnLis = Str.split(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;br&amp;gt;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; returnLis&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;WriteLis&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(fr,lis)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; li &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; lis:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fr.write(li + &lt;span class=&quot;string&quot;&gt;&#39;\r\n&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Crawl&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(s,headers,crawlist,crawlist_name)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    path_base = &lt;span class=&quot;string&quot;&gt;&quot;D:\\Python Workspace\\Data\\LRC_许巍\\&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    geciurl_base = &lt;span class=&quot;string&quot;&gt;&quot;http://www.kuwo.cn/geci/l_&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(crawlist)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ID = crawlist[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        geciurl = geciurl_base + ID&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        filename = str(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        path = path_base + filename + &lt;span class=&quot;string&quot;&gt;&#39;.txt&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(crawlist_name[i],path,geciurl)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fr = codecs.open(path,&lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        req = s.get(geciurl,headers=headers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        soup = BeautifulSoup(req.text,&lt;span class=&quot;string&quot;&gt;&quot;html.parser&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lrc_yes = soup.findAll(attrs = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;lrc_yes&#39;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(lrc_yes) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        returnLis = Cleanit(str(lrc_yes[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#PrintLis(returnLis)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fr.write(crawlist_name[i] + &lt;span class=&quot;string&quot;&gt;&#39;\r\n&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        WriteLis(fr,returnLis)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fr.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i &amp;gt;= &lt;span class=&quot;number&quot;&gt;103&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    headers = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;Accept&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;application/json, text/javascript, */*; q=0.01&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;Referer&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;http://passport.cnblogs.com/user/signin&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;User-Agent&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url = &lt;span class=&quot;string&quot;&gt;&quot;http://www.kuwo.cn/geci/wb/getJsonData&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s,postData = getPostdata()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    idtoname = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mylis = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postData[&lt;span class=&quot;string&quot;&gt;&#39;page&#39;&lt;/span&gt;] = i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        req = s.post(url,data = postData,headers=headers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dic = req.content.decode()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        patids = re.compile(&lt;span class=&quot;string&quot;&gt;&#39;\&quot;rid\&quot;:\&quot;(.*)\&quot;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        patnames = re.compile(&lt;span class=&quot;string&quot;&gt;&#39;\&quot;name\&quot;:\&quot;(.*)\&quot;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pat2 = re.compile(&lt;span class=&quot;string&quot;&gt;&#39;\[(.*)\]&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        js = pat2.findall(dic)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pat3 = re.compile(&lt;span class=&quot;string&quot;&gt;&#39;\&amp;#123;(.*?)\&amp;#125;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lis = pat3.findall(js)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(len(lis))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; li &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; lis:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sonlis = li.split(&lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ids = patids.findall(sonlis[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            names = patnames.findall(sonlis[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Mylis.append([ids[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],names[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].split(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].split(&lt;span class=&quot;string&quot;&gt;&#39;-&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].split(&lt;span class=&quot;string&quot;&gt;&#39;(&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;#print(ids[0],names[0].split(&#39; &#39;)[0].split(&#39;-&#39;)[0])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            idtoname[ids[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]] = names[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nameset = set([])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    crawlist = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    crawlist_name = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; items &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; Mylis:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#print(items)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; items[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; nameset:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nameset.add(items[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            crawlist.append(items[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            crawlist_name.append(items[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Crawl(s,headers,crawlist,crawlist_name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Get()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;包括了去重等操作，不多次爬取同名歌曲的歌词， 这样下来也有160多个，显然不科学，我自己删掉了一些明显不合理的，剩下不到100个文件，其实他的原创歌曲好像也就几十首来的，这些文件还有一些是空文件，每个歌词文件第一行我都写了歌曲名字，对统计影响不大，其他歌词里或许还有其他信息什么的，影响也不大，就不管了。&lt;/p&gt;
&lt;h2 id=&quot;统计&quot;&gt;&lt;a href=&quot;#统计&quot; class=&quot;headerlink&quot; title=&quot;统计&quot;&gt;&lt;/a&gt;统计&lt;/h2&gt;&lt;p&gt;然后就是统计，计算：&lt;br&gt;中文分词用的是&lt;a href=&quot;https://github.com/fxsjy/jieba&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;结巴分词&lt;/a&gt;，还是挺准确的。&lt;br&gt;安装的话(Python 3.x, Windows)最简便的方法就是: pip3 install jieba3k&lt;br&gt;一个简单的分词例子：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; jieba&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;list(jieba.cut(&lt;span class=&quot;string&quot;&gt;&#39;我爱北京天安门&#39;&lt;/span&gt;,cut_all=&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Building prefix dict &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; C:\Users\Allen\AppData\Local\Programs\Python\Python35&lt;span class=&quot;number&quot;&gt;-32&lt;/span&gt;\lib\site-packages\jieba\dict.txt ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Loading model &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; cache C:\Users\Allen\AppData\Local\Temp\jieba.cache&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Loading model cost &lt;span class=&quot;number&quot;&gt;1.318878412246704&lt;/span&gt; seconds.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Prefix dict has been built succesfully.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;string&quot;&gt;&#39;我&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;爱&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;北京&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;天安门&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; jieba&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; operator &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; itemgetter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; math &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getpath&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(i)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    path = &lt;span class=&quot;string&quot;&gt;&quot;D:\\Python Workspace\\Data\\LRC_许巍\\%d.txt&quot;&lt;/span&gt; % i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;analysis&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TF = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IDF = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Count = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;103&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        filepath = getpath(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nowdic = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SumWords = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(filepath) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; fr:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; line &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; fr.readlines():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    line = line.strip()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    lis = list(jieba.cut(line,cut_all=&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    SumWords += float(len(lis))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; li &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; lis:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(li) &amp;lt;= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; li &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; IDF.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            IDF[li] = [i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            IDF[li].append(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; li &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; nowdic.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            nowdic[li] = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            nowdic[li] += &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Count += &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; SumWords &amp;gt; &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; nowdic.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        nowdic[key] = float(nowdic[key] / SumWords)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; TF.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            TF[key] = nowdic[key]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            TF[key] += nowdic[key]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; IOError &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; err:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; IDF.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        numDoc = float(len(set(IDF[key])))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IDF[key] = log(Count / (numDoc + &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TF_IDF = TF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; TF_IDF.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TF_IDF[key] = float(TF_IDF[key] * TF[key])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(len(TF))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sortedDic = sorted(TF_IDF.items(),key=itemgetter(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),reverse=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fw = open(&lt;span class=&quot;string&quot;&gt;&#39;D:\\Python Workspace\\Data\\许巍TFIDF.txt&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; sortedDic:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fw.write(str(key[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])+&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;+str(key[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])+&lt;span class=&quot;string&quot;&gt;&#39;\r\n&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i &amp;gt;= &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(key[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],key[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fw.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    analysis()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;结果分析&quot;&gt;&lt;a href=&quot;#结果分析&quot; class=&quot;headerlink&quot; title=&quot;结果分析&quot;&gt;&lt;/a&gt;结果分析&lt;/h2&gt;&lt;p&gt;最后得出TF-IDF值最高的几个词如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;单词&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;出现次数&lt;/th&gt;
&lt;th&gt;TF-IDF&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;世界&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;106&lt;/td&gt;
&lt;td&gt;0.364377&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;温暖&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;68&lt;/td&gt;
&lt;td&gt;0.145753&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;我们&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;69&lt;/td&gt;
&lt;td&gt;0.141222&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;春天&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;55&lt;/td&gt;
&lt;td&gt;0.113613&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;遥远&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;45&lt;/td&gt;
&lt;td&gt;0.079318&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;永远&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;53&lt;/td&gt;
&lt;td&gt;0.076681&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;天空&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;46&lt;/td&gt;
&lt;td&gt;0.072888&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;梦想&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;48&lt;/td&gt;
&lt;td&gt;0.068688&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;阳光&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;47&lt;/td&gt;
&lt;td&gt;0.064827&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;自由&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;41&lt;/td&gt;
&lt;td&gt;0.060018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;IDF最高的几个词如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;IDF Top 5&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;出现次数&lt;/th&gt;
&lt;th&gt;IDF&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;结束&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;1&lt;/td&gt;
&lt;td&gt;3.8712&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;韵律&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;1&lt;/td&gt;
&lt;td&gt;3.8712&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;木马&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;6&lt;/td&gt;
&lt;td&gt;3.8712&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;恍若隔世&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;2&lt;/td&gt;
&lt;td&gt;3.8712&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;土壤&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;1&lt;/td&gt;
&lt;td&gt;3.8712&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;由以上两个表可以看出，“世界”这个词的TF-IDF值是最高的，而且比其它词高出很多，说明它出现的多也比较集中，比如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;心中那自由的世界      –《蓝莲花》&lt;br&gt;让我们的世界绚丽多彩  –《旅行》&lt;br&gt;那理想世界 就像一道光芒 –《那一年》&lt;br&gt;想了解这世界 命运 –《灿烂》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;等等，看来许巍真的很喜欢用世界这个词啊。&lt;br&gt;还可以看出IDF高的基本都是出现很少的，因为太集中了，就出现在一首歌里。。&lt;/p&gt;
&lt;h2 id=&quot;后记&quot;&gt;&lt;a href=&quot;#后记&quot; class=&quot;headerlink&quot; title=&quot;后记&quot;&gt;&lt;/a&gt;后记&lt;/h2&gt;&lt;p&gt;数据拿到了，下一步可以考虑拓展地做一些工作了，比如计算两首歌的相似性，看哪两首歌最像，可以参考&lt;a href=&quot;http://www.ruanyifeng.com/blog/2013/03/cosine_similarity.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;余弦相似性&lt;/a&gt;，或者自动生成每首歌的摘要，或以词搜歌什么的，读者有什么好的想法欢迎评论哦:D&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关键词&quot;&gt;&lt;a href=&quot;#关键词&quot; class=&quot;headerlink&quot; title=&quot;关键词&quot;&gt;&lt;/a&gt;关键词&lt;/h2&gt;&lt;p&gt;结巴分词 中文分词 TF-IDF 词频 逆文档频率&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;hea
    
    </summary>
    
      <category term="数据科学 | Data Science" scheme="http://whatbeg.com/categories/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6-Data-Science/"/>
    
    
      <category term="Python" scheme="http://whatbeg.com/tags/Python/"/>
    
      <category term="数据分析" scheme="http://whatbeg.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>《查拉图斯特拉如是说》读书笔记</title>
    <link href="http://whatbeg.com/2016/04/26/zarathushtra.html"/>
    <id>http://whatbeg.com/2016/04/26/zarathushtra.html</id>
    <published>2016-04-26T03:14:27.000Z</published>
    <updated>2016-05-26T03:16:32.182Z</updated>
    
    <content type="html">&lt;h2 id=&quot;第一部&quot;&gt;&lt;a href=&quot;#第一部&quot; class=&quot;headerlink&quot; title=&quot;第一部&quot;&gt;&lt;/a&gt;第一部&lt;/h2&gt;&lt;p&gt;1.人的精神有三重境界：初级境界就像骆驼，中级境界就像狮子，高级境界就像孩子。之所以说人之精神的初级境界就像骆驼，是因为有很 多重负压在人的精神上久而久之，人默默地忍受着，不以其为重负，反而对其充满了虔诚之心，就像骆驼驮着重担不停地在沙漠上行走着。&lt;br&gt;这些重负是什么呢？&lt;br&gt;装得谦卑是为了隐藏骄傲；表现痴狂而忘记了智慧；庆祝胜利时却失去了初衷；取得进步时受到了各种诱惑；为了真理而追求知识却忽 略了去提生高贵的灵魂；与并非真正需要的人为友；吸收知识时良莠不分；爱那些轻视我们的人而且帮助那些威胁我们的人。所有的这些就如骆驼背着上的负担，而人们为了委曲求全就如骆驼那样始终驮着它们一直走下去。&lt;/p&gt;
&lt;p&gt;2.但思想是一回事，行动是另外一回事，行为的观念又是另外一回事。&lt;/p&gt;
&lt;p&gt;3.你想站在广阔的高处；你的灵魂渴望星。但是你邪恶的本能也渴望自由。&lt;/p&gt;
&lt;p&gt;4但以我的爱与希望恳求你，.不要抛开你灵魂中的英雄吧！神圣地保持着你的最高希望吧！&lt;/p&gt;
&lt;p&gt;5.如果你们更相信生命，那么你们将很少耽于目前的瞬间。你们内中还没有足够的能力来等待，甚至怠惰。&lt;/p&gt;
&lt;p&gt;6.你们还不曾伟大到不知仇恨与嫉妒，那就伟大到不以他们为羞耻吧。&lt;/p&gt;
&lt;p&gt;7.不是你们的同情，而是你们的勇敢于今挽救了受难者。   &lt;/p&gt;
&lt;p&gt;8.人是有待超越之物。&lt;/p&gt;
&lt;p&gt;9.那占有得很少的人被占有的人也很少。&lt;/p&gt;
&lt;p&gt;10.在这世上，即便是最好之物，若无人将其表现，也毫无价值。那些表现者，民众称之为伟人。&lt;/p&gt;
&lt;p&gt;11.所有深邃源泉的经验都是缓慢的：他们要等很长时间才知道什么东西落到了他们的深处。&lt;/p&gt;
&lt;p&gt;12.远离市场与名誉，是一切伟大之物发生之处。&lt;/p&gt;
&lt;p&gt;13.长久以来，女人身上隐藏着一个奴隶和一个暴君。因此女人不足以有友谊：她只知道爱情。&lt;/p&gt;
&lt;p&gt;14.谁要成为创造者就要经常破坏。&lt;/p&gt;
&lt;p&gt;15.当很多人抛开了他的苦役时，他也抛开了他的终极价值。&lt;/p&gt;
&lt;p&gt;16.你强迫很多人改变对你的想法，以此，他们向你索取沉重的代价。&lt;/p&gt;
&lt;p&gt;17.你可能遇到的最大的敌人，永远是你自己。&lt;/p&gt;
&lt;p&gt;18.真的男人需要的是两样不同的东西：危险以及消遣。&lt;/p&gt;
&lt;p&gt;19.当你们拥有一个敌人的时候，不要以德报怨，因为那会使他难堪，而要证明他对你做过一些好事。&lt;/p&gt;
&lt;p&gt;20.谁要想拥有声名，就必须及时放弃荣誉，操练那最困难的艺术—-适时离开。&lt;/p&gt;
&lt;p&gt;21.你们还没有找到自己，于是你们找到了我。所有信徒都这样，因此一切信仰都没什么要紧的。&lt;/p&gt;
&lt;h2 id=&quot;第二部&quot;&gt;&lt;a href=&quot;#第二部&quot; class=&quot;headerlink&quot; title=&quot;第二部&quot;&gt;&lt;/a&gt;第二部&lt;/h2&gt;&lt;p&gt;22.当我们更好地学着去自我享受时，我们便更能忘记去伤害别人以及制造痛苦。&lt;/p&gt;
&lt;p&gt;23.人应当固守其心灵，因为当人们放任了它，他的头脑将会怎样迅速逃遁啊。&lt;/p&gt;
&lt;p&gt;24.精神就是自我切割生命的生命，它通过折磨自己来增长自己的知识。&lt;/p&gt;
&lt;p&gt;25.凡是不能服从自己的，便要听从命令。&lt;/p&gt;
&lt;p&gt;26.正如渺小者让自己臣服于伟大者，以便他可以拥有凌驾于一切最小者之上的权力和乐趣。&lt;/p&gt;
&lt;p&gt;27.哪里有牺牲与服务及爱之目光，哪里就有要做主人的意志。&lt;/p&gt;
&lt;p&gt;28.你们应当追求柱石之道德：它上升得越高，就变得越美丽，越优雅—-可是其内部也变得越坚固，越能负重。&lt;/p&gt;
&lt;p&gt;29.不是高处可怕，而是陡坡可怕！&lt;/p&gt;
&lt;p&gt;30.允许我自己受骗，以便不用去提防骗子。&lt;/p&gt;
&lt;p&gt;31.执行伟大事业是困难的，可是更困难的事是指挥伟大事业。&lt;/p&gt;
&lt;p&gt;32.是最寂静的语言带来了风暴，鸽子的脚步所带来的思想引导着世界。&lt;/p&gt;
&lt;h2 id=&quot;第三部&quot;&gt;&lt;a href=&quot;#第三部&quot; class=&quot;headerlink&quot; title=&quot;第三部&quot;&gt;&lt;/a&gt;第三部&lt;/h2&gt;&lt;p&gt;33.那经常过度放纵自己的人，最后病于他的放纵。&lt;/p&gt;
&lt;p&gt;34.学会从自己这里远望开去，对于要看到许多事物是必要的。&lt;/p&gt;
&lt;p&gt;35.爱是那最寂寞者的危险，他对但凡活着的任何事物都爱。&lt;/p&gt;
&lt;p&gt;36.为了他以及那些和他一样的人的缘故，我必须完善我自己，因此我现在避免我的幸福，并且把我自己带到每一个不幸面前—-为了完成我的最后检验与认可。&lt;/p&gt;
&lt;p&gt;37.在他们心中他们只有一样东西最想要，那就是无人伤害他们。他们如是迎合每一个人的愿望并与人为善。可是，那是懦弱，尽管它被称作“道德”。&lt;/p&gt;
&lt;p&gt;38.对于某个人，孤独是对病弱者的逃避；对于另一个，它是对于病弱者的逃避。&lt;/p&gt;
&lt;p&gt;39.以纯真的东西为营养，而且要得很少，预备好并迫不及待地要奋飞，飞走 — 那是我如今的本性。&lt;/p&gt;
&lt;p&gt;40.可是人类自己才是唯一难以忍受的！这其中的原因是他肩膀上负载了太多身外之物，像骆驼一样他跪下，以便让他自己很好地承载。尤其是那心存虔敬的强壮的负重之人，他在自己身上背负了太多身外的沉重语言和价值—-于是生命在他看来是一片沙漠！&lt;/p&gt;
&lt;p&gt;41.去咀嚼并消化一切—-那是真正的猪之本性！总是说是—-只有驴子才学会了这个，还有那类似驴子者。&lt;/p&gt;
&lt;p&gt;42.谁希望有朝一日能飞翔，就必须首先学会站立与行走与奔跑与攀援与跳舞 —- 人不能通过飞翔来实现飞翔。&lt;/p&gt;
&lt;p&gt;43.一个人不应当指望享受，当他无所奉献给这享受的时候。&lt;/p&gt;
&lt;p&gt;44.一切都是自由： 你能够，因为你愿意！&lt;/p&gt;
&lt;p&gt;45.意愿带来解放：因为意愿在创造：我这般教导着。你们应当只为创造而学习。&lt;/p&gt;
&lt;h2 id=&quot;第四部&quot;&gt;&lt;a href=&quot;#第四部&quot; class=&quot;headerlink&quot; title=&quot;第四部&quot;&gt;&lt;/a&gt;第四部&lt;/h2&gt;&lt;p&gt;46.正确地给予比正确地索取要困难多少，恰当地赠与是一门艺术—-善良之最终与最精巧的手艺。&lt;/p&gt;
&lt;p&gt;47.如我所好地活着，否则干脆不要活着。&lt;/p&gt;
&lt;p&gt;48.只有那知道他驶向何处的人，才知道什么是好风，什么是有益于他的顺风。&lt;/p&gt;
&lt;p&gt;49.微小的事物成就最大的幸福。&lt;/p&gt;
&lt;p&gt;50.上帝已死：如今我们渴望—-超人生存！&lt;/p&gt;
&lt;p&gt;51.适度的贫穷是幸福的。&lt;/p&gt;
&lt;p&gt;52.宁可绝望也不要屈服。&lt;/p&gt;
&lt;p&gt;53.我的智慧像云朵一样积累着，它变得更凝重，更黑暗。因此所有的智慧有朝一日都会诞生出闪电。&lt;/p&gt;
&lt;p&gt;55.不要希求任何超过你力量的人。&lt;/p&gt;
&lt;p&gt;56.如果你想升高，那么用你自己的双腿吧！不要让你自己被运到高处；不要坐在其他人的背上或头上。&lt;/p&gt;
&lt;p&gt;57.正是你的道德希望你们不要与“为”，“由于”以及“因为”有任何瓜葛。&lt;/p&gt;
&lt;p&gt;58.假如你们的伟大事业失败了，你们自己难道就因此而—-失败了吗？…如果人失败了：好啦！别在意啦！…振作起来；这有什么关系？多少事情仍有可能！学着嘲笑你自己吧，就像你们应该嘲笑的那样！&lt;/p&gt;
&lt;p&gt;59.把渺小的、良好的、完美的事物至于你们左右吧，你们这些更高之人。他们金黄的成熟可以治愈心灵。完美之物教人以希望。&lt;/p&gt;
&lt;p&gt;60.超越自己而跳舞！你们失败了又有什么关系呢！多少事情仍有可能！因此，学会超越自己而大笑吧！举起你们的心，你们这些善舞者，高高的！更高的！不要忘了开怀地笑！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第一部&quot;&gt;&lt;a href=&quot;#第一部&quot; class=&quot;headerlink&quot; title=&quot;第一部&quot;&gt;&lt;/a&gt;第一部&lt;/h2&gt;&lt;p&gt;1.人的精神有三重境界：初级境界就像骆驼，中级境界就像狮子，高级境界就像孩子。之所以说人之精神的初级境界就像骆驼，是因为有很 多重负
    
    </summary>
    
      <category term="读书 | Reading" scheme="http://whatbeg.com/categories/%E8%AF%BB%E4%B9%A6-Reading/"/>
    
    
      <category term="读书" scheme="http://whatbeg.com/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>Numpy模块的一些方法收集</title>
    <link href="http://whatbeg.com/2016/04/25/numpy.html"/>
    <id>http://whatbeg.com/2016/04/25/numpy.html</id>
    <published>2016-04-25T12:36:55.000Z</published>
    <updated>2016-05-21T07:20:04.044Z</updated>
    
    <content type="html">&lt;p&gt;最近经常需要用到Python矩阵计算处理模块Numpy，有些方法不是很熟悉，这里手机记录一下，备查备忘。&lt;/p&gt;
&lt;h2 id=&quot;矩阵对象的属性&quot;&gt;&lt;a href=&quot;#矩阵对象的属性&quot; class=&quot;headerlink&quot; title=&quot;矩阵对象的属性&quot;&gt;&lt;/a&gt;矩阵对象的属性&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;matrix.T transpose：返回矩阵的转置矩阵&lt;/li&gt;
&lt;li&gt;matrix.H hermitian (conjugate) &lt;/li&gt;
&lt;li&gt;transpose：返回复数矩阵的共轭元素矩阵&lt;/li&gt;
&lt;li&gt;matrix.I inverse：返回矩阵的逆矩阵&lt;/li&gt;
&lt;li&gt;matrix.A base array：返回矩阵基于的数组&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;矩阵对象的方法&quot;&gt;&lt;a href=&quot;#矩阵对象的方法&quot; class=&quot;headerlink&quot; title=&quot;矩阵对象的方法&quot;&gt;&lt;/a&gt;矩阵对象的方法&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;all([axis, out]) :沿给定的轴判断矩阵所有元素是否为真(非0即为真)&lt;/li&gt;
&lt;li&gt;any([axis, out]) :沿给定轴的方向判断矩阵元素是否为真，只要一个元素为真则为真。&lt;/li&gt;
&lt;li&gt;argmax([axis, out]) :沿给定轴的方向返回最大元素的索引（最大元素的位置）.&lt;/li&gt;
&lt;li&gt;argmin([axis, out]): 沿给定轴的方向返回最小元素的索引（最小元素的位置）&lt;/li&gt;
&lt;li&gt;argsort([axis, kind, order]) :返回排序后的索引矩阵&lt;/li&gt;
&lt;li&gt;astype(dtype[, order, casting, subok, copy]):将该矩阵数据复制，且数据类型为指定的数据类型&lt;/li&gt;
&lt;li&gt;byteswap(inplace) Swap the bytes of the array elements&lt;/li&gt;
&lt;li&gt;choose(choices[, out, mode]) :根据给定的索引得到一个新的数据矩阵（索引从choices给定）&lt;/li&gt;
&lt;li&gt;clip(a_min, a_max[, out]) :返回新的矩阵，比给定元素大的元素为a_max，小的为a_min&lt;/li&gt;
&lt;li&gt;compress(condition[, axis, out]) :返回满足条件的矩阵&lt;/li&gt;
&lt;li&gt;conj() :返回复数的共轭复数&lt;/li&gt;
&lt;li&gt;conjugate() :返回所有复数的共轭复数元素&lt;/li&gt;
&lt;li&gt;copy([order]) :复制一个矩阵并赋给另外一个对象，b=a.copy()&lt;/li&gt;
&lt;li&gt;cumprod([axis, dtype, out]) :返回沿指定轴的元素累积矩阵&lt;/li&gt;
&lt;li&gt;cumsum([axis, dtype, out]) :返回沿指定轴的元素累积和矩阵&lt;/li&gt;
&lt;li&gt;diagonal([offset, axis1, axis2]) :返回矩阵中对角线的数据&lt;/li&gt;
&lt;li&gt;dot(b[, out]) :两个矩阵的点乘&lt;/li&gt;
&lt;li&gt;dump(file) :将矩阵存储为指定文件,可以通过pickle.loads()或者numpy.loads()如:a.dump(‘d:\a.txt’)&lt;/li&gt;
&lt;li&gt;dumps() :将矩阵的数据转存为字符串.&lt;/li&gt;
&lt;li&gt;fill(value) :将矩阵中的所有元素填充为指定的value&lt;/li&gt;
&lt;li&gt;flatten([order]) :将矩阵转化为一个一维的形式，但是还是matrix对象&lt;/li&gt;
&lt;li&gt;getA() :返回自己，但是作为ndarray返回&lt;/li&gt;
&lt;li&gt;getA1()：返回一个扁平（一维）的数组（ndarray）&lt;/li&gt;
&lt;li&gt;getH() :返回自身的共轭复数转置矩阵&lt;/li&gt;
&lt;li&gt;getI() :返回本身的逆矩阵&lt;/li&gt;
&lt;li&gt;getT() :返回本身的转置矩阵&lt;/li&gt;
&lt;li&gt;max([axis, out]) ：返回指定轴的最大值&lt;/li&gt;
&lt;li&gt;mean([axis, dtype, out]) :沿给定轴方向，返回其均值&lt;/li&gt;
&lt;li&gt;min([axis, out]) ：返回指定轴的最小值&lt;/li&gt;
&lt;li&gt;nonzero() :返回非零元素的索引矩阵&lt;/li&gt;
&lt;li&gt;prod([axis, dtype, out]) :返回指定轴方型上，矩阵元素的乘积.&lt;/li&gt;
&lt;li&gt;ptp([axis, out]) :返回指定轴方向的最大值减去最小值.&lt;/li&gt;
&lt;li&gt;put(indices, values[, mode]) :用给定的value替换矩阵本身给定索引（indices）位置的值&lt;/li&gt;
&lt;li&gt;ravel([order]) :返回一个数组，该数组是一维数组或平数组&lt;/li&gt;
&lt;li&gt;repeat(repeats[, axis]) :重复矩阵中的元素，可以沿指定轴方向重复矩阵元素，repeats为重复次数&lt;/li&gt;
&lt;li&gt;reshape(shape[, order]) :改变矩阵的大小,如：reshape([2,3])&lt;/li&gt;
&lt;li&gt;resize(new_shape[, refcheck]) :改变该数据的尺寸大小&lt;/li&gt;
&lt;li&gt;round([decimals, out]) :返回指定精度后的矩阵，指定的位数采用四舍五入，若为1，则保留一位小数&lt;/li&gt;
&lt;li&gt;searchsorted(v[, side, sorter]) :搜索V在矩阵中的索引位置&lt;/li&gt;
&lt;li&gt;sort([axis, kind, order]) :对矩阵进行排序或者按轴的方向进行排序&lt;/li&gt;
&lt;li&gt;squeeze([axis]) :移除长度为1的轴&lt;/li&gt;
&lt;li&gt;std([axis, dtype, out, ddof]) :沿指定轴的方向，返回元素的标准差.&lt;/li&gt;
&lt;li&gt;sum([axis, dtype, out]) ：沿指定轴的方向，返回其元素的总和&lt;/li&gt;
&lt;li&gt;swapaxes(axis1, axis2):交换两个轴方向上的数据.&lt;/li&gt;
&lt;li&gt;take(indices[, axis, out, mode]) :提取指定索引位置的数据,并以一维数组或者矩阵返回(主要取决axis)&lt;/li&gt;
&lt;li&gt;tofile(fid[, sep, format]) :将矩阵中的数据以二进制写入到文件&lt;/li&gt;
&lt;li&gt;tolist() :将矩阵转化为列表形式&lt;/li&gt;
&lt;li&gt;tostring([order]):将矩阵转化为python的字符串.&lt;/li&gt;
&lt;li&gt;trace([offset, axis1, axis2, dtype, out]):返回对角线元素之和&lt;/li&gt;
&lt;li&gt;transpose(*axes) :返回矩阵的转置矩阵，不改变原有矩阵&lt;/li&gt;
&lt;li&gt;var([axis, dtype, out, ddof]) ：沿指定轴方向，返回矩阵元素的方差&lt;/li&gt;
&lt;li&gt;view([dtype, type]) :生成一个相同数据，但是类型为指定新类型的矩阵。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近经常需要用到Python矩阵计算处理模块Numpy，有些方法不是很熟悉，这里手机记录一下，备查备忘。&lt;/p&gt;
&lt;h2 id=&quot;矩阵对象的属性&quot;&gt;&lt;a href=&quot;#矩阵对象的属性&quot; class=&quot;headerlink&quot; title=&quot;矩阵对象的属性&quot;&gt;&lt;/a&gt;矩阵对象的
    
    </summary>
    
      <category term="数据科学 | Data Science" scheme="http://whatbeg.com/categories/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6-Data-Science/"/>
    
    
      <category term="Python" scheme="http://whatbeg.com/tags/Python/"/>
    
      <category term="数据分析" scheme="http://whatbeg.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Latex/MathJax的一些语法</title>
    <link href="http://whatbeg.com/2016/04/25/latexsyntax.html"/>
    <id>http://whatbeg.com/2016/04/25/latexsyntax.html</id>
    <published>2016-04-25T04:53:28.000Z</published>
    <updated>2016-05-12T03:09:06.417Z</updated>
    
    <content type="html">&lt;p&gt;Latex的一些公式，列一下方便查阅。&lt;br&gt;图来自《一份不太简短的LATEX2介绍》&lt;/p&gt;
&lt;h2 id=&quot;数学模式重音符号-带帽符&quot;&gt;&lt;a href=&quot;#数学模式重音符号-带帽符&quot; class=&quot;headerlink&quot; title=&quot;数学模式重音符号(带帽符)&quot;&gt;&lt;/a&gt;数学模式重音符号(带帽符)&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex1.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;希腊字母&quot;&gt;&lt;a href=&quot;#希腊字母&quot; class=&quot;headerlink&quot; title=&quot;希腊字母&quot;&gt;&lt;/a&gt;希腊字母&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex2.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;二元关系&quot;&gt;&lt;a href=&quot;#二元关系&quot; class=&quot;headerlink&quot; title=&quot;二元关系&quot;&gt;&lt;/a&gt;二元关系&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex3.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;二元运算符&quot;&gt;&lt;a href=&quot;#二元运算符&quot; class=&quot;headerlink&quot; title=&quot;二元运算符&quot;&gt;&lt;/a&gt;二元运算符&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex4.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;大运算符&quot;&gt;&lt;a href=&quot;#大运算符&quot; class=&quot;headerlink&quot; title=&quot;大运算符&quot;&gt;&lt;/a&gt;大运算符&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex5.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;箭头&quot;&gt;&lt;a href=&quot;#箭头&quot; class=&quot;headerlink&quot; title=&quot;箭头&quot;&gt;&lt;/a&gt;箭头&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex6.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;定界符&quot;&gt;&lt;a href=&quot;#定界符&quot; class=&quot;headerlink&quot; title=&quot;定界符&quot;&gt;&lt;/a&gt;定界符&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex7.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;大定界符&quot;&gt;&lt;a href=&quot;#大定界符&quot; class=&quot;headerlink&quot; title=&quot;大定界符&quot;&gt;&lt;/a&gt;大定界符&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex8.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;其他符号&quot;&gt;&lt;a href=&quot;#其他符号&quot; class=&quot;headerlink&quot; title=&quot;其他符号&quot;&gt;&lt;/a&gt;其他符号&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex9.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;非数学符号&quot;&gt;&lt;a href=&quot;#非数学符号&quot; class=&quot;headerlink&quot; title=&quot;非数学符号&quot;&gt;&lt;/a&gt;非数学符号&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex10.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;AMS定界符&quot;&gt;&lt;a href=&quot;#AMS定界符&quot; class=&quot;headerlink&quot; title=&quot;AMS定界符&quot;&gt;&lt;/a&gt;AMS定界符&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex11.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;AMS希腊和希伯来字母&quot;&gt;&lt;a href=&quot;#AMS希腊和希伯来字母&quot; class=&quot;headerlink&quot; title=&quot;AMS希腊和希伯来字母&quot;&gt;&lt;/a&gt;AMS希腊和希伯来字母&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex12.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;AMS二元关系&quot;&gt;&lt;a href=&quot;#AMS二元关系&quot; class=&quot;headerlink&quot; title=&quot;AMS二元关系&quot;&gt;&lt;/a&gt;AMS二元关系&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex13.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;AMS箭头&quot;&gt;&lt;a href=&quot;#AMS箭头&quot; class=&quot;headerlink&quot; title=&quot;AMS箭头&quot;&gt;&lt;/a&gt;AMS箭头&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex14.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;AMS二元否定关系符和箭头&quot;&gt;&lt;a href=&quot;#AMS二元否定关系符和箭头&quot; class=&quot;headerlink&quot; title=&quot;AMS二元否定关系符和箭头&quot;&gt;&lt;/a&gt;AMS二元否定关系符和箭头&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex15.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;AMS二元运算符&quot;&gt;&lt;a href=&quot;#AMS二元运算符&quot; class=&quot;headerlink&quot; title=&quot;AMS二元运算符&quot;&gt;&lt;/a&gt;AMS二元运算符&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex16.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;AMS其他符号&quot;&gt;&lt;a href=&quot;#AMS其他符号&quot; class=&quot;headerlink&quot; title=&quot;AMS其他符号&quot;&gt;&lt;/a&gt;AMS其他符号&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex17.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;数学字母&quot;&gt;&lt;a href=&quot;#数学字母&quot; class=&quot;headerlink&quot; title=&quot;数学字母&quot;&gt;&lt;/a&gt;数学字母&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/latex18.png-sy&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Latex的一些公式，列一下方便查阅。&lt;br&gt;图来自《一份不太简短的LATEX2介绍》&lt;/p&gt;
&lt;h2 id=&quot;数学模式重音符号-带帽符&quot;&gt;&lt;a href=&quot;#数学模式重音符号-带帽符&quot; class=&quot;headerlink&quot; title=&quot;数学模式重音符号(带帽符)&quot;&gt;&lt;/
    
    </summary>
    
      <category term="计算机相关 | CS.Related" scheme="http://whatbeg.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3-CS-Related/"/>
    
    
      <category term="CS" scheme="http://whatbeg.com/tags/CS/"/>
    
      <category term="Latex" scheme="http://whatbeg.com/tags/Latex/"/>
    
  </entry>
  
  <entry>
    <title>如何实现并应用决策树算法？</title>
    <link href="http://whatbeg.com/2016/04/23/decisiontree.html"/>
    <id>http://whatbeg.com/2016/04/23/decisiontree.html</id>
    <published>2016-04-23T12:35:01.000Z</published>
    <updated>2016-05-12T03:16:30.061Z</updated>
    
    <content type="html">&lt;p&gt;本文对决策树算法进行简单的总结和梳理，并对著名的决策树算法ID3(Iterative Dichotomiser 迭代二分器)进行实现，实现采用Python语言，一句老梗，“人生苦短，我用Python”，Python确实能够省很多语言方面的事，从而可以让我们专注于问题和解决问题的逻辑。&lt;br&gt;根据不同的数据，我实现了三个版本的ID3算法，复杂度逐步提升：&lt;br&gt;1.纯标称值无缺失数据集&lt;br&gt;2.连续值和标称值混合且无缺失数据集&lt;br&gt;3.连续值和标称值混合，有缺失数据集&lt;br&gt;第一个算法参考了《机器学习实战》的大部分代码，第二、三个算法基于前面的实现进行模块的增加。&lt;/p&gt;
&lt;h2 id=&quot;决策树简介&quot;&gt;&lt;a href=&quot;#决策树简介&quot; class=&quot;headerlink&quot; title=&quot;决策树简介&quot;&gt;&lt;/a&gt;决策树简介&lt;/h2&gt;&lt;p&gt;决策树算法不用说大家应该都知道，是机器学习的一个著名算法，由澳大利亚著名计算机科学家Rose Quinlan发表。&lt;/p&gt;
&lt;p&gt;决策树是一种监督学习的分类算法，目的是学习出一颗决策树，该树中间节点是数据特征，叶子节点是类别，实际分类时根据树的结构，一步一步根据当前数据特征取值选择进入哪一颗子树，直到走到叶子节点，叶子节点的类别就是此决策树对此数据的学习结果。下图就是一颗简单的决策树：&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/dectree2.png&quot; alt=&quot;一颗简单的决策树&quot;&gt;&lt;br&gt;此决策树用来判断一个具有纹理，触感，密度的西瓜是否是“好瓜”。&lt;br&gt;当有这样一个西瓜，纹理清晰，密度为0.333，触感硬滑，那么要你判断是否是一个“好瓜”，这时如果通过决策树来判断，显然可以一直顺着纹理-&amp;gt;清晰-&amp;gt;密度&amp;lt;=0.382-&amp;gt;否，即此瓜不是“好瓜”，一次决策就这样完成了。正因为决策树决策很方便，并且准确率也较高，所以常常被用来做分类器，也是“机器学习十大算法”之一C4.5的基本思想。&lt;br&gt;学习出一颗决策树首要考虑一个问题，即 根据数据集构建当前树应该选择哪种属性作为树根，即划分标准？&lt;br&gt;考虑最好的情况，一开始选择某个特征，就把数据集划分成功，即在该特征上取某个值的全是一类。&lt;br&gt;考虑最坏的情况，不断选择特征，划分后的数据集总是杂乱无章，就二分类任务来说，总是有正类有负类，一直到特征全部用完了，划分的数据集合还是有正有负，这时只能用投票法，正类多就选正类作为叶子，否则选负类。&lt;br&gt;所以得出了一般结论： 随着划分的进行，我们希望选择一个特征，使得子节点包含的样本尽可能属于同一类别，即“纯度”越高越好。&lt;/p&gt;
&lt;p&gt;基于“纯度”的标准不同，有三种算法：&lt;br&gt;1.ID3算法(Iterative Dichotomiser 迭代二分器)，也是本文要实现的算法，基于信息增益即信息熵来度量纯度&lt;br&gt;2.C4.5算法(Classifier 4.5)，ID3 的后继算法，也是昆兰提出&lt;br&gt;3.CART算法(Classification And Regression Tree)，基于基尼指数度量纯度。&lt;/p&gt;
&lt;h2 id=&quot;ID3算法简介&quot;&gt;&lt;a href=&quot;#ID3算法简介&quot; class=&quot;headerlink&quot; title=&quot;ID3算法简介&quot;&gt;&lt;/a&gt;ID3算法简介&lt;/h2&gt;&lt;p&gt;信息熵是信息论中的一个重要概念，也叫“香农熵”，香农先生的事迹相比很多人都听过，一个人开创了一门理论，牛的不行。香农理论中一个很重要的特征就是”熵“，即”信息内容的不确定性“，香农在进行信息的定量计算的时候，明确地把信息量定义为随机不定性程度的减少。这就表明了他对信息的理解：信息是用来减少随机不定性的东西。或者表达为香农逆定义：信息是确定性的增加。这也印证了决策树以熵作为划分选择的度量标准的正确性，即我们想更快速地从数据中获得更多信息，我们就应该快速降低不确定性，即减少”熵“。&lt;/p&gt;
&lt;p&gt;信息熵定义为：&lt;br&gt;$$Ent(D) = -\sum_{k=1}^{|\mathcal{Y}|}p_k\log_2p_k$$&lt;br&gt;D表示数据集，类别总数为|Y|，pk表示D中第k类样本所占的比例。根据其定义，Ent的值越小，信息纯度越高。Ent的范围是[0,log|Y|]&lt;/p&gt;
&lt;p&gt;下面要选择某个属性进行划分，要依次考虑每个属性，假设当前考虑属性a，a的取值有|V|种，那么我们希望取a作为划分属性，划分到|V|个子节点后，所有子节点的信息熵之和即划分后的信息熵能够有很大的减小，减小的最多的那个属性就是我们选择的属性。&lt;/p&gt;
&lt;p&gt;划分后的信息熵定义为：&lt;br&gt;$$\sum_{v=1}^V{|D^v| \over |D|}Ent(D^v) $$&lt;/p&gt;
&lt;p&gt;所以用属性a对样本集D进行划分的信息增益就是原来的信息熵减去划分后的信息熵：&lt;br&gt;$$Gain(D,a) = Ent(D) - \sum_{v=1}^V{|D^v| \over |D|}Ent(D^v) $$&lt;/p&gt;
&lt;p&gt;ID3算法就是这样每次选择一个属性对样本集进行划分，知道两种情况使这个过程停止：&lt;br&gt;（1）某个子节点样本全部属于一类&lt;br&gt;（2）属性都用完了，这时候如果子节点样本还是不一致，那么只好少数服从多数了&lt;br&gt;算法流程如下：(图片来自网络)&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/ID3algorithm.png-SuoLve.Shuiyin&quot; alt=&quot;ID3算法&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;ID3算法实现（纯标称值）&quot;&gt;&lt;a href=&quot;#ID3算法实现（纯标称值）&quot; class=&quot;headerlink&quot; title=&quot;ID3算法实现（纯标称值）&quot;&gt;&lt;/a&gt;ID3算法实现（纯标称值）&lt;/h2&gt;&lt;p&gt;如果样本全部是标称值即离散值的话，会比较简单。&lt;br&gt;代码：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#决策树生成算法： treesID3.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; math &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; operator &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; itemgetter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createDataSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;            &lt;span class=&quot;comment&quot;&gt;#创建数据集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dataSet = [[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;yes&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;yes&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;no&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;no&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;no&#39;&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    featname = [&lt;span class=&quot;string&quot;&gt;&#39;no surfacing&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;flippers&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; dataSet,featname&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;filetoDataSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(filename)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fr = open(filename,&lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    all_lines = fr.readlines()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    featname = all_lines[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].strip().split(&lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(featname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dataSet = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; line &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; all_lines[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        line = line.strip()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lis = line.split(&lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dataSet.append(lis)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fr.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; dataSet,featname&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;calcEnt&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet)&lt;/span&gt;:&lt;/span&gt;           &lt;span class=&quot;comment&quot;&gt;#计算香农熵&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    numEntries = len(dataSet)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    labelCounts = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featVec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        label = featVec[&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; label &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; labelCounts.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            labelCounts[label] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        labelCounts[label] += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Ent = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; labelCounts.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p_i = float(labelCounts[key]/numEntries)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Ent -= p_i * log(p_i,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Ent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;splitDataSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet, axis, value)&lt;/span&gt;:&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;#划分数据集,找出第axis个属性为value的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    returnSet = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featVec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; featVec[axis] == value:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec = featVec[:axis]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec.extend(featVec[axis+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnSet.append(retVec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; returnSet&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;chooseBestFeat&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    numFeat = len(dataSet[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Entropy = calcEnt(dataSet)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DataSetlen = float(len(dataSet))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bestGain = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bestFeat = &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(numFeat):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        allvalue = [featVec[i] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featVec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        specvalue = set(allvalue)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nowEntropy = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; v &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; specvalue:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Dv = splitDataSet(dataSet,i,v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            p = len(Dv)/DataSetlen&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nowEntropy += p * calcEnt(Dv)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; Entropy - nowEntropy &amp;gt; bestGain:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            bestGain = Entropy - nowEntropy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            bestFeat = i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bestFeat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Vote&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(classList)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    classdic = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; vote &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; classList:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; vote &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; classdic.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            classdic[vote] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        classdic[vote] += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sortedclassDic = sorted(classdic.items(),key=itemgetter(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),reverse=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sortedclassDic[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createDecisionTree&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet,featnames)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    featname = featnames[:]              &lt;span class=&quot;comment&quot;&gt;################&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    classlist = [featvec[&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featvec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet]  &lt;span class=&quot;comment&quot;&gt;#此节点的分类情况&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; classlist.count(classlist[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]) == len(classlist):  &lt;span class=&quot;comment&quot;&gt;#全部属于一类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; classlist[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(dataSet[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]) == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:         &lt;span class=&quot;comment&quot;&gt;#分完了,没有属性了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Vote(classlist)       &lt;span class=&quot;comment&quot;&gt;#少数服从多数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 选择一个最优特征进行划分&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bestFeat = chooseBestFeat(dataSet)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bestFeatname = featname[bestFeat]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;del&lt;/span&gt;(featname[bestFeat])     &lt;span class=&quot;comment&quot;&gt;#防止下标不准&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DecisionTree = &amp;#123;bestFeatname:&amp;#123;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 创建分支,先找出所有属性值,即分支数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    allvalue = [vec[bestFeat] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; vec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    specvalue = sorted(list(set(allvalue)))  &lt;span class=&quot;comment&quot;&gt;#使有一定顺序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; v &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; specvalue:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        copyfeatname = featname[:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DecisionTree[bestFeatname][v] = createDecisionTree(splitDataSet(dataSet,bestFeat,v),copyfeatname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; DecisionTree&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    filename = &lt;span class=&quot;string&quot;&gt;&quot;D:\\MLinAction\\Data\\西瓜2.0.txt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DataSet,featname = filetoDataSet(filename)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Tree = createDecisionTree(DataSet,featname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Tree)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;解释一下几个函数：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;filetoDataSet(filename)  将文件中的数据整理成数据集&lt;br&gt;calcEnt(dataSet)     计算香农熵&lt;br&gt;splitDataSet(dataSet, axis, value)     划分数据集，选择出第axis个属性的取值为value的所有数据集，即D^v，并去掉第axis个属性，因为不需要了&lt;br&gt;chooseBestFeat(dataSet)      根据信息增益，选择一个最好的属性&lt;br&gt;Vote(classList)        如果属性用完，类别仍不一致，投票决定&lt;br&gt;createDecisionTree(dataSet,featnames)     递归创建决策树&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;用西瓜数据集2.0对算法进行测试，西瓜数据集见 &lt;a href=&quot;http://whatbeg.com/2016/04/22/xiguadataset.html&quot;&gt;西瓜数据集2.0&lt;/a&gt;，输出如下：&lt;br&gt;&lt;figure class=&quot;highlight scheme&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;symbol&quot;&gt;&#39;色泽&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;根蒂&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;敲声&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;纹理&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;脐部&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;触感&lt;/span&gt;&#39;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;纹理&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;清晰&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;根蒂&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;蜷缩&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;是&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;硬挺&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;否&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;稍蜷&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;色泽&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;青绿&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;是&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;乌黑&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;触感&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;硬滑&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;是&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;软粘&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;否&lt;/span&gt;&#39;&amp;#125;&amp;#125;&amp;#125;&amp;#125;&amp;#125;&amp;#125;, &lt;span class=&quot;symbol&quot;&gt;&#39;稍糊&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;触感&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;硬滑&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;否&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;软粘&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;是&lt;/span&gt;&#39;&amp;#125;&amp;#125;, &lt;span class=&quot;symbol&quot;&gt;&#39;模糊&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;否&lt;/span&gt;&#39;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/dectree1.png-SuoLve.Shuiyin&quot; alt=&quot;决策树算法在西瓜数据集2.0上的结果&quot;&gt;&lt;br&gt;由于数据太少，没有设置测试数据以验证其准确度，但是我后面会根据乳腺癌的例子进行准确度的测试的，下面进入下一部分：&lt;/p&gt;
&lt;h2 id=&quot;有连续值的情况&quot;&gt;&lt;a href=&quot;#有连续值的情况&quot; class=&quot;headerlink&quot; title=&quot;有连续值的情况&quot;&gt;&lt;/a&gt;有连续值的情况&lt;/h2&gt;&lt;p&gt;有连续值的情况如 &lt;a href=&quot;http://whatbeg.com/2016/04/22/xiguadataset.html&quot;&gt;西瓜数据集3.0&lt;/a&gt;&lt;br&gt;一个属性有很多种取值，我们肯定不能每个取值都做一个分支，这时候需要对连续属性进行离散化，有几种方法供选择，其中两种是：&lt;br&gt;1.对每一类别的数据集的连续值取平均值，再取各类的平均值的平均值作为划分点，将连续属性化为两类变成离散属性&lt;br&gt;2.C4.5采用的二分法，排序离散属性，取每两个的中点作为划分点的候选点，计算以每个划分点划分数据集的信息增益，取最大的那个划分点将连续属性化为两类变成离散属性，用该属性进行划分的信息增益就是刚刚计算的最大信息增益。公式如下：&lt;br&gt;$$Gain(D,a) = \max_{t \in T&lt;em&gt;a}Ent(D) - \sum&lt;/em&gt;{\lambda \in {+,-}}{|D_t^\lambda| \over |D|}Ent(D_t^\lambda) $$&lt;br&gt;这里采用第二种，并在学习前对连续属性进行离散化。增加处理的代码如下：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;splitDataSet_for_dec&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet, axis, value, small)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    returnSet = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featVec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (small &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; featVec[axis] &amp;lt;= value) &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; ((&lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; small) &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; featVec[axis] &amp;gt; value):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec = featVec[:axis]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec.extend(featVec[axis+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnSet.append(retVec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; returnSet&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DataSetPredo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(filename,decreteindex)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dataSet,featname = filetoDataSet(filename)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Entropy = calcEnt(dataSet)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DataSetlen = len(dataSet)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; index &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; decreteindex:     &lt;span class=&quot;comment&quot;&gt;#对每一个是连续值的属性下标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(DataSetlen):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dataSet[i][index] = float(dataSet[i][index])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        allvalue = [vec[index] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; vec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sortedallvalue = sorted(allvalue)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        T = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(allvalue)&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;):        &lt;span class=&quot;comment&quot;&gt;#划分点集合&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            T.append(float(sortedallvalue[i]+sortedallvalue[i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])/&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bestGain = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bestpt = &lt;span class=&quot;number&quot;&gt;-1.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; pt &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; T:          &lt;span class=&quot;comment&quot;&gt;#对每个划分点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nowent = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; small &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;):   &lt;span class=&quot;comment&quot;&gt;#化为正类负类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Dt = splitDataSet_for_dec(dataSet, index, pt, small)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                p = len(Dt) / float(DataSetlen)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                nowent += p * calcEnt(Dt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; Entropy - nowent &amp;gt; bestGain:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                bestGain = Entropy-nowent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                bestpt = pt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        featname[index] = str(featname[index]+&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;=&quot;&lt;/span&gt;+&lt;span class=&quot;string&quot;&gt;&quot;%.3f&quot;&lt;/span&gt;%bestpt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(DataSetlen):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dataSet[i][index] = &lt;span class=&quot;string&quot;&gt;&quot;是&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; dataSet[i][index] &amp;lt;= bestpt &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;否&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; dataSet,featname&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输出处理过后的属性以及对西瓜数据集3.0的输出&lt;br&gt;&lt;figure class=&quot;highlight scheme&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;symbol&quot;&gt;&#39;色泽&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;根蒂&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;敲声&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;纹理&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;脐部&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;触感&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;密度&amp;lt;=0.382&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;含糖率&amp;lt;=0.126&lt;/span&gt;&#39;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;纹理&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;模糊&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;否&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;稍糊&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;触感&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;硬滑&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;否&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;软粘&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;是&lt;/span&gt;&#39;&amp;#125;&amp;#125;, &lt;span class=&quot;symbol&quot;&gt;&#39;清晰&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;密度&amp;lt;=0.382&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &amp;#123;&lt;span class=&quot;symbol&quot;&gt;&#39;是&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;否&lt;/span&gt;&#39;, &lt;span class=&quot;symbol&quot;&gt;&#39;否&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;&#39;:&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&#39;是&lt;/span&gt;&#39;&amp;#125;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;主要是预处理函数DataSetPredo，对数据集提前离散化，然后再进行学习，学习代码类似。输出的决策树如下：&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/dectree2.png-SuoLve.Shuiyin&quot; alt=&quot;决策树算法在西瓜数据集3.0上的结果&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;有缺失值的情况&quot;&gt;&lt;a href=&quot;#有缺失值的情况&quot; class=&quot;headerlink&quot; title=&quot;有缺失值的情况&quot;&gt;&lt;/a&gt;有缺失值的情况&lt;/h2&gt;&lt;p&gt;数据有缺失值是常见的情况，我们不好直接抛弃这些数据，因为这样会损失大量数据，不划算，但是缺失值我们也无法判断它的取值。怎么办呢，办法还是有的。&lt;br&gt;考虑两个问题：&lt;br&gt;&lt;strong&gt;1.有缺失值时如何进行划分选择&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;2.已选择划分属性，有缺失值的样本划不划分，如何划分？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;基本思想是进行最优属性选择时，先只考虑无缺失值样本，然后再乘以相应比例，得到在整个样本集上的大致情况。连带考虑到第二个问题的话，考虑给每一个样本一个权重，此时每个样本不再总是被看成一个独立样本，这样有利于第二个问题的解决：即若样本在属性a上的值缺失，那么将其看成是所有值都取，只不过取每个值的权重不一样，每个值的权重参考该值在无缺失值样本中的比例，简单地说，比如在无缺失值样本集中，属性a取去两个值1和2，并且取1的权重和占整个权重和1/3，而取2的权重和占2/3，那么依据该属性对样本集进行划分时，遇到该属性上有缺失值的样本，那么我们认为该样本取值2的可能性更大，于是将该样本的权重乘以2/3归到取值为2的样本集中继续进行划分构造决策树，而乘1/3划到取值为1的样本集中继续构造。不知道我说清楚没有。&lt;/p&gt;
&lt;p&gt;公式如下：&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/dectreegongshi.png-SuoLve.Shuiyin&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;其中，D~表示数据集D在属性a上无缺失值的样本，根据它来判断a属性的优劣，rho(即‘lou’)表示属性a的无缺失值样本占所有样本的比例，p~_k表示无缺失值样本中第k类所占的比例，r~_v表示无缺失值样本在属性a上取值为v的样本所占的比例。&lt;br&gt;在划分样本时，如果有缺失值，则将样本划分到所有子节点，在属性a取值v的子节点上的权重为r~_v * 原来的权重。&lt;br&gt;更详细的解读参考《机器学习》P86-87。&lt;br&gt;根据权重法修改后的ID3算法实现如下：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;200&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#修改 treesID3.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; math &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; log&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; operator &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; itemgetter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;filetoDataSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(filename)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fr = open(filename,&lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    all_lines = fr.readlines()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    featname = all_lines[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].strip().split(&lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dataSet = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; line &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; all_lines[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        line = line.strip()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lis = line.split(&lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dataSet.append(lis)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fr.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; dataSet,featname&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;calcEnt&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet, weight)&lt;/span&gt;:&lt;/span&gt;           &lt;span class=&quot;comment&quot;&gt;#计算权重香农熵&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    labelCounts = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featVec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        label = featVec[&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; label &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; labelCounts.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            labelCounts[label] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        labelCounts[label] += weight[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Ent = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; labelCounts.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p_i = float(labelCounts[key]/sum(weight))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Ent -= p_i * log(p_i,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Ent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;splitDataSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet, weight, axis, value, countmissvalue)&lt;/span&gt;:&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;#划分数据集,找出第axis个属性为value的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    returnSet = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    returnweight = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featVec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; featVec[axis] == &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; countmissvalue):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; countmissvalue &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; featVec[axis] == &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec = featVec[:axis]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec.extend(featVec[axis+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnSet.append(retVec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; featVec[axis] == value:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec = featVec[:axis]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec.extend(featVec[axis+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnSet.append(retVec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnweight.append(weight[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; returnSet,returnweight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;splitDataSet_for_dec&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet, axis, value, small, countmissvalue)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    returnSet = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featVec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; featVec[axis] == &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; countmissvalue):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; countmissvalue &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; featVec[axis] == &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec = featVec[:axis]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec.extend(featVec[axis+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnSet.append(retVec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (small &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; featVec[axis] &amp;lt;= value) &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; ((&lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; small) &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; featVec[axis] &amp;gt; value):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec = featVec[:axis]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec.extend(featVec[axis+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnSet.append(retVec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; returnSet&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DataSetPredo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(filename,decreteindex)&lt;/span&gt;:&lt;/span&gt;     &lt;span class=&quot;comment&quot;&gt;#首先运行，权重不变为1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dataSet,featname = filetoDataSet(filename)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DataSetlen = len(dataSet)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Entropy = calcEnt(dataSet,[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(DataSetlen)])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; index &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; decreteindex:     &lt;span class=&quot;comment&quot;&gt;#对每一个是连续值的属性下标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        UnmissDatalen = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(DataSetlen):      &lt;span class=&quot;comment&quot;&gt;#字符串转浮点数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; dataSet[i][index] != &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                UnmissDatalen += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dataSet[i][index] = float(dataSet[i][index])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        allvalue = [vec[index] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; vec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; vec[index] != &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sortedallvalue = sorted(allvalue)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        T = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(allvalue)&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;):        &lt;span class=&quot;comment&quot;&gt;#划分点集合&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            T.append(float(sortedallvalue[i]+sortedallvalue[i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])/&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bestGain = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bestpt = &lt;span class=&quot;number&quot;&gt;-1.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; pt &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; T:          &lt;span class=&quot;comment&quot;&gt;#对每个划分点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nowent = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; small &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;):   &lt;span class=&quot;comment&quot;&gt;#化为正类(1)负类(0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Dt = splitDataSet_for_dec(dataSet, index, pt, small, &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                p = len(Dt) / float(UnmissDatalen)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                nowent += p * calcEnt(Dt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; Entropy - nowent &amp;gt; bestGain:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                bestGain = Entropy-nowent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                bestpt = pt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        featname[index] = str(featname[index]+&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;=&quot;&lt;/span&gt;+&lt;span class=&quot;string&quot;&gt;&quot;%.3f&quot;&lt;/span&gt;%bestpt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(DataSetlen):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; dataSet[i][index] != &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dataSet[i][index] = &lt;span class=&quot;string&quot;&gt;&quot;是&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; dataSet[i][index] &amp;lt;= bestpt &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;否&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; dataSet,featname&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getUnmissDataSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet, weight, axis)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    returnSet = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    returnweight = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tag = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featVec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; featVec[axis] == &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tag.append(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec = featVec[:axis]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec.extend(featVec[axis+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnSet.append(retVec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(weight)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; tag:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnweight.append(weight[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; returnSet,returnweight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;printlis&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(lis)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; li &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; lis:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(li)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;chooseBestFeat&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet,weight,featname)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    numFeat = len(dataSet[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DataSetWeight = sum(weight)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bestGain = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bestFeat = &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(numFeat):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        UnmissDataSet,Unmissweight = getUnmissDataSet(dataSet, weight, i)   &lt;span class=&quot;comment&quot;&gt;#无缺失值数据集及其权重&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Entropy = calcEnt(UnmissDataSet,Unmissweight)      &lt;span class=&quot;comment&quot;&gt;#Ent(D~)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        allvalue = [featVec[i] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featVec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; featVec[i] != &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        UnmissSumWeight = sum(Unmissweight)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lou = UnmissSumWeight / DataSetWeight        &lt;span class=&quot;comment&quot;&gt;#lou&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        specvalue = set(allvalue)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nowEntropy = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; v &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; specvalue:      &lt;span class=&quot;comment&quot;&gt;#该属性的几种取值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Dv,weightVec_v = splitDataSet(dataSet,Unmissweight,i,v,&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;)   &lt;span class=&quot;comment&quot;&gt;#返回 此属性为v的所有样本 以及 每个样本的权重&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            p = sum(weightVec_v) / UnmissSumWeight          &lt;span class=&quot;comment&quot;&gt;#r~_v = D~_v / D~&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nowEntropy += p * calcEnt(Dv,weightVec_v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; lou*(Entropy - nowEntropy) &amp;gt; bestGain:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            bestGain = Entropy - nowEntropy&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            bestFeat = i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bestFeat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Vote&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(classList,weight)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    classdic = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; vote &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; classList:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; vote &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; classdic.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            classdic[vote] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        classdic[vote] += weight[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sortedclassDic = sorted(classdic.items(),key=itemgetter(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),reverse=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sortedclassDic[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;splitDataSet_adjustWeight&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet,weight,axis,value,r_v)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    returnSet = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    returnweight = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featVec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; featVec[axis] == &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec = featVec[:axis]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec.extend(featVec[axis+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnSet.append(retVec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnweight.append(weight[i] * r_v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; featVec[axis] == value:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec = featVec[:axis]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            retVec.extend(featVec[axis+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnSet.append(retVec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            returnweight.append(weight[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; returnSet,returnweight&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createDecisionTree&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dataSet,weight,featnames)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    featname = featnames[:]              &lt;span class=&quot;comment&quot;&gt;################&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    classlist = [featvec[&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; featvec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet]  &lt;span class=&quot;comment&quot;&gt;#此节点的分类情况&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; classlist.count(classlist[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]) == len(classlist):  &lt;span class=&quot;comment&quot;&gt;#全部属于一类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; classlist[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(dataSet[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]) == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:         &lt;span class=&quot;comment&quot;&gt;#分完了,没有属性了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Vote(classlist,weight)       &lt;span class=&quot;comment&quot;&gt;#少数服从多数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 选择一个最优特征进行划分&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bestFeat = chooseBestFeat(dataSet,weight,featname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bestFeatname = featname[bestFeat]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;del&lt;/span&gt;(featname[bestFeat])     &lt;span class=&quot;comment&quot;&gt;#防止下标不准&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DecisionTree = &amp;#123;bestFeatname:&amp;#123;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 创建分支,先找出所有属性值,即分支数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    allvalue = [vec[bestFeat] &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; vec &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; vec[bestFeat] != &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    specvalue = sorted(list(set(allvalue)))  &lt;span class=&quot;comment&quot;&gt;#使有一定顺序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UnmissDataSet,Unmissweight = getUnmissDataSet(dataSet, weight, bestFeat)   &lt;span class=&quot;comment&quot;&gt;#无缺失值数据集及其权重&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UnmissSumWeight = sum(Unmissweight)      &lt;span class=&quot;comment&quot;&gt;# D~&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; v &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; specvalue:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        copyfeatname = featname[:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Dv,weightVec_v = splitDataSet(dataSet,Unmissweight,bestFeat,v,&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;)   &lt;span class=&quot;comment&quot;&gt;#返回 此属性为v的所有样本 以及 每个样本的权重&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        r_v = sum(weightVec_v) / UnmissSumWeight          &lt;span class=&quot;comment&quot;&gt;#r~_v = D~_v / D~&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sondataSet,sonweight = splitDataSet_adjustWeight(dataSet,weight,bestFeat,v,r_v)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DecisionTree[bestFeatname][v] = createDecisionTree(sondataSet,sonweight,copyfeatname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; DecisionTree&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    filename = &lt;span class=&quot;string&quot;&gt;&quot;D:\\MLinAction\\Data\\西瓜2.0alpha.txt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DataSet,featname = DataSetPredo(filename,[])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Tree = createDecisionTree(DataSet,[&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(DataSet))],featname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(Tree)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;有缺失值的情况如 &lt;a href=&quot;http://whatbeg.com/2016/04/22/xiguadataset.html&quot;&gt;西瓜数据集2.0alpha&lt;/a&gt;&lt;br&gt;实验结果：&lt;br&gt;&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;纹理&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;模糊&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;色泽&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;青绿&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;否&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;浅白&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;否&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;乌黑&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;是&#39;&lt;/span&gt;&amp;#125;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&#39;清晰&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;根蒂&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;蜷缩&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;是&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;硬挺&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;否&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;稍蜷&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;色泽&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;青绿&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;是&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;乌黑&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;触感&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;硬滑&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;是&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;软粘&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;否&#39;&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&amp;#125;&amp;#125;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&#39;稍糊&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;敲声&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;浊响&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;脐部&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;凹陷&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;否&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;稍凹&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;是&#39;&lt;/span&gt;&amp;#125;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&#39;清脆&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;否&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;沉闷&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;否&#39;&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/dectree3.png&quot; alt=&quot;决策树算法在西瓜数据集2.0$\alpha$上的结果&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;在乳腺癌数据集上的测试与表现&quot;&gt;&lt;a href=&quot;#在乳腺癌数据集上的测试与表现&quot; class=&quot;headerlink&quot; title=&quot;在乳腺癌数据集上的测试与表现&quot;&gt;&lt;/a&gt;在乳腺癌数据集上的测试与表现&lt;/h2&gt;&lt;p&gt;有了算法，我们当然想做一定的测试看一看算法的表现。这里我选择了威斯康辛女性乳腺癌的数据。&lt;/p&gt;
&lt;p&gt;数据总共有9列，每一列分别代表，以逗号分割&lt;br&gt;1 Sample code number （病人ID）&lt;br&gt;2 Clump Thickness 肿块厚度&lt;br&gt;3 Uniformity of Cell Size 细胞大小的均匀性&lt;br&gt;4 Uniformity of Cell Shape 细胞形状的均匀性&lt;br&gt;5 Marginal Adhesion 边缘粘&lt;br&gt;6 Single Epithelial Cell Size 单上皮细胞的大小&lt;br&gt;7 Bare Nuclei 裸核&lt;br&gt;8 Bland Chromatin 乏味染色体&lt;br&gt;9 Normal Nucleoli 正常核&lt;br&gt;10 Mitoses 有丝分裂&lt;br&gt;11 Class: 2 for benign, 4 formalignant（恶性或良性分类）&lt;br&gt;[from Toby]&lt;br&gt;总共700条左右的数据，选取最后80条作为测试集，前面作为训练集，进行学习。&lt;br&gt;使用分类器的代码如下：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; treesID3 &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; id3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; treePlot &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; tpl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; pickle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;classify&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Tree, featnames, X)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    classLabel = &lt;span class=&quot;string&quot;&gt;&quot;未知&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root = list(Tree.keys())[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    firstGen = Tree[root]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    featindex = featnames.index(root)  &lt;span class=&quot;comment&quot;&gt;#根节点的属性下标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; firstGen.keys():   &lt;span class=&quot;comment&quot;&gt;#根属性的取值,取哪个就走往哪颗子树&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; X[featindex] == key:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; type(firstGen[key]) == type(&amp;#123;&amp;#125;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                classLabel = classify(firstGen[key],featnames,X)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                classLabel = firstGen[key]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; classLabel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StoreTree&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Tree,filename)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fw = open(filename,&lt;span class=&quot;string&quot;&gt;&#39;wb&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pickle.dump(Tree,fw)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fw.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ReadTree&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(filename)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fr = open(filename,&lt;span class=&quot;string&quot;&gt;&#39;rb&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; pickle.load(fr)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    filename = &lt;span class=&quot;string&quot;&gt;&quot;D:\\MLinAction\\Data\\breastcancer.txt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dataSet,featnames = id3.DataSetPredo(filename,[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Tree = id3.createDecisionTree(dataSet[:&lt;span class=&quot;number&quot;&gt;620&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(dataSet))],featnames)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tpl.createPlot(Tree)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    storetree = &lt;span class=&quot;string&quot;&gt;&quot;D:\\MLinAction\\Data\\decTree.dect&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    StoreTree(Tree,storetree)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#Tree = ReadTree(storetree)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cnt = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; lis &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; dataSet[&lt;span class=&quot;number&quot;&gt;620&lt;/span&gt;:]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        judge = classify(Tree,featnames,lis[:&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shouldbe = lis[&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; judge == shouldbe:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            cnt += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&quot;Test %d was classified %s, it&#39;s class is %s %s&quot;&lt;/span&gt; %(i,judge,shouldbe,&lt;span class=&quot;string&quot;&gt;&quot;=====&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; judge==shouldbe &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&quot;The Tree&#39;s Accuracy is %.3f&quot;&lt;/span&gt; % (cnt / float(i)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;结果（点击右键看大图）&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/dectree4.png&quot; alt=&quot;在乳腺癌数据上构建决策树&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xsl28.com2.z0.glb.clouddn.com/canceroutput.png&quot; alt=&quot;测试结果&quot;&gt;&lt;br&gt;正确率约为96%左右，算是不差的分类器了。&lt;br&gt;我的乳腺癌数据见：&lt;a href=&quot;http://7xt9qk.com2.z0.glb.clouddn.com/breastcancer.txt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;乳腺癌数据&lt;/a&gt;&lt;br&gt;至此，决策树算法ID3的实现完毕，下面考虑基于基尼指数和信息增益率进行划分选择，以及考虑实现剪枝过程，因为我们可以看到上面训练出的决策树还存在着很多冗余分支，是因为实现过程中，由于数据量太大，每个分支都不完全纯净，所以会创建往下的分支，但是分支投票的结果又是一致的，而且数据量再大，特征数再多的话，决策树会非常大非常复杂，所以剪枝一般是必做的一步。剪枝分为先剪枝和后剪枝，如果细说的话可以写很多了。&lt;br&gt;利用matplotlib画决策树的代码见&lt;a href=&quot;http://whatbeg.com/2016/04/23/matplotlib-desiciontree.html&quot;&gt;利用matplotlib画决策树&lt;/a&gt;&lt;br&gt;此文亦可见：&lt;a href=&quot;http://www.cnblogs.com/whatbeg/p/5424890.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Here&lt;/a&gt;&lt;br&gt;MathJax的一些使用方法见&lt;a href=&quot;http://iori.sinaapp.com/17.html/comment-page-1?replytocom=2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;1&lt;/a&gt;&lt;a href=&quot;http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2&lt;/a&gt;&lt;a href=&quot;http://www.ibiblio.org/koine/greek/lessons/alphabet.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;3&lt;/a&gt;&lt;br&gt;参考资料：《机器学习》《机器学习实战》通过本次实战也发现了这两本书中的一些错误之处。&lt;br&gt;lz初学机器学习不久，如有错漏之处请多包涵指出或者各位有什么想法或意见欢迎评论去告诉我:-)&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文对决策树算法进行简单的总结和梳理，并对著名的决策树算法ID3(Iterative Dichotomiser 迭代二分器)进行实现，实现采用Python语言，一句老梗，“人生苦短，我用Python”，Python确实能够省很多语言方面的事，从而可以让我们专注于问题和解决问
    
    </summary>
    
      <category term="机器学习 | Mac.Learning" scheme="http://whatbeg.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-Mac-Learning/"/>
    
    
      <category term="机器学习" scheme="http://whatbeg.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Python" scheme="http://whatbeg.com/tags/Python/"/>
    
  </entry>
  
</feed>
