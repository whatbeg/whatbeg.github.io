<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Whatbeg&#39;s blog</title>
  <subtitle>当你的才华撑不起你的野心时，就应该静下心来好好学习。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://whatbeg.com/"/>
  <updated>2019-04-16T13:10:36.433Z</updated>
  <id>http://whatbeg.com/</id>
  
  <author>
    <name>whatbeg</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hadoop必知必会（HDFS+MapReduce部分）</title>
    <link href="http://whatbeg.com/2019/04/16/hadoopmustknow.html"/>
    <id>http://whatbeg.com/2019/04/16/hadoopmustknow.html</id>
    <published>2019-04-16T13:08:37.000Z</published>
    <updated>2019-04-16T13:10:36.433Z</updated>
    
    <content type="html">&lt;p&gt;Hadoop是一个分布式存储和并行计算综合的系统。分布式存储由HDFS,HBase,Hive等实现，并行计算由MapReduce计算框架实现。&lt;/p&gt;
&lt;p&gt;也就是说，Hadoop系统主要分为分布式存储和并行计算部分。集群中一般有一个主控节点，和若干个从节点。分布式存储方面，主控节点维护一个NameNode，存储文件元数据信息，从节点各维护一个DataNode，存储具体的数据。并行计算方面，主控节点维护一个JobTracker守护进程，负责管理和调度任务，从节点各维护一个TaskTracker，负责拉取任务和执行具体的任务。并行计算方面目前广泛采用YARN来管理任务调度，在YARN中，JobTracker的职能由ResourceManager承担，TaskTracker的职能由NodeManager承担。&lt;/p&gt;
&lt;p&gt;具体的，YARN中还有ApplicationMaster和Container等概念。&lt;/p&gt;
&lt;h3 id=&quot;MapReduce&quot;&gt;&lt;a href=&quot;#MapReduce&quot; class=&quot;headerlink&quot; title=&quot;MapReduce&quot;&gt;&lt;/a&gt;MapReduce&lt;/h3&gt;&lt;p&gt;MapReduce是Hadoop的并行计算部分。MapReduce是一种并行计算的框架和编程模式，提供任务调度，数据和任务互定位，系统优化和容错，提供一套大数据编程接口。&lt;/p&gt;
&lt;p&gt;主要参考了Lisp的map/reduce原语设计思想，提供了两个主要的编程接口：Map和Reduce。Map指的是针对不同数据进行同一种操作。Reduce主要是对Map的中间结果进行某种进一步的整理和输出。&lt;/p&gt;
&lt;p&gt;MapReduce的数据表示一般为key-value，Map，Reduce函数都是对key-value对来操作。&lt;/p&gt;
&lt;p&gt;Map的功能逻辑主要是对输入key-value进行一些处理，产生新的key-value对。&lt;br&gt;每个map对分别对划分的部分数据进行处理，多个map并行处理。&lt;br&gt;Reduce的功能逻辑主要是对map输出的每组(key, values)进行整理和计算，最后产生新的key-value对。&lt;/p&gt;
&lt;p&gt;为了解决两个问题，MapReduce框架还提供了另外两个类来增强MapReduce的能力。&lt;/p&gt;
&lt;p&gt;问题1：多个重复的key发到网络上进行shuffle，带来许多不必要的传输。&lt;br&gt;解决方案：Combiner会在本地先进行相同key的合并，保证最后不会有重复的key。&lt;/p&gt;
&lt;p&gt;问题2：如果不进行恰当的分区，可能会出现同一个key被划分到不同的reduce节点，造成数据的相关性，从而无法产生正确的统计。&lt;br&gt;解决方案：Partitioner会对中间结果key-value进行恰当的分区处理，使得reduce节点分到的数据一定互不相关。&lt;/p&gt;
&lt;p&gt;Combiner作用在Map完成计算之后，输出结果之前。&lt;br&gt;Partitioner作用在Map输出结果之后，发送到Reduce节点之前。&lt;/p&gt;
&lt;p&gt;一般来说，添加了Combiner和Partitioner的MapReduce模型才是完整的。&lt;br&gt;完整的MapReduce计算框图见《深入理解大数据》P96。&lt;/p&gt;
&lt;p&gt;MapReduce实现计算向数据迁移的方式：&lt;br&gt;优先调度那些输入数据在本地节点的Map任务到本地节点。&lt;br&gt;具体的，JobScheduler维护了许多Java Map数据结构，存储任务和任务输入数据所在节点。&lt;br&gt;如果数据A存在于node1,node2,node3上，三个副本，A又是任务T的输入，那么node1,node2,node3这三个节点的可分配任务集中都会包含A。&lt;/p&gt;
&lt;p&gt;MapReduce有三种调度方法：&lt;/p&gt;
&lt;p&gt;1）FIFO先进先出调度。&lt;br&gt;2）公平调度，公平调度又实现了两级延迟调度，即如果不能调度到本地节点，则进行一段时间的等待，如果还没有则准备调度到rack机器上，如果rack机器也不闲，那么又稍微等一下，如果实在是大家都没空，只有调度到本机架外的任意机器上了。&lt;br&gt;3）计算能力调度，考虑内存等资源能否满足的调度方式。&lt;/p&gt;
&lt;p&gt;MapReduce主要组件和编程接口&lt;/p&gt;
&lt;p&gt;主要组件有InputFormat，描述了MapReduce作业的输入格式。&lt;br&gt;有三个任务：&lt;br&gt;1）验证输入形式和格式&lt;br&gt;2）将输入数据分割成若干逻辑意义上的InputSplit，每个InputSplit都是一个Mapper的输入&lt;br&gt;3）提供RecordReader，将Mapper的输入（InputSplit）处理转化为若干输入记录（key-value对）&lt;/p&gt;
&lt;p&gt;InputFormat确定了，那么InputSplit和RecordReader的类型也都确定了。&lt;/p&gt;
&lt;p&gt;事实上作业的Mapper数量是由InputSplit数量决定的。&lt;/p&gt;
&lt;p&gt;map函数中有一个context，表示的是环境对象参数，供程序访问Hadoop的环境对象。&lt;/p&gt;
&lt;p&gt;Mapper输出前，系统会默认提供一个Combiner对输出结果进行合并，以免造成不必要的网络传输。当然也可以自己定义。但是要注意，Combiner不能改变Mapper输出的键值对的数据类型，否则用于不用Combiner的结果不再一致。有时可以直接拿Reducer当Combiner用。&lt;br&gt;Mapper输出后，系统也会默认提供一个Partitioner对输出结果进行分组，确保同一key的数据分到同一个Reduce节点。&lt;br&gt;实际执行时，Combiner实在Map节点上执行的，而Partitioner和Sort实在Reduce节点上执行的。&lt;br&gt;Sort是一个容易被忽略的过程，在Mapper产生的中间结果发送到Reducer之前，系统会对中间结果（表现为本地磁盘的一个或多个文件）每个文件进行快速排序，然后对这些文件进行归并排序，合并成一个大文件。&lt;/p&gt;
&lt;h3 id=&quot;HDFS&quot;&gt;&lt;a href=&quot;#HDFS&quot; class=&quot;headerlink&quot; title=&quot;HDFS&quot;&gt;&lt;/a&gt;HDFS&lt;/h3&gt;&lt;p&gt;HDFS启动，NameNode进入安全模式，检查DataNode上的数据块，如果安全的数据块比例达到要求，则退出安全模式，正式启动了HDFS。&lt;/p&gt;
&lt;p&gt;NameNode容错通过SecondaryNameNode的备份来实现。主要通过文件镜像FsImage和编辑日志EditLog来实现检查点Checkpoint机制。&lt;br&gt;fsImage和edits.log会周期性的进行合并，由SecondaryNameNode来完成，为NameNode减轻压力。&lt;br&gt;过程如下：&lt;br&gt;&lt;figure class=&quot;highlight vbnet&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;secondary namenode请求主Namenode停止使用edits文件，暂时将新的写操作记录到一个新文件中，如edits.&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;secondary namenode节点从主Namenode节点获取fsimage和edits文件（采用HTTP &lt;span class=&quot;keyword&quot;&gt;GET&lt;/span&gt;） &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;secondary namenode将fsimage文件载入到内存，逐一执行edits文件中的操作，创建新的fsimage文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;secondary namenode将新的fsimage文件发送回主Namenode（使用HTTP POST） &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;主Namenode节点将从secondary namenode节点接收的fsimage文件替换旧的fsimage文件，用步骤&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;产生的edits.&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;文件替换旧的edits文件（即改名）。同时更新fstime文件来记录检查点执行的时间&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;FQA&quot;&gt;&lt;a href=&quot;#FQA&quot; class=&quot;headerlink&quot; title=&quot;FQA&quot;&gt;&lt;/a&gt;FQA&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hadoop的各角色的职能？&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;集群观点上的角色？还是整个Hadoop系统上各个组件观点上的角色？&lt;br&gt;集群观点上，JobTracker, TaskTracker, NameNode, DataNode等的职能如上&lt;a href=&quot;#Hadoop&quot;&gt;Hadoop&lt;/a&gt;节所见。&lt;br&gt;系统观点上，HBase,Hive,YARN,MapReduce,HDFS等各司职要也已简要说明。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hadoop的Checkpoint的作用？&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;保证容错，保证NameNode挂掉后能够从比较近的检查点恢复。&lt;br&gt;具体容错过程见上&lt;a href=&quot;#Hadoop&quot;&gt;Hadoop&lt;/a&gt;节。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hadoop数据块为什么要设置64MB或者更大？&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;减少寻址开销，因为每次寻址都要经过NameNode -&amp;gt; DataNode，然后交换数据。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hadoop的高可靠性如何保证？&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hadoop主要包含两个部分，HDFS和MapReduce。&lt;br&gt;HDFS方面，又包含两种节点，NameNode和DataNode。&lt;br&gt;为了保证NameNode的可靠性，HDFS采取了SecondaryNameNode来备份元数据，并周期性的设置&lt;strong&gt;检查点&lt;/strong&gt;的方式。&lt;br&gt;为了保证DataNode挂掉，数据访问的可靠性，HDFS采取了&lt;strong&gt;多副本&lt;/strong&gt;数据存储，保证单节点挂掉不影响数据的获取。&lt;br&gt;整体方面，采取了&lt;strong&gt;心跳机制&lt;/strong&gt;来保证互相通信和失效节点及时检测，并实现了&lt;strong&gt;副本重新创建&lt;/strong&gt;机制。&lt;br&gt;文件访问采取&lt;strong&gt;租约&lt;/strong&gt;机制。&lt;br&gt;数据一致性采取&lt;strong&gt;校验和&lt;/strong&gt;机制。&lt;br&gt;以及采取了&lt;strong&gt;版本回滚&lt;/strong&gt;策略。&lt;/p&gt;
&lt;p&gt;MapReduce方面，TaskTracker会周期性的向JobTracker发送&lt;strong&gt;心跳&lt;/strong&gt;信息，JobTracker能够及时检测TaskTracker的失效。&lt;br&gt;JobTracker的可靠性问题可以依靠&lt;strong&gt;Zookeeper&lt;/strong&gt;来优化。&lt;br&gt;采用YARN能够更好地保证MapReduce框架的可靠性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;MapReduce中的Text类型和LongWritable类型能不能用String 或者用long类型代替？&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不能，InputFormat一旦确定，其Mapper的输入格式也就确定了，不能改为其他类型。Text和String虽然很像，但是Text是针对于UTF-8的writable类型，String采用的是Java Char，二者并不一致。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;MapReduce常用的接口？&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;InputFormat, OutputFormat, RecordReader, RecordWriter, Mapper, Reducer, map, reduce, Combiner, Sorter, Partitioner等。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;MapReduce的工作流程？&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;InputFormat将输入数据读入，验证输入数据的形式和格式，将数据分割为InputSplit，用RecordReader将InputSplit转化为一条条的记录（Key-value对）。&lt;br&gt;Mapper以各自的InputSplit作为输入，map函数对InputSplit中的记录（key-value）逐个处理，生成新的key-value对，然后由Combiner将这些key-value对进行整理，将相同key的values合并，变成一个key-value，然后输出中间结果到磁盘，中间结果经过Partitioner的分组，被发送到合适的Reduce节点上，传入Reducer之前还会自动将所有key-value按照key值排序，然后结果进入Reducer，reduce函数对(key, values)进行计算以后，经过OutputFormat对象指定输出的格式，将数据写回HDFS中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;MapReduce优化方式？&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对Reduce节点个数进行优化。&lt;br&gt;将负载重的工作尽量使用多个Reduce节点来做，适当分割阶段，但是阶段不要分割太多，否则有多次磁盘开销，权衡下尽量减少不必要的阶段拆分。&lt;br&gt;尽量压缩数据结构，能用IntWritable就不用LongWritable。&lt;br&gt;适当使用变长IntWritable（VIntWritable）和变长LongWritable（VLongWritable），变长xxWritable可以根据实际数值决定存储的位数，在数字分布不均匀的情况下推荐用变长的Writable。&lt;/p&gt;
&lt;p&gt;总的来说就是三点：&lt;br&gt;1）Reduce节点个数&lt;br&gt;2）阶段&lt;br&gt;3）数据结构&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;什么样的情况下不能用MapReduce？&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1）无法表示成key-value的数据，无法将操作分解为map,reduce两个操作的&lt;br&gt;2）不是操作相同，处理数据不同，而是数据间有相关的应用&lt;br&gt;3）多次迭代的任务不适合用MapReduce&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HDFS的架构？&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;包含一个主控节点NameNode和一组DataNode从节点。&lt;br&gt;NameNode管理整个文件系统的元数据和命名空间，并负责相应外部访问请求。&lt;br&gt;DataNode负责具体数据块的存储，负责具体的数据读写请求，创建删除数据块等。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HDFS优化？&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1）尽可能使用二进制的Writable类型，减小存储空间&lt;br&gt;2）副本数&lt;br&gt;3）块大小&lt;br&gt;等等【可补充】&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Hadoop是一个分布式存储和并行计算综合的系统。分布式存储由HDFS,HBase,Hive等实现，并行计算由MapReduce计算框架实现。&lt;/p&gt;
&lt;p&gt;也就是说，Hadoop系统主要分为分布式存储和并行计算部分。集群中一般有一个主控节点，和若干个从节点。分布式存储方面
    
    </summary>
    
      <category term="大数据 | Big Data" scheme="http://whatbeg.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE-Big-Data/"/>
    
    
      <category term="大数据" scheme="http://whatbeg.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="Hadoop" scheme="http://whatbeg.com/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Ray源码解析之调度部分</title>
    <link href="http://whatbeg.com/2019/04/16/raysource-schedule.html"/>
    <id>http://whatbeg.com/2019/04/16/raysource-schedule.html</id>
    <published>2019-04-16T13:00:07.000Z</published>
    <updated>2019-04-16T13:12:35.333Z</updated>
    
    <content type="html">&lt;p&gt;Ray Version 0.4.0&lt;/p&gt;
&lt;p&gt;调度部分包括六个文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;调度策略：头文件&lt;code&gt;scheduling_policy.h&lt;/code&gt;（定义SchedulingPolicy）和cpp文件&lt;code&gt;scheduling_policy.cc&lt;/code&gt;（为SchedulingPolicy实现调度策略）。&lt;/li&gt;
&lt;li&gt;调度队列：头文件&lt;code&gt;scheduling_queue.h&lt;/code&gt;（）和cpp文件&lt;code&gt;scheduling_queue.cc&lt;/code&gt;（）。&lt;/li&gt;
&lt;li&gt;调度资源：头文件&lt;code&gt;scheduling_resources.h&lt;/code&gt;（）和cpp文件&lt;code&gt;scheduling_resources.cc&lt;/code&gt;（）。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;src/ray/raylet/scheduling_policy.h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; ray &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/// \brief Implements a scheduling policy for the node manager.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; SchedulingPolicy &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;/// \param scheduling_queue: reference to a scheduler queues object for access to&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;///        tasks.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      SchedulingPolicy(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; SchedulingQueue &amp;amp;scheduling_queue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;/// Perform a scheduling operation, given a set of cluster resources and&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;/// producing a mapping of tasks to node managers.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;///&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;///  \param cluster_resources: a set of cluster resources representing&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;///         configured and current resource capacity on each node.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;/// \return Scheduling decision, mapping tasks to node managers for placement.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;unordered_map&lt;/span&gt;&amp;lt;TaskID, ClientID, UniqueIDHasher&amp;gt; Schedule(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;unordered_map&lt;/span&gt;&amp;lt;ClientID, SchedulingResources, UniqueIDHasher&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;amp;cluster_resources);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; ~SchedulingPolicy();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;/// An immutable reference to the scheduling task queues.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; SchedulingQueue &amp;amp;scheduling_queue_;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;调度策略的头文件，描述了SchedulingPolicy类的结构，包括构造函数，析构函数，Schedule函数（关键调度决策）。&lt;br&gt;构造函数传入需要调度的任务队列，Schedule函数接受集群资源的一个&lt;code&gt;unordered_map&lt;/code&gt;作为输入，输出为调度决策，也是一个&lt;code&gt;unordered_map&lt;/code&gt;。&lt;code&gt;unordered_map&lt;/code&gt;是C++ 11的新特性，其内部元素是无序的。&lt;br&gt;Schedule接受的输入map是以ClientID即本节点id为key，SchedulingResources调度资源为value，即一个&lt;code&gt;节点-&amp;gt;资源&lt;/code&gt;的映射。&lt;br&gt;Schedule输出map则是以TaskID为键，ClientID为值，即表示TaskID表示的Task调度到ClientID代表的节点上。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;scheduling_policy.cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;----------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; ray &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;unordered_map&lt;/span&gt;&amp;lt;TaskID, ClientID, UniqueIDHasher&amp;gt; SchedulingPolicy::Schedule(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;unordered_map&lt;/span&gt;&amp;lt;ClientID, SchedulingResources, UniqueIDHasher&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;cluster_resources) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; ClientID local_node_id = ClientID::nil();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;unordered_map&lt;/span&gt;&amp;lt;TaskID, ClientID, UniqueIDHasher&amp;gt; decision;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// TODO(atumanov): consider all cluster resources.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      SchedulingResources resource_supply = cluster_resources.at(local_node_id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; &amp;amp;resource_supply_set = resource_supply.GetAvailableResources();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// Iterate over running tasks, get their resource demand and try to schedule.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; &amp;amp;t : scheduling_queue_.GetReadyTasks()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Get task&#39;s resource demand&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; &amp;amp;resource_demand = t.GetTaskSpecification().GetRequiredResources();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; task_feasible = resource_demand.IsSubset(resource_supply_set);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (task_feasible) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; TaskID &amp;amp;task_id = t.GetTaskSpecification().TaskId();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          decision[task_id] = local_node_id;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; decision;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为简洁起见，这里之贴出了Schedule函数的实现。&lt;br&gt;从上述代码可以看到，ray的调度包括这么几个过程：&lt;br&gt;1）得到本地节点id&lt;br&gt;2）得到本地节点可提供的资源&lt;br&gt;3）对于每个准备好的任务，判断本地资源是否能满足该任务(task_feasible)，能满足则调度到本地节点。&lt;/p&gt;
&lt;p&gt;【问】那么不能满足的任务呢？这些任务没有对应的&lt;code&gt;local_node_id&lt;/code&gt;，在decision中也就没有key，这部分任务该怎么办，有待后面分析。&lt;/p&gt;
&lt;p&gt;【问】还有一个问题就是，程序中本地节点能满足资源要求就调度到本地节点，调度后并不会减少&lt;code&gt;resource_supply&lt;/code&gt;即资源的供给，那么如果本地节点能满足所有任务的要求，岂不是所有任务都调度到此节点？&lt;/p&gt;
&lt;p&gt;这里&lt;code&gt;resource_demand.IsSubset(resource_supply_set)&lt;/code&gt;中的&lt;code&gt;IsSubset&lt;/code&gt;表示资源需求是否是资源供给集的子集，如果是，表示满足条件。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;scheduling_queue.h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; ray &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; SchedulingQueue &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  SchedulingQueue() &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; ~SchedulingQueue() &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;list&lt;/span&gt;&amp;lt;Task&amp;gt; &amp;amp;GetWaitingTasks() &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;list&lt;/span&gt;&amp;lt;Task&amp;gt; &amp;amp;GetReadyTasks() &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;list&lt;/span&gt;&amp;lt;Task&amp;gt; &amp;amp;GetReadyMethods() &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;list&lt;/span&gt;&amp;lt;Task&amp;gt; &amp;amp;GetScheduledTasks() &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;list&lt;/span&gt;&amp;lt;Task&amp;gt; &amp;amp;GetRunningTasks() &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;Task&amp;gt; RemoveTasks(&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;unordered_set&lt;/span&gt;&amp;lt;TaskID, UniqueIDHasher&amp;gt; tasks);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;QueueWaitingTasks&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;Task&amp;gt; &amp;amp;tasks)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;QueueReadyTasks&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;Task&amp;gt; &amp;amp;tasks)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;QueueScheduledTasks&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;Task&amp;gt; &amp;amp;tasks)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;QueueRunningTasks&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;Task&amp;gt; &amp;amp;tasks)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// Register an actor.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;///&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// \param actor_id The ID of the actor to register.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// \param actor_information Information about the actor.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RegisterActor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ActorID actor_id, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ActorInformation &amp;amp;actor_information)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;list&lt;/span&gt;&amp;lt;Task&amp;gt; waiting_tasks_;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;list&lt;/span&gt;&amp;lt;Task&amp;gt; ready_tasks_;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;list&lt;/span&gt;&amp;lt;Task&amp;gt; scheduled_tasks_;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;list&lt;/span&gt;&amp;lt;Task&amp;gt; running_tasks_;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// The registry of known actors.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;unordered_map&lt;/span&gt;&amp;lt;ActorID, ActorInformation, UniqueIDHasher&amp;gt; actor_registry_;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;span class=&quot;comment&quot;&gt;// namespace ray&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;调度队列定义头文件，封装了调度队列，每个队列包含着各自类型的任务。&lt;/p&gt;
&lt;p&gt;(1) waiting: for object dependencies to become available,&lt;br&gt;(2) ready: object dependencies are available and the task is ready to be scheduled&lt;br&gt;(3) scheduled: the task has been scheduled but is waiting for a worker&lt;br&gt;(4) running: the task has been scheduled and is running on a worker.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;scheduling_queue.cc&lt;/code&gt;文件中则实现了这些队列的getter方法，以及进队列方法，移除方法。&lt;br&gt;比如说移除方法：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Helper function to remove tasks in the given set of task_ids from a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// queue, and append them to the given vector removed_tasks.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;removeTasksFromQueue&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;list&lt;/span&gt;&amp;lt;Task&amp;gt; &amp;amp;&lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;unordered_set&lt;/span&gt;&amp;lt;TaskID, UniqueIDHasher&amp;gt; &amp;amp;task_ids,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;Task&amp;gt; &amp;amp;removed_tasks)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; it = &lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;.begin(); it != &lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;.end();) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; task_id = task_ids.find(it-&amp;gt;GetTaskSpecification().TaskId());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (task_id != task_ids.end()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      task_ids.erase(task_id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      removed_tasks.push_back(&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::move(*it));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      it = &lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;.erase(it);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      it++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从queue中移除task_ids中包含的所有taskID代表的task。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;scheduling_resources.h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; ray &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/// Resource availability status reports whether the resource requirement is&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/// (1) infeasible, (2) feasible but currently unavailable, or (3) available.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  kInfeasible,            &lt;span class=&quot;comment&quot;&gt;///&amp;lt; Cannot ever satisfy resource requirements.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  kResourcesUnavailable,  &lt;span class=&quot;comment&quot;&gt;///&amp;lt; Feasible, but not currently available.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  kFeasible               &lt;span class=&quot;comment&quot;&gt;///&amp;lt; Feasible and currently available.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; ResourceAvailabilityStatus;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; ResourceSet &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ResourceSet();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ResourceSet(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;unordered_map&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;&amp;gt; &amp;amp;resource_map);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ~ResourceSet();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;==(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ResourceSet &amp;amp;rhs) &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;IsEqual&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ResourceSet &amp;amp;other)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;IsSubset&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ResourceSet &amp;amp;other)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;IsSuperset&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ResourceSet &amp;amp;other)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AddResource&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; &amp;amp;resource_name, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; capacity)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RemoveResource&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; &amp;amp;resource_name)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AddResources&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ResourceSet &amp;amp;other)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SubtractResources&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ResourceSet &amp;amp;other)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 返回指定资源的容量值（赋给value指向的值），如果资源有大于0的数量，且value不为空指针，则返回true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GetResource&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; &amp;amp;resource_name, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; *value)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 资源容量map&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;unordered_map&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;&amp;gt; resource_capacity_;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/// \class SchedulingResources&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/// SchedulingResources 封装资源的状态和资源的计数。资源包括配置资源束容量和GPU分配图。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; SchedulingResources &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  SchedulingResources();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  SchedulingResources(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ResourceSet &amp;amp;total);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ~SchedulingResources();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 检查一个资源集是否能被满足，有几种状态，(1) infeasible, (2) feasible but currently unavailable, or (3) available.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;ResourceAvailabilityStatus &lt;span class=&quot;title&quot;&gt;CheckResourcesSatisfied&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ResourceSet &amp;amp;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 请求现在可用的资源集，返回一个不可变的资源集合&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ResourceSet &amp;amp;&lt;span class=&quot;title&quot;&gt;GetAvailableResources&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Release&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ResourceSet &amp;amp;resources)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Acquire&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ResourceSet &amp;amp;resources)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// 静态资源配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ResourceSet resources_total_;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// 动态资源容量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ResourceSet resources_available_;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// gpu_map - replace with ResourceMap (for generality).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;span class=&quot;comment&quot;&gt;// namespace ray&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;调度资源定义中包含两个类，一个是资源集(ResourceSet)，资源集维护了一个&lt;code&gt;资源名-&amp;gt;容量&lt;/code&gt;的map映射&lt;code&gt;resource_capacity_&lt;/code&gt;，并实现了相等，资源子集和超集，添加和删除资源等接口。&lt;br&gt;另一个是调度资源类(SchedulingResources)，维护了两个资源集，一个是&lt;code&gt;resources_total_&lt;/code&gt;总的静态资源配置，描述集群总共有哪些资源，以及一个&lt;code&gt;resources_available_&lt;/code&gt;可用资源集，每个时刻的可用资源量是动态变化的，所以也叫动态资源集。实现了检查资源能够满足，请求现在可用的资源，申请(Acquire)和释放(Release)等接口。&lt;br&gt;申请(Acquire)和释放(Release)接口会分别调用资源集的AddResources，RemoveResources接口。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;scheduling_resources.cc&lt;/code&gt;中，资源集的相等是通过判断是否互为子集来实现的：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; ResourceSet::&lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;==(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ResourceSet &amp;amp;rhs) &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;-&amp;gt;IsSubset(rhs) &amp;amp;&amp;amp; rhs.IsSubset(*&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;资源集是否为另一资源集的子集的判断函数如下实现：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; ResourceSet::IsSubset(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ResourceSet &amp;amp;other) &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// Check to make sure all keys of this are in other.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; &amp;amp;resource_pair : resource_capacity_) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; &amp;amp;resource_name = resource_pair.first;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; lhs_quantity = resource_pair.second;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; rhs_quantity = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!other.GetResource(resource_name, &amp;amp;rhs_quantity)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// Resource not found in rhs, therefore lhs is not a subset of rhs.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (lhs_quantity &amp;gt; rhs_quantity) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// Resource found in rhs, but lhs capacity exceeds rhs capacity.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;看完后面4个文件再回过头去看调度策略的实现就明了多了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Ray Version 0.4.0&lt;/p&gt;
&lt;p&gt;调度部分包括六个文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;调度策略：头文件&lt;code&gt;scheduling_policy.h&lt;/code&gt;（定义SchedulingPolicy）和cpp文件&lt;code&gt;scheduling_poli
    
    </summary>
    
      <category term="源码阅读 | Source" scheme="http://whatbeg.com/categories/%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB-Source/"/>
    
    
      <category term="源码阅读" scheme="http://whatbeg.com/tags/%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>Ray源码解析之Task部分</title>
    <link href="http://whatbeg.com/2019/04/16/raysource-task.html"/>
    <id>http://whatbeg.com/2019/04/16/raysource-task.html</id>
    <published>2019-04-16T12:58:11.000Z</published>
    <updated>2019-04-16T12:59:49.870Z</updated>
    
    <content type="html">&lt;p&gt;Ray Version 0.4.0&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;src/ray/raylet/task.h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;----------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; ray &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/// A Task represents a Ray task and a specification of its execution (e.g.,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/// resource demands). The task&#39;s specification contains both immutable fields,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/// determined at submission time, and mutable fields, determined at execution&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/// time.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; Task &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// Create a task.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;///&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// \param execution_spec The execution specification for the task. These are&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// the mutable fields in the task specification that may change at task&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// execution time.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// \param task_spec The immutable specification for the task. These fields&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// are determined at task submission time.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Task(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; TaskExecutionSpecification &amp;amp;execution_spec,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; TaskSpecification &amp;amp;task_spec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      : task_execution_spec_(execution_spec), task_spec_(task_spec) &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// Destroy the task.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; ~Task() &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 获取任务执行规格&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; TaskExecutionSpecification &amp;amp;&lt;span class=&quot;title&quot;&gt;GetTaskExecutionSpec&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 获取任务不可变的规格&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; TaskSpecification &amp;amp;&lt;span class=&quot;title&quot;&gt;GetTaskSpecification&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// Get the task&#39;s object dependencies. This comprises the immutable task&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// arguments and the mutable execution dependencies.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;///&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// \return The object dependencies.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// TODO(atumanov): consider returning a constant reference.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;ObjectID&amp;gt; GetDependencies() &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 判断task是否依赖于某一个object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DependsOn&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ObjectID &amp;amp;object_id)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// Task execution specification, consisting of all dynamic/mutable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// information about this task determined at execution time..&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  TaskExecutionSpecification task_execution_spec_;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// Task specification object, consisting of immutable information about this&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// task determined at submission time. Includes resource demand, object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// dependencies, etc.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  TaskSpecification task_spec_;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;span class=&quot;comment&quot;&gt;// namespace ray&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;task头文件描述了Task的数据结构。&lt;br&gt;Task代表了一个Ray的任务及其规格，包括执行时获得的可变的规格和提交时就确定的不可变的规格。分别由&lt;code&gt;TaskExecutionSpecification&lt;/code&gt;和&lt;code&gt;TaskSpecification&lt;/code&gt;表示。初始化Task需提供这两种规格。Task中有获得这两种规格的函数。&lt;br&gt;Task同时维护了任务的对象依赖，包括不可变的任务参数以及可变的执行时依赖。也实现了getter。Task还包含一个判断task是否依赖于某对象的函数。&lt;/p&gt;
&lt;p&gt;分析&lt;code&gt;task.cc&lt;/code&gt;之前先来看看两种规格的定义：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;src/ray/raylet/task_execution_spec.h   &lt;span class=&quot;meta&quot;&gt;# 执行时任务规格头文件 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;----------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; ray &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/// The task execution specification encapsulates all mutable information about&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/// the task. These fields may change at execution time, converse to the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/// TaskSpecification that is determined at submission time.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; TaskExecutionSpecification &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  TaskExecutionSpecification(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;ObjectID&amp;gt; &amp;amp;&amp;amp;execution_dependencies);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// execution_dependencies: 任务依赖&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// spillback_count: 回溢次数，即由local scheduler像global scheduler推此任务的次数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  TaskExecutionSpecification(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;ObjectID&amp;gt; &amp;amp;&amp;amp;execution_dependencies,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; spillback_count);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;ObjectID&amp;gt; &amp;amp;ExecutionDependencies() &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SetExecutionDependencies&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;ObjectID&amp;gt; &amp;amp;dependencies)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SpillbackCount&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// Increment the spillback count for this task.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;IncrementSpillbackCount&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// Get the task&#39;s last timestamp （ms).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// \return The timestamp when this task was last received for scheduling.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; LastTimeStamp() &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SetLastTimeStamp&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(int64_t new_timestamp)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// 任务所依赖的object id的列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;ObjectID&amp;gt; execution_dependencies_;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// The last time this task was received for scheduling.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; last_timestamp_;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// The number of times this task was spilled back by local schedulers.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; spillback_count_;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;span class=&quot;comment&quot;&gt;// namespace ray&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行时任务规格包含的信息要比提交时任务规格（&lt;code&gt;task_spec.h&lt;/code&gt;中定义）少得多，主要包含任务执行时依赖，回溢次数和最后时间戳三个变量。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;src/ray/raylet/task_spec.h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-----------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;TaskID &lt;span class=&quot;title&quot;&gt;TaskId&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;                         &lt;span class=&quot;comment&quot;&gt;// 本Task的id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;UniqueID &lt;span class=&quot;title&quot;&gt;DriverId&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;                     &lt;span class=&quot;comment&quot;&gt;// 表示task所属job&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;TaskID &lt;span class=&quot;title&quot;&gt;ParentTaskId&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;                   &lt;span class=&quot;comment&quot;&gt;// 启动这个task的task的id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; ParentCounter() &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;;                 &lt;span class=&quot;comment&quot;&gt;// task的父task在这之前启动的task数量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;FunctionID &lt;span class=&quot;title&quot;&gt;FunctionId&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;                 &lt;span class=&quot;comment&quot;&gt;// task所执行的函数id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; NumArgs() &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;;                       &lt;span class=&quot;comment&quot;&gt;// 参数数量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; NumReturns() &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;;                    &lt;span class=&quot;comment&quot;&gt;// 返回值数量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ArgByRef&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(int64_t arg_index)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;        &lt;span class=&quot;comment&quot;&gt;// &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ArgIdCount&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(int64_t arg_index)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;       &lt;span class=&quot;comment&quot;&gt;// 第arg_index个参数有多少个object id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;ObjectID &lt;span class=&quot;title&quot;&gt;ArgId&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(int64_t arg_index, int64_t id_index)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;// 第arg_index个参数的第id_index个object id是多少&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; uint8_t *&lt;span class=&quot;title&quot;&gt;ArgVal&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(int64_t arg_index)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; ArgValLength(&lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; arg_index) &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GetRequiredResource&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; &amp;amp;resource_name)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;// 获取特定资源的需求&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ResourceSet &lt;span class=&quot;title&quot;&gt;GetRequiredResources&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;                      &lt;span class=&quot;comment&quot;&gt;// 获取资源需求集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// Task specification constructor from a pointer.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  TaskSpecification(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt; *spec, &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; spec_size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// Get a pointer to the byte data.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; uint8_t *&lt;span class=&quot;title&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// Get the size in bytes of the task specification.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; size() &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/// The task specification data.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt;&amp;gt; spec_;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Ray Version 0.4.0&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;
    
    </summary>
    
      <category term="源码阅读 | Source" scheme="http://whatbeg.com/categories/%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB-Source/"/>
    
    
      <category term="源码阅读" scheme="http://whatbeg.com/tags/%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>Ray源码解析之整体逻辑结构</title>
    <link href="http://whatbeg.com/2019/04/16/raysource-overall.html"/>
    <id>http://whatbeg.com/2019/04/16/raysource-overall.html</id>
    <published>2019-04-16T12:56:27.000Z</published>
    <updated>2019-04-16T12:59:37.689Z</updated>
    
    <content type="html">&lt;p&gt;Ray Version 0.4.0&lt;/p&gt;
&lt;p&gt;以一个Ray示例程序来说明，Ray执行多进程/分布式程序的过程。&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; ray&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@ray.remote&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    time.sleep(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ray.init()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;results = ray.get([f.remote() &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(results)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;结果输出如下：&lt;br&gt;&lt;figure class=&quot;highlight autoit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Process STDOUT &lt;span class=&quot;literal&quot;&gt;and&lt;/span&gt; STDERR is being redirected &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; /tmp/raylogs/.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Waiting &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; redis server at &lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;35084&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; respond...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Waiting &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; redis server at &lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;59058&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; respond...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Starting &lt;span class=&quot;keyword&quot;&gt;local&lt;/span&gt; scheduler &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; the following resources: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;CPU&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;GPU&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;======================================================================&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;View the web UI at http://localhost:&lt;span class=&quot;number&quot;&gt;8888&lt;/span&gt;/notebooks/ray_ui26399.ipynb?token=&lt;span class=&quot;number&quot;&gt;7e19&lt;/span&gt;e5b2051ef36474500c26427d304da95835e4f0933992&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;======================================================================&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Process finished &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt; code &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;首先我们定义&lt;code&gt;remote&lt;/code&gt;函数&lt;code&gt;f&lt;/code&gt;，将一个普通的Python函数变为&lt;code&gt;remote&lt;/code&gt;函数只需在其上加上&lt;code&gt;@ray.remote&lt;/code&gt;装饰器。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;remote&lt;/code&gt;是一个装饰工厂函数，返回修饰函数的装饰器，主要定义代码如下：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ray/python/ray/worker.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;remote&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(*args, **kwargs)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    worker = global_worker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;make_remote_decorator&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(num_return_vals, num_cpus, num_gpus, resources,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              max_calls, checkpoint_interval, func_id=None)&lt;/span&gt;:&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# 装饰器工厂函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# 装饰器，装饰函数，做Actor和function的区分&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;remote_decorator&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(func_or_class)&lt;/span&gt;:&lt;/span&gt;                                  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; inspect.isfunction(func_or_class) &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; is_cython(func_or_class):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; remote_function_decorator(..)   &lt;span class=&quot;comment&quot;&gt;# 是函数，调用远程函数装饰器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; inspect.isclass(func_or_class):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; worker.make_actor(..)           &lt;span class=&quot;comment&quot;&gt;# 是actor，由全局worker创建一个actor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;raise&lt;/span&gt; Exception&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# 装饰器，参数是函数，起装饰函数的作用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;remote_function_decorator&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(func, function_properties)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func_call&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(*args, **kwargs)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; _submit(args=args, kwargs=kwargs)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_submit&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(...)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func_executor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(arguments)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;This gets run when the remote function is executed.&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                result = func(*arguments)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func_invoker&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(*args, **kwargs)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;raise&lt;/span&gt; Exception&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            func_invoker.remote = func_call              &lt;span class=&quot;comment&quot;&gt;# func.remote() 直接调用func_call&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            func_invoker._submit = _submit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            func_invoker.executor = func_executor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            func_invoker.is_remote = &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            func_name = &lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;&amp;#125;.&amp;#123;&amp;#125;&quot;&lt;/span&gt;.format(func.__module__, func.__name__)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            func_invoker.func_name = func_name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; func_invoker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; remote_decorator&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(args) == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; len(kwargs) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; callable(args[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# 不带参数的 @ray.remote 装饰&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; make_remote_decorator(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            num_return_vals, num_cpus, num_gpus, resources,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            max_calls, checkpoint_interval)(args[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# 带参数的 @ray.remote(xx=x) 装饰&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; make_remote_decorator(num_return_vals, num_cpus, num_gpus,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                     resources, max_calls, checkpoint_interval)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;【先验知识：Python装饰器的概念】&lt;br&gt;由此可见，&lt;code&gt;remote&lt;/code&gt;是一个通用的装饰器，可以装饰普通的Python函数，或者是Python的class。&lt;/p&gt;
&lt;p&gt;进入&lt;code&gt;remote&lt;/code&gt;装饰器体，首先得到全局Worker，然后定义了一个&lt;code&gt;make_remote_decorator&lt;/code&gt;装饰器工厂函数，然后判断是无参装饰还是带参装饰。&lt;br&gt;如果是无参装饰，那么&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@ray.remote&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    time.sleep(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;等价于&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f = ray.remote(f)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;此时，remote的参数只有一个，那就是&lt;code&gt;f&lt;/code&gt;本身，也即&lt;code&gt;args[0]&lt;/code&gt;。&lt;br&gt;所以上述代码返回&lt;code&gt;make_remote_decorator(...)(args[0])&lt;/code&gt;，即调用过的&lt;code&gt;make_remote_decorator&lt;/code&gt;，参数是&lt;code&gt;f&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;否则remote函数定义等价于：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f = ray.remote(num_cpus=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, ..)(f)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;所以&lt;code&gt;remote&lt;/code&gt;装饰器返回一个未调用的，将会在&lt;code&gt;f&lt;/code&gt;上调用的&lt;code&gt;make_remote_decorator&lt;/code&gt;函数。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make_remote_decorator&lt;/code&gt;中再嵌套了一层装饰，本身提供对函数和actor的区分。&lt;/p&gt;
&lt;p&gt;如果是函数，则进入&lt;code&gt;remote_function_decorator&lt;/code&gt;远程函数装饰器；&lt;br&gt;否则是class，由全局worker创建一个actor。&lt;/p&gt;
&lt;p&gt;远程函数装饰器&lt;code&gt;remote_function_decorator&lt;/code&gt;的责任就是接受函数参数，返回一个函数，这个函数就是远程函数，不能直接传参调用（第29行）。将&lt;code&gt;remote()&lt;/code&gt;绑定到&lt;code&gt;func_call&lt;/code&gt;，接受参数后，提交任务（&lt;code&gt;_submit_task&lt;/code&gt;）运行这个函数，最后得到结果，这个结果也是&lt;code&gt;f.remote()&lt;/code&gt;调用的结果，是一个&lt;code&gt;object id&lt;/code&gt;，因为返回结果存在object store中。&lt;/p&gt;
&lt;p&gt;至此，远程函数就定义好了。我们在原始的普通Python函数&lt;code&gt;f&lt;/code&gt;上，装饰了一下，得到了一个可以通过&lt;code&gt;f.remote()&lt;/code&gt;来调用的远程函数，如此调用将会立马提交一个任务，供Ray引擎调度执行，返回结果。&lt;/p&gt;
&lt;p&gt;下面是&lt;code&gt;ray.init()&lt;/code&gt;过程。可以理解为初始化Ray引擎的过程，类似于启动Tensorflow的Session的过程。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ray.init()&lt;/code&gt;也有带参版本和无参版本。&lt;br&gt;带参版本用于已经存在并启动一个Ray集群的情况下，直接填入该集群的redis地址，即可连接到集群，就初始化好了。&lt;br&gt;无参版本适用于单机多进程的运行，这种情况下会创建一个Ray环境，默认启动一个local scheduler，一个global scheduler，一个或多个redis server, 一个object store和一个object store manager，和若干worker进程（默认为CPU核数个）。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;init()&lt;/code&gt;主要逻辑为：&lt;br&gt;&lt;figure class=&quot;highlight nix&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ray/python/ray/worker.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;init()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  _init()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; PYTHON_MODE:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      pass&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    elif start_ray_local:  &lt;span class=&quot;comment&quot;&gt;# 本地开启一个Ray主节点进程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;address_info&lt;/span&gt; = services.start_ray_head(..)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:  &lt;span class=&quot;comment&quot;&gt;# 连接到已有集群&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;attr&quot;&gt;address_info&lt;/span&gt; = get_address_info_from_redis(redis_address, node_ip_address)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 将全局worker连接到 local scheduler, Plasma 和 Redis&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    connect(driver_address_info, &lt;span class=&quot;attr&quot;&gt;object_id_seed=object_id_seed,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;mode=driver_mode,&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;worker=global_worker)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;四个模式：&lt;br&gt;&lt;figure class=&quot;highlight sqf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SCRIPT_MODE：如果Worker是&lt;span class=&quot;built_in&quot;&gt;driver&lt;/span&gt;，且由Python脚本启动或者在shell中交互式运行的话，使用脚本模式。会打印任务失败信息。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WORKER_MODE：如果Worker不是&lt;span class=&quot;built_in&quot;&gt;driver&lt;/span&gt;，只是slave的话，启动WORKER_MODE，不打印关于task的任何信息。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PYTHON_MODE：如果要顺序运行或是调试，可以使用PYTHON_MODE，此时的Worker即是&lt;span class=&quot;built_in&quot;&gt;driver&lt;/span&gt;。此模式下，不会发送remote函数到调度器，而是直接以阻塞的形式执行。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SILENT_MODE：测试的时候使用SILENT_MODE。不会打印error信息，因为许多测试时故意失败的。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们的示例代码中，&lt;code&gt;ray.init()&lt;/code&gt;是无参的，代表我们会在本地开启一个ray head节点进程。&lt;br&gt;此部分代码简要逻辑如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ray/python/ray/services.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;start_ray_head&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  | start_ray_processes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    | &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Process STDOUT and STDERR is being redirected to /tmp/raylogs/.&quot;&lt;/span&gt;)  &lt;span class=&quot;comment&quot;&gt;# 程序输出中第一行的来源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    | &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; redis_address is None:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    |   start_redis(...)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        |  start_redis_instance(..)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          |  创建redis_shards个redis server&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;# 等待redis server可用并响应，程序输出第2,3行的来源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          |  &lt;span class=&quot;built_in&quot;&gt;wait&lt;/span&gt;_&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;_redis_to_start(&lt;span class=&quot;string&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;, port)   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    | &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; include_&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;_monitor:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    |   start_&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;_monitor(..)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    | &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; include_global_scheduler:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    |   start_global_scheduler(...)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# 开启local_scheduler并打印 Starting local scheduler ..，程序第4行的来源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        | &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;_scheduler_name, pid = ray.local_scheduler.start_&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;_scheduler(...)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    | &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(num_&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;_schedulers - len(object_store_addresses)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    |   start_objstore(...)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        | ray.plasma.start_plasma_store(..)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        | ray.plasma.start_plasma_manager(..)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    | &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;_scheduler_socket_names), num_&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;_schedulers):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    |   start_&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;_scheduler(...)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 每个local scheduler默认搭配CPU核数个workers，因此workers_per_local_scheduler[i] = #cpus&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    | &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i, num_&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;_scheduler_workers &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; enumerate(workers_per_&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;_scheduler):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    |   &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(num_&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;_scheduler_workers):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    |     start_worker(...)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    | &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; include_webui:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    |   start_ui(...)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 开启UI会打印输出中UI的部分&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到，&lt;code&gt;start_ray_head&lt;/code&gt;的过程配套启动了redis, global scheduler, local scheduler及其workers，UI等。&lt;br&gt;这些都是ray执行快速的分布式任务分发的基本组件，其中redis用来存储全局系统状态，global scheduler和local scheduler分数两级调度器，负责快速的任务调度，workers负责执行远程函数，UI负责观察运行状态，不过目前UI做的还比较简陋。&lt;/p&gt;
&lt;p&gt;每个Worker执行一个主循环&lt;code&gt;main_loop&lt;/code&gt;，循环不断地接受任务，处理任务返回……&lt;br&gt;这部分代码见&lt;code&gt;ray/python/ray/workers/default_worker.py&lt;/code&gt;。&lt;br&gt;&lt;code&gt;main_loop&lt;/code&gt;的代码如下：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ray/python/ray/worker.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main_loop&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(signum, frame)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cleanup(worker=self)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sys.exit(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    signal.signal(signal.SIGTERM, exit)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    check_main_thread()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# 此处调用self.local_scheduler_client.get_task()获得任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        task = self._get_next_task_from_local_scheduler()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self._wait_for_and_process_task(task)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        |  self._wait_for_function(function_id, task.driver_id().id())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        |  &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; self.lock:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           |  self._process_task(task)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;初始化好以后，就可以运行&lt;code&gt;f.remote()&lt;/code&gt;了，运行后还是回到装饰器里面的&lt;code&gt;_submit_task&lt;/code&gt;函数，&lt;br&gt;&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ray/python/ray/worker.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def _submit(args=&lt;span class=&quot;type&quot;&gt;None&lt;/span&gt;, kwargs=&lt;span class=&quot;type&quot;&gt;None&lt;/span&gt;, num_return_vals=&lt;span class=&quot;type&quot;&gt;None&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            num_cpus=&lt;span class=&quot;type&quot;&gt;None&lt;/span&gt;, num_gpus=&lt;span class=&quot;type&quot;&gt;None&lt;/span&gt;, resources=&lt;span class=&quot;type&quot;&gt;None&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    check_connected()       &lt;span class=&quot;comment&quot;&gt;# 检查worker是否连接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    check_main_thread()     &lt;span class=&quot;comment&quot;&gt;# 检查是否主线程，不允许非主线程提交任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    kwargs = &amp;#123;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; kwargs &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; kwargs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    args = signature.extend_args(function_signature, args, kwargs)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; _mode() == &lt;span class=&quot;type&quot;&gt;PYTHON_MODE&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# PYTHON模式下，并不提交任务，而是串行执行，拷贝参数以防修改&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = func(*copy.deepcopy(args))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 提交任务，返回结果的object id或者一组object ids&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    object_ids = _submit_task(function_id, args,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              num_return_vals=num_return_vals,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              num_cpus=num_cpus, num_gpus=num_gpus,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              resources=resources)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; len(object_ids) == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; object_ids[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; len(object_ids) &amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; object_ids&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;代码中调用的&lt;code&gt;_submit_task&lt;/code&gt;是对&lt;code&gt;worker.submit_task&lt;/code&gt;的一个封装：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ray/python/ray/worker.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_submit_task&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(function_id, *args, **kwargs)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;This is a wrapper around worker.submit_task.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    We use this wrapper so that in the remote decorator, we can call&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _submit_task instead of worker.submit_task. The difference is that when we&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    attempt to serialize remote functions, we don&#39;t attempt to serialize the&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    worker object, which cannot be serialized. 【这样搞一下就不需要序列化worker对象了？】&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; global_worker.submit_task(function_id, *args, **kwargs)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最终，Worker的&lt;code&gt;submit_task&lt;/code&gt;函数如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ray/python/ray/worker.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def submit_task(self, &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;_id, args, ...):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    with &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;_span(&lt;span class=&quot;string&quot;&gt;&quot;ray:submit_task&quot;&lt;/span&gt;, worker=self):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        check_main_thread()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# 将参数put进object store，注意，如果多个函数使用的是相同的输入，直接调用的话仍然会put多次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# 一个方法是先在调用前put参数，然后传入put后的ObjectID对象。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        args_&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;_&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;_scheduler = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; arg &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; args:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; isinstance(arg, ray.local_scheduler.ObjectID):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                args_&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;_&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;_scheduler.append(arg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; isinstance(arg, ray.actor.ActorHandleParent):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                args_&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;_&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;_scheduler.append(put(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ray.actor.wrap_actor_handle(arg)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; ray.local_scheduler.check_simple_value(arg):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                args_&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;_&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;_scheduler.append(arg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                args_&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;_&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;_scheduler.append(put(arg))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# Submit the task to local scheduler.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        task = ray.local_scheduler.Task(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.task_driver_id,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ray.local_scheduler.ObjectID(&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;_id.id()),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            args_&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;_&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;_scheduler,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ...)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.task_index += 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.local_scheduler_client.submit(task)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; task.returns()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;也就是说，&lt;code&gt;[f.remote() for i in range(4)]&lt;/code&gt;这一句，默认的全局worker会提交4个任务给local scheduler，然后local scheduler将这些任务调度到嗷嗷待哺的各个worker，前面的代码说过，默认会启动CPU核数个Worker。&lt;/p&gt;
&lt;p&gt;运行完毕后，列表中就是返回的值的object id，我们需要使用&lt;code&gt;ray.get(id)&lt;/code&gt;从object store中将真正的数据拿出来。&lt;/p&gt;
&lt;p&gt;最后就成了&lt;code&gt;[1, 1, 1, 1]&lt;/code&gt;，程序到此就结束了。&lt;/p&gt;
&lt;p&gt;再回顾一下整个过程：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@ray.remote   # 装饰器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    time.sleep(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;comment&quot;&gt;# 装饰完成，装饰过后的远程函数f已形成&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ray.init()    &lt;span class=&quot;comment&quot;&gt;# 初始化Ray引擎，会启动各个必要组件，包括调度，状态存储，对象存储和workers等&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;results = ray.get([f.remote() &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)])   &lt;span class=&quot;comment&quot;&gt;# 提交任务，获得结果，从object store中取出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(results)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Happy Reading!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Ray Version 0.4.0&lt;/p&gt;
&lt;p&gt;以一个Ray示例程序来说明，Ray执行多进程/分布式程序的过程。&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cl
    
    </summary>
    
      <category term="源码阅读 | Source" scheme="http://whatbeg.com/categories/%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB-Source/"/>
    
    
      <category term="源码阅读" scheme="http://whatbeg.com/tags/%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>Linux异常集锦</title>
    <link href="http://whatbeg.com/2019/04/16/linuxexceptions.html"/>
    <id>http://whatbeg.com/2019/04/16/linuxexceptions.html</id>
    <published>2019-04-16T12:50:04.000Z</published>
    <updated>2019-04-16T12:52:34.135Z</updated>
    
    <content type="html">&lt;p&gt;新开一贴，记录一下Linux使用中的一些问题。&lt;/p&gt;
&lt;h5 id=&quot;ssh不通，并报如下错误&quot;&gt;&lt;a href=&quot;#ssh不通，并报如下错误&quot; class=&quot;headerlink&quot; title=&quot;ssh不通，并报如下错误&quot;&gt;&lt;/a&gt;ssh不通，并报如下错误&lt;/h5&gt;&lt;figure class=&quot;highlight gauss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@&lt;/span&gt;    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     &lt;span class=&quot;comment&quot;&gt;@&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;@@&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Someone could be eavesdropping on you right now (man-in-the-middle attack)!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;It is also possible that a host &lt;span class=&quot;built_in&quot;&gt;key&lt;/span&gt; has just been changed.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The fingerprint &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; the ECDSA &lt;span class=&quot;built_in&quot;&gt;key&lt;/span&gt; sent by the remote host is&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a9:&lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;72&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;d:fb:&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;57&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;85&lt;/span&gt;:cc:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;a:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;c:&lt;span class=&quot;number&quot;&gt;56&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;33&lt;/span&gt;:c6:&lt;span class=&quot;number&quot;&gt;04.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Please contact your &lt;span class=&quot;keyword&quot;&gt;system&lt;/span&gt; administrator.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Add correct host &lt;span class=&quot;built_in&quot;&gt;key&lt;/span&gt; in /home/experiment/.ssh/known_hosts to get rid of this message.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Offending ECDSA &lt;span class=&quot;built_in&quot;&gt;key&lt;/span&gt; in /home/experiment/.ssh/known_hosts:&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ECDSA host &lt;span class=&quot;built_in&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; slave103 has changed &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; you have requested strict checking.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Host &lt;span class=&quot;built_in&quot;&gt;key&lt;/span&gt; verification failed.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;【解决方案】将&lt;code&gt;/home/experiment/.ssh/known_hosts&lt;/code&gt;对应行删掉。因为可能host key已经更新了。&lt;/p&gt;
&lt;h5 id=&quot;scp时，-bash-syntax-error-near-unexpected-token-‘-‘&quot;&gt;&lt;a href=&quot;#scp时，-bash-syntax-error-near-unexpected-token-‘-‘&quot; class=&quot;headerlink&quot; title=&quot;scp时，-bash: syntax error near unexpected token ‘(‘&quot;&gt;&lt;/a&gt;scp时，-bash: syntax error near unexpected token ‘(‘&lt;/h5&gt;&lt;p&gt;scp/rsync远程传输时，如果文件名包含括号’(‘或’)’，则简单的传输会报错，如下：&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ scp &lt;span class=&quot;string&quot;&gt;remote01:&lt;/span&gt;.&lt;span class=&quot;regexp&quot;&gt;/xx/&lt;/span&gt;haha(&lt;span class=&quot;number&quot;&gt;2019&lt;/span&gt;).lcv .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;string&quot;&gt;bash:&lt;/span&gt; syntax error near unexpected token `(&lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果简单加上转义符’\’或者引号’’，也会报错：&lt;br&gt;&lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ scp remote01:.&lt;span class=&quot;meta-keyword&quot;&gt;/xx/&lt;/span&gt;haha\(&lt;span class=&quot;number&quot;&gt;2019&lt;/span&gt;\).lcv .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;或者&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ scp remote01:.&lt;span class=&quot;meta-keyword&quot;&gt;/xx/&lt;/span&gt;haha&lt;span class=&quot;string&quot;&gt;&quot;(2019)&quot;&lt;/span&gt;.lcv .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bash:&lt;/span&gt; -c: line &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;: syntax error near unexpected token `(&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;bash:&lt;/span&gt; -c: line &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;: `scp -f .&lt;span class=&quot;meta-keyword&quot;&gt;/huqiu/&lt;/span&gt;das&lt;span class=&quot;meta-keyword&quot;&gt;/benchmarks/&lt;/span&gt;lcvs/slave028_aeh_adult_r0_trial_500_P_100_S_1_TL_360_04061553(&lt;span class=&quot;number&quot;&gt;0.874701&lt;/span&gt;).lcv&#39;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这时候，其实是加少了，因为涉及到本地端和remote端，所以需要提供可供两次转义还正确的写法。&lt;/p&gt;
&lt;p&gt;【解决方案】&lt;br&gt;&lt;figure class=&quot;highlight tex&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;formula&quot;&gt;$ scp &#39;remote01:./xx/haha&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;(&lt;/span&gt;&lt;/span&gt;2019&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;)&lt;/span&gt;&lt;/span&gt;.lcv&#39; .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;或者&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&lt;/span&gt; scp remote01:./xx/haha&quot;&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;(&lt;/span&gt;&lt;/span&gt;2019&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&quot;.lcv .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;或者&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;formula&quot;&gt;$ scp remote01:./xx/haha&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;(&lt;/span&gt;&lt;/span&gt;2019&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;)&lt;/span&gt;&lt;/span&gt;.lcv .&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;新开一贴，记录一下Linux使用中的一些问题。&lt;/p&gt;
&lt;h5 id=&quot;ssh不通，并报如下错误&quot;&gt;&lt;a href=&quot;#ssh不通，并报如下错误&quot; class=&quot;headerlink&quot; title=&quot;ssh不通，并报如下错误&quot;&gt;&lt;/a&gt;ssh不通，并报如下错误&lt;/h5&gt;&lt;f
    
    </summary>
    
      <category term="计算机相关 | CS.Related" scheme="http://whatbeg.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3-CS-Related/"/>
    
    
      <category term="Linux" scheme="http://whatbeg.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>近代史年表（1839-1911）</title>
    <link href="http://whatbeg.com/2019/04/16/modernhistorylist.html"/>
    <id>http://whatbeg.com/2019/04/16/modernhistorylist.html</id>
    <published>2019-04-16T12:38:28.000Z</published>
    <updated>2019-04-16T12:42:33.255Z</updated>
    
    <content type="html">&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;公元年份&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;朝代年号&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;大事记&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1839&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;道光十九年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;林则徐于虎门销毁鸦片。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1840&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;道光二十年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;中英第一次鸦片战争爆发(1840~1842年)。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1841&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;道光二十一年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1842&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;道光二十二年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;中英签订《南京条约》，英占香港岛，开放五口通商。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1843&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;道光二十三年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;中英签订《五口通商章程》，《虎门条约》。同年，洪秀全创立拜上帝会。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1844&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;道光二十四年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;中美《望厦条约》、中法《黄埔条约》订立。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1845&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;道光二十五年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1846&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;道光二十六年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1847&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;道光二十七年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1848&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;道光二十八年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1849&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;道光二十九年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1850&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;道光三十年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1851&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;咸丰元年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;清咸丰元年，清朝人口达43610万。1月，拜上帝会在广西金田村起事，建号太平天国。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1852&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;咸丰二年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1853&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;咸丰三年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;太平军攻入南京，改名天京，定为国都；并颁《天朝田亩制度》。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1854&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;咸丰四年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1855&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;咸丰五年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;5月，僧格林沁攻陷冯官屯，俘李开芳，太平天国北伐军失败。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1856&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;咸丰六年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;第二次鸦片战争(1856-4860)爆发。英法联军侵华。同年，天京事变。太平天国内讧，渐趋败亡。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1857&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;咸丰七年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1858&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;咸丰八年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;英法联军攻陷大沽，清廷与两国签订《天津条约》，又与俄签订《瑷珲条约》。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1859&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;咸丰九年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;英法联军再次入侵中国。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1860&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;咸丰十年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;英法联军火烧圆明园；攻陷北京。中英、中法、中我分别签订《北京条约》。12月，白凌阿等于义州起事，东北各族人民大起义爆发。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1861&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;咸丰十一年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;8月咸丰在热河驾崩。11月1日，辛酉政变，慈禧太后登上中国政治舞台。同年，洋务运动(1861~1894年)开始，创办军事工业、实业，编练陆海军设西式学堂。3月，白凌阿等部起义军攻破朝阳、赤峰县城。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1862&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;同治元年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1863&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;同治二年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1864&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;同治三年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;洪秀全病死，清军攻入南京，太平天国败亡。同年，中俄签订《勘分西北界约记》。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1865&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;同治四年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1866&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;同治五年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1867&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;同治六年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1868&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;同治七年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2月，白凌河被清军逮捕杀害。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1869&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;同治八年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1月，弥勒僧格被清军逮捕杀害，东北各族人民大起义失败。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1870&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;同治九年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1871&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;同治十年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;7月，俄国侵略军强占伊犁。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1872&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;同治十一年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1873&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;同治十二年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1874&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;同治十三年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1875&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪元年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1876&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪二年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1877&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪三年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1878&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪四年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1879&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪五年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1880&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪六年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;张之洞奏陈《详筹边计折》。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1881&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪七年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1882&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪八年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1883&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪九年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;中法战争(1883~1885年)爆发。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1884&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪十年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1885&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪十一年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;中法签订《越南条约》，法占领越南。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1886&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪十二年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1887&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪十三年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1888&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪十四年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;清廷建立北洋水师，加强军备，巩固海疆。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1889&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪十五年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1890&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪十六年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1891&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪十七年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1892&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪十八年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1893&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪十九年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1894&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪二十年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;中日甲午战争(1894~1895年)爆发。同年，孙中山在檀香山创立兴中会。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1895&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪二十一年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;中日签订《马关条约》，割让台湾及辽东半岛。俄法德三国干涉还辽。同年，洋务运动宣告终结。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1896&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪二十二年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;《中俄密约》签订；此后列强纷纷在华租借港湾，划分势力范围。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1897&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪二十三年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;德国强租胶州湾；沙俄占旅顺及大连。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1898&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪二十四年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;6月，光绪帝在康有为等推动宣布“戊戌变法”，同年9月，慈禧发动政变，变法失败，又称“百日维新”。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1899&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪二十五年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;义和团兴起，在山东各地杀教士、教民。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1900&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪二十六年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;6月21日，慈禧对全世界宣战。8月16日，八国联军攻陷北京。同年，兴中会惠州起义失败。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1901&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪二十七年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;清政府和西方列强十一国签订《辛丑条约》。清廷下令筹划新政。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1902&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪二十八年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1903&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪二十九年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1904&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪三十年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1905&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪三十一年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;清政府罢科举，派五大臣出洋考察宪政。同年，孙中山创立中国同盟会，提出三民主义。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1906&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪三十二年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;清政府宣布「预备立宪」。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1907&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪三十三年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1908&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪三十四年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;光绪帝、慈禧太后先后驾崩；宣统帝即位。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1909&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;宣统元年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1910&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;宣统二年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1911&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;宣统三年&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10月10日，武昌起义爆发。中华民国诞生。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;公元年份&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;朝代年号&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;大事记&lt;/th&gt;

    
    </summary>
    
      <category term="读书 | Reading" scheme="http://whatbeg.com/categories/%E8%AF%BB%E4%B9%A6-Reading/"/>
    
    
      <category term="历史" scheme="http://whatbeg.com/tags/%E5%8E%86%E5%8F%B2/"/>
    
  </entry>
  
  <entry>
    <title>C++面向对象FQA</title>
    <link href="http://whatbeg.com/2019/04/16/cppfqa.html"/>
    <id>http://whatbeg.com/2019/04/16/cppfqa.html</id>
    <published>2019-04-16T12:35:43.000Z</published>
    <updated>2019-04-16T12:36:45.504Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;Q. 面向对象的理解？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;面向对象是一种程序设计方法。面向对象有三大特性：封装，继承，多态。&lt;/p&gt;
&lt;p&gt;1) 封装：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;封装可以隐藏实现细节，使得代码模块化；封装是把过程和数据包围起来，对数据的访问只能通过已定义的界面。面向对象计算始于这个基本概念，即现实世界可以被描绘成一系列完全自治、封装的对象，这些对象通过一个受保护的接口访问其他对象。在面向对象编程上可理解为：把客观事物封装成抽象的类，并且类可以把自己的数据和方法只让可信的类或者对象操作，对不可信的进行信息隐藏。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2) 继承：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;继承是指这样一种能力：它可以使用现有类的所有功能，并在无需重新编写原来的类的情况下对这些功能进行扩展。其继承的过程，就是从一般到特殊的过程。&lt;br&gt;通过继承创建的新类称为“子类”或“派生类”。被继承的类称为“基类”、“父类”或“超类”。要实现继承，可以通过“继承”（Inheritance）和“组合”（Composition）来实现。在某些&lt;br&gt;OOP 语言中，一个子类可以继承多个基类。但是一般情况下，一个子类只能有一个基类，要实现多重继承，可以通过多级继承来实现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3) 多态：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;多态性（polymorphisn）是允许你将父对象设置成为和一个或更多的他的子对象相等的技术，赋值之后，父对象就可以根据当前赋值给它的子对象的特性以不同的方式运作。简单的说，就是一句话：允许将子类类型的指针赋值给父类类型的指针。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;封装和继承比较简单，多态这块比较繁琐，多啰嗦一些。&lt;/p&gt;
&lt;p&gt;说说多态的作用，多态在C++中其实分为静态多态和动态多态，静态多态其实就是重载，也是C语言没有的功能。&lt;/p&gt;
&lt;p&gt;1）动态多态：多态的目的是为了接口重用。也就是说，不论传递过来的究竟是那个类的对象，函数都能够通过同一个接口调用到适应各自对象的实现方法。可以通过基类指针对所有派生类（包括直接派生和间接派生）的成员变量和成员函数进行“全方位”的访问，尤其是成员函数。如果没有多态，只能访问指针类型所在类的对象。&lt;/p&gt;
&lt;p&gt;2）静态多态：通过函数重载来实现&lt;br&gt;a/ 类的构造函数和类名相同，如果没有重载，实例化不同对象非常麻烦&lt;br&gt;b/ 操作符重载，可以大大丰富操作符的含义，并且为特殊类指定特殊的运算符&lt;br&gt;c/ 可能有同一个函数需要处理不同的参数类型，重载后无需改变函数名字，也起到统一接口的作用&lt;/p&gt;
&lt;p&gt;多态通过虚函数来实现。即父类定义虚函数，子类继承或重写虚函数。&lt;/p&gt;
&lt;p&gt;虚函数的内存结构如下：&lt;/p&gt;
&lt;p&gt;在一个类中，成员函数有虚函数的话，那么，这个对象的前四个字节是存放一个指向这个虚函数表(简称虚表)的指针。虚表里面放的是虚函数的地址。即使是存在虚基类指针，虚表指针也是在虚基类指针的上方，这是为了保证正确取到虚函数的偏移量。&lt;/p&gt;
&lt;p&gt;C++也允许多继承，但多继承会有菱形继承问题，那么对于菱形继承，有多个基类的类对象，则会有多个虚表，每一个基类对应一个虚表，同时，虚表的顺序和继承时的顺序相同。但是菱形继承会造成数据冗余和二义性，虚继承可以解决菱形继承的数据冗余与二义性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q. 什么函数不能声明为虚函数？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1) 构造函数：因为先构造父类然后构造子类，所以父类必须有实构造函数&lt;br&gt;2) 静态成员函数：静态成员属于类，不属于对象，没有多态一说&lt;br&gt;3) 内联函数：内联函数涉及到展开，在编译器将函数类容替换到函数调用处，是静态编译的。而虚函数是动态调用的，在编译器并不知道需要调用的是父类还是子类的虚函数，所以不能够inline声明展开，所以编译器会忽略。&lt;/p&gt;
&lt;p&gt;同时，析构函数可以调用虚函数，而构造函数不可以调用虚函数，理由在于，创建类对象时，会先构造父类子对象再构造该类自己，构建父类子对象的时候，如果构造函数包含虚函数，这个虚函数不会解析为子类重写过的函数，而是父类本身的函数。即，父类对象构造期间虚函数绝不会下降到子类层。从而引起非预期的结果。&lt;/p&gt;
&lt;p&gt;在析构函数中，不仅可以调用虚函数，而且非常建议（甚至必须）在有虚函数的时候，创造一个虚析构函数。&lt;br&gt;因为如果对象经由父类指针被delete时，如果析构函数非虚，则可能只会析构父对象部分，子类成分很可能没被销毁！（C++官方解释是，未有定义）如果基类的析构函数是虚函数，则会在运行时多态的影响下调用派生类的析构函数。&lt;br&gt;所以，只要类有一个虚函数，都应该将析构函数声明为虚函数。&lt;/p&gt;
&lt;p&gt;多态是有代价的，C++访问虚函数比访问普通函数慢，原因如下：&lt;/p&gt;
&lt;p&gt;1）多了几条汇编指令（运行时得到对应类的函数的地址，取虚表，取虚函数地址，call调用）。&lt;br&gt;2）影响CPU流水线（这个没有展开，有兴趣的可以自己查一下）&lt;br&gt;3）编译器不能内联优化（仅在用父类引用或指针调用时，不能内联，是因为在得到子类的引用或者指针之前，根本不知道要调用哪个函数，所以无从内联，但是值得注意的是：对于子类直接调用虚函数，是可以内联优化的。）&lt;/p&gt;
&lt;p&gt;再说说，构造，析构，拷贝构造等函数。&lt;/p&gt;
&lt;p&gt;C++ 类中默认自带的6个函数&lt;br&gt;构造函数，析构函数，拷贝构造函数，重载赋值=运算符，取地址运算符，const修饰的取地址运算符&lt;/p&gt;
&lt;p&gt;构造函数，拷贝构造函数，析构函数是子类不能继承父类的函数&lt;/p&gt;
&lt;p&gt;异常经常会出现，那么在构造函数和析构函数中能否抛出异常呢？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q. 构造函数是否可以抛出异常？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、构造函数中抛出异常，对象的析构函数将不会被执行。&lt;br&gt;2、尽量不要让异常处理离开构造函数，应该再构造函数内部就地处理&lt;br&gt;3、构造函数抛出异常时，本应该在析构函数中被delete的对象没有被delete，会导致内存泄露。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q. 析构函数是否可以抛出异常？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、 不要在析构函数中抛出异常！虽然C++并不禁止析构函数抛出异常，但这样会导致程序过早结束或出现不明确的行为。&lt;br&gt;2、 如果某个操作可能会抛出异常，class应提供一个普通函数（而非析构函数），来执行该操作。目的是给客户一个处理错误的机会。&lt;br&gt;3、 如果析构函数中异常非抛不可，那就用try catch来将异常吞下，但这样方法并不好，我们提倡有错早些报出来。&lt;br&gt;总结&lt;br&gt;1、 构造函数中尽量不要抛出异常，能避免的就避免，如果必须，要考虑不要内存泄露！&lt;br&gt;2、 不要在析构函数中抛出异常！&lt;/p&gt;
&lt;p&gt;构造函数中，成员变量一定要通过初始化列表来初始化的情况：&lt;/p&gt;
&lt;p&gt;构造函数中，成员变量一定要通过初始化列表来初始化的有以下几种情况：&lt;br&gt;1、const常量成员，因为常量只能初始化，不能赋值，所以必须放在初始化列表中；&lt;br&gt;2、引用类型，引用必须在定义的时候初始化，并且不能重新赋值，所以也要写在初始化列表中；&lt;br&gt;3、没有默认构造函数的类类型，因为使用初始化列表可以不必调用默认构造函数来初始化，而是直接调用拷贝构造函数；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q. 临时对象在什么时候会产生？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;(1) 用构造函数来做隐式转换函数时，会创建临时对象；&lt;br&gt;(2) 建立一个没有命名的非堆（non-heap）对象，也就是无名对象时，会产生临时对象；&lt;br&gt;(3) 函数返回一个对象值时，会产生临时对象，函数中的返回值会以值拷贝的形式拷贝到被调函数栈中的一个临时对象。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q. 成员函数里memset(this,0,sizeof(*this))会发生什么？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有时候类里面定义了很多int,char,struct等C语言里的那些类型的变量，我习惯在构造函数中将它们初始化为0，但是一句句的写太麻烦，所以直接就memset(this, 0, sizeof *this);将整个对象的内存全部置为0。对于这种情形可以很好的工作，但是下面几种情形是不可以这么使用的：&lt;br&gt;1.类含有虚函数表：这么做会破坏虚函数表，后续对虚函数的调用都将出现异常&lt;br&gt;2.类中含有C++类型的对象：例如，类中定义了一个list的对象，由于在构造函数体的代码执行之前就对list对象完成了初始化，假设list在它的构造函数里分配了内存，那么我们这么一做就破坏了list对象的内存。&lt;/p&gt;
&lt;p&gt;拷贝构造函数在哪几种情况下会被调用？&lt;/p&gt;
&lt;p&gt;在C++中，下面三种情况会调用拷贝构造函数（有时也称“复制构造函数”）：&lt;br&gt;1) 一个对象作为函数参数，以值传递的方式传入函数体；&lt;br&gt;2) 一个对象作为函数返回值，以值传递的方式从函数返回；&lt;br&gt;3) 一个对象用于给另外一个对象进行初始化（常称为复制初始化）；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q. 什么时候必须重写拷贝构造函数？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一个比较简单的原则：如果你需要定义一个非空的析构函数，那么，通常情况下你也需要定义一个拷贝构造函数。&lt;br&gt;更通常的原则是：&lt;br&gt;1）对于凡是包含动态分配成员或包含指针成员的类都应该提供拷贝构造函数；&lt;/p&gt;
&lt;p&gt;注意，在提供拷贝构造函数的同时，还应该考虑重载”=”赋值操作符号。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q. 何时编译器会自动生成默认构造函数？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其实默认构造函数也是分为两类的：有用的、无用的。所谓有用的标准也是就默认构造函数会为我们的类做一些初始化操作。那么无用的就不会做任何工作,从而对我们的类也就没有任何意义。所以,我们通常所说的默认构造函数是指有用的默认构造函数,其英文名字叫 nontrivial default constructor。&lt;br&gt;但是，对于以下四种情况，编译器会自动生成默认构造函数：&lt;br&gt;1）如果一个类没有任何构造函数，但是含有一个类类型的成员变量，该成员对象有nontrivial default constructor，此时编译器会为该类合成一个默认的构造函数；&lt;br&gt;2）如果一个类没有任何构造函数，但是该类继承自含有默认构造函数的基类，该基类有nontrivial default constructor，此时编译器会为该类合成一个默认的构造函数；&lt;br&gt;编译器这样的理由是:因为派生类被合成时需要显式调用基类的默认构造函数。&lt;br&gt;3）如果一个类没有任何构造函数，但是该类声明或继承了虚函数，含有任何virtual function table(或vtbl)、pointer member(或vptr)，此时编译器会为该类合成一个默认的构造函数；&lt;br&gt;编译器这样做的理由很简单:因为这些vtbl或vptr需要编译器隐式(implicit)的合成出来,那么编译器就把合成动作放到了默认构造函数里面。所以编译器必须自己产生一个默认构造函数来完成这些操作。&lt;br&gt;4）如果一个类没有任何构造函数，但是该类含有虚基类，此时编译器会为该类合成一个默认的构造函数；&lt;br&gt;除了以上四种情况，编译器并不会为我们的类产生默认构造函数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q. 何时编译器会自动生成拷贝构造函数？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;只有在4种情况下编译器才会给我们生成缺省拷贝构造函数：&lt;br&gt;1）类包含的成员变量是object，并且这个object的类有拷贝构造函数。&lt;br&gt;2）类继承自一个基类，这个基类有拷贝构造函数。&lt;br&gt;3）类声明了1个或者多个虚函数。&lt;br&gt;4）类继承自一个基类，这个基类有1个或者多个虚函数。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Q. 面向对象的理解？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;面向对象是一种程序设计方法。面向对象有三大特性：封装，继承，多态。&lt;/p&gt;
&lt;p&gt;1) 封装：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;封装可以隐藏实现细节，使得代码模块化；封装是把过程和数据包围起来，
    
    </summary>
    
      <category term="编程语言 | Program Lang." scheme="http://whatbeg.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80-Program-Lang/"/>
    
    
      <category term="C++" scheme="http://whatbeg.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>漫谈C++内存分配与管理</title>
    <link href="http://whatbeg.com/2019/04/16/cppmemory.html"/>
    <id>http://whatbeg.com/2019/04/16/cppmemory.html</id>
    <published>2019-04-16T12:32:13.000Z</published>
    <updated>2019-04-16T12:34:28.465Z</updated>
    
    <content type="html">&lt;p&gt;本文谈谈C++的内存分配与管理，主要包括内存布局，分配，管理，解配，以及内存错误和防范措施。&lt;br&gt;漫谈漫谈，想到什么谈什么，不要在意前后衔接。&lt;/p&gt;
&lt;p&gt;首先要了解程序占用的内存布局，顺便可以了解下对应的操作系统上的真实存储布局。&lt;/p&gt;
&lt;p&gt;通常一个由 C/C++ 编译的程序占用的内存分为以下 5 个部分:&lt;/p&gt;
&lt;p&gt;1) 栈区（stack）: 由编译器自动分配释放，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈。&lt;br&gt;2) 堆区（heap）: 一般由程序员分配释放，若程序员不释放，程序结束时可能由OS回收。注意它与数据结构中的堆是两回事，分配方式倒是类似于链表。&lt;br&gt;3) 全局区（静态区）（static）: 全局变量和静态变量的存储是放在一块的，初始化的全局变量和静态变量在一块区域，未初始化的全局变量和未初始化的静态变量在相邻的另一块区域。程序结束后由系统释放。&lt;br&gt;4) 文字常量区: 常量字符串等只读数据放在这里的。程序结束后由系统释放。&lt;br&gt;5) 程序代码区: 存放函数体的二进制代码。&lt;/p&gt;
&lt;p&gt;同时，一个linux进程的虚拟存储器结构如下：（从高地址到低地址）&lt;/p&gt;
&lt;p&gt;1) 内核虚拟存储器，包括与进程相关的数据结构（页表，task_struct, mm_struct, 内核栈等），物理存储器，内核代码和数据&lt;br&gt;2) 用户栈                       —对应程序栈区&lt;br&gt;3) 共享库的存储器映射区域       —从系统中加载共享库的存储区&lt;br&gt;4) 运行时堆                     —对应程序堆区&lt;br&gt;5) 未初始化数据和已初始化数据   —从可执行文件中加载，对应静态区&lt;br&gt;6) 程序文件（代码）             —从可执行文件中加载，对应程序代码区&lt;/p&gt;
&lt;p&gt;其中这些区域中，最重要的，最常用到的就是堆区和栈区了，他们的区别如下：&lt;/p&gt;
&lt;p&gt;C++中堆和栈的区别：&lt;/p&gt;
&lt;p&gt;管理方面，需要自己分配/清除&lt;br&gt;空间大小方面，堆最大可达4G（32位），而栈大小有限制，一般8M&lt;br&gt;碎片方面：堆分配和回收一段时间后可能产生碎片，栈一定不会&lt;br&gt;生长方向：栈往低地址生长，堆往高地址生长&lt;br&gt;分配方式：栈可动态分配也可静态分配，堆只能动态分配&lt;br&gt;分配效率：栈是机器系统提供的数据结构，而堆是语言层提供的数据结构，效率不一样&lt;/p&gt;
&lt;p&gt;栈其实要比堆快，原因在于：&lt;/p&gt;
&lt;p&gt;1) 栈是本着LIFO原则的存储机制, 对栈数据的定位相对比较快速, 而堆则是随机分配的空间, 处理的数据比较多, 无论如何, 至少要两次定位.&lt;br&gt;2) 栈是由CPU提供指令支持的, 在指令的处理速度上, 对栈数据进行处理的速度自然要优于由操作系统支持的堆数据.&lt;br&gt;3) 栈是在一级缓存中做缓存的, 而堆则是在二级缓存中, 两者在硬件性能上差异巨大.&lt;br&gt;4) 各语言对栈的优化支持要优于对堆的支持, 比如swift语言中, 三个字及以内的struct结构, 可以在栈中内联, 从而达到更快的处理速度.&lt;/p&gt;
&lt;p&gt;内存的布局有了，那么怎么分配内存来存储程序中的数据结构呢？这就涉及到了 malloc/free 库函数和 new/delete 操作符。&lt;/p&gt;
&lt;p&gt;malloc/free 和 new/delete 区别如下：&lt;/p&gt;
&lt;p&gt;a) malloc/free是库函数，new/delete是操作符&lt;br&gt;b) malloc/free只分配内存，new/delete还负责构造/析构对象&lt;br&gt;c) malloc/free分配失败会返回NULL，new/delete分配失败会返回bad_alloc&lt;br&gt;d) new/delete分配可以自动计算需要的字节数，malloc/free需要人为指定&lt;/p&gt;
&lt;p&gt;另外一个比较重要的区域是静态区，C++的对象有三种：栈区对象，堆区对象和静态区对象，他们有什么异同呢？&lt;/p&gt;
&lt;p&gt;三种内存对象的比较：&lt;/p&gt;
&lt;p&gt;栈对象：&lt;br&gt;1.栈对象的优势是在适当的时候自动生成，又在适当的时候自动销毁，不需要程序员操心；&lt;br&gt;2.栈对象的创建速度一般较堆对象快。因为分配堆对象时，会调用operator new操作，operator new会采用某种内存空间搜索算法，而该搜索过程可能是很费时间的，产生栈对象则没有这么麻烦，它仅仅需要移动栈顶指针就可以了。&lt;br&gt;3.通常栈空间容量比较小，一般是1MB～2MB，所以体积比较大的对象不适合在栈中分配。&lt;br&gt;4.特别要注意递归函数中最好不要使用栈对象，因为随着递归调用深度的增加，所需的栈空间也会线性增加，当所需栈空间不够时，便会导致栈溢出，这样就会产生运行时错误。&lt;/p&gt;
&lt;p&gt;堆对象：&lt;br&gt;1.其产生时刻和销毁时刻都要程序员精确定义&lt;br&gt;2.相比于栈空间，堆的容量要大得多&lt;/p&gt;
&lt;p&gt;静态对象：&lt;br&gt;1.全局对象：全局对象为类间通信和函数间通信提供了一种最简单的方式&lt;br&gt;2.类的static成员：属于类，为所有类对象所共享&lt;br&gt;3.局部静态对象：主要可用于保存该对象所在函数被屡次调用期间的中间状态&lt;/p&gt;
&lt;p&gt;内存分配的时候，C/C++ 会注重内存对齐，比如说要求 struct, union, enum 等数据结构都要内存对齐。&lt;/p&gt;
&lt;p&gt;那么为什么要内存对齐呢？&lt;/p&gt;
&lt;p&gt;《Windows核心编程》里这样说：当CPU访问正确对齐的数据时，它的运行效率最高，当数据大小的数据模数的内存地址是0时，数据是对齐的。例如：WORD值应该是总是从被2除尽的地址开始，而DWORD值应该总是从被4除尽的地址开始，数据对齐不是内存结构的一部分，而是CPU结构的一部分。当CPU试图读取的数值没有正确的对齐时，CPU可以执行两种操作之一：产生一个异常条件；执行多次对齐的内存访问，以便读取完整的未对齐数据，若多次执行内存访问，应用程序的运行速度就会慢。&lt;/p&gt;
&lt;p&gt;内存对齐的原则：&lt;/p&gt;
&lt;p&gt;结构体的总大小，也就是sizeof的结果，必须是其内部最大成员的”最宽基本类型成员”的整数倍。不足的要补齐。(基本类型不包括struct/class/uinon)。&lt;br&gt;对于union：sizeof(union)，以结构里面size最大元素为union的size，因为在某一时刻，union只有一个成员真正存储于该地址。&lt;/p&gt;
&lt;p&gt;C++ 内存分配和解配中，很容易发生错误，常见的内存错误有：&lt;/p&gt;
&lt;p&gt;1、返回局部变量地址将引起内存错误&lt;/p&gt;
&lt;p&gt;2、临时空间过大：操作系统在加载某个应用程序时，都将为其分配一定大小的栈空间，若申请过大的局部变量，可能会引起栈溢出问题。（PC机上Windows和Linux系统一般不必担心这个，因为有虚拟内存机制，但嵌入式开发就要特别注意这个了——资源有限，一旦栈溢出造成程序错误又是很难查的~~~）&lt;/p&gt;
&lt;p&gt;3、src 和 dst 内存覆盖：在进行字节内存复制时，常会出现这一问题。因为部分系统库函数并没有提供内存覆盖的检测功能，从而导致错误。&lt;/p&gt;
&lt;p&gt;4、动态内存管理错误&lt;br&gt;动态申请的堆内存空间需要自己管理，这可能会导致：&lt;br&gt;a) 申请和释放不一致：由于C++兼容C，而C与C++的内存申请和释放方式不一样，因此在C++程序中，就有两套动态内存管理函数。正常应该是采用C方式申请就用C方式释放，用C++申请的就要用C++方式释放&lt;br&gt;b) 申请和释放量不匹配：申请了多少内存，在使用完成后就要释放多少。若果没有释放或者少释放了就是内存泄露，多释放了也会产生问题。(虽然程序退出后系统会回收堆空间，但严格的应该申请的堆空间要在程序中释放掉。&lt;/p&gt;
&lt;p&gt;5、内存泄漏&lt;br&gt;广义的说，内存泄漏不仅仅包含堆内存的泄漏，还包含系统资源的泄漏(resource leak)，比如核心态HANDLE，GDI Object，SOCKET， Interface等，这些由操作系统分配的对象也消耗内存，如果这些对象发生泄漏最终也会导致内存的泄漏。而且，某些对象消耗的是核心态内存，这些对象严重泄漏时会导致整个操作系统不稳定。所以相比之下，系统资源的泄漏比堆内存的泄漏更为严重。&lt;/p&gt;
&lt;p&gt;其中，最常见的应该属内存泄漏了吧，那么内存泄漏如何检测呢？&lt;/p&gt;
&lt;p&gt;检测内存泄漏的关键是要能截获住对分配内存和释放内存的函数的调用。截获住这两个函数，就能跟踪每一块内存的生命周期。比如，每当成功的分配一块内存后，就把它的指针加入一个全局的list中；每当释放一块内存，再把它的指针从list中删除。这样，当程序结束的时候，list中剩余的指针就是指向那些没有被释放的内存。&lt;/p&gt;
&lt;p&gt;常见内存泄漏的检测工具有：&lt;/p&gt;
&lt;p&gt;Linux下的检测工具：Mtrace、Memwatch、LeakTracer、Valgrind、tcmalloc&lt;br&gt;Windows下的检测工具：windbg工具、MS C-Runtime Library、BoundsChecker、Performance Monitor&lt;/p&gt;
&lt;p&gt;为了最大可能的降低内存泄漏的几率，C++提出了智能指针的解决方案。&lt;/p&gt;
&lt;p&gt;如何理解智能指针？&lt;/p&gt;
&lt;p&gt;裸指针容易造成内存泄漏（忘记释放）、二次释放、程序异常时的处理（参见问题20构造函数能够抛出异常）等问题，使用智能指针能更好的管理堆内存，智能指针也是RAII的一种应用，用于动态管理资源。利用对象离开作用域自动析构的特性，将释放内存的操作托管给一个对象。&lt;/p&gt;
&lt;p&gt;有几种常用的智能指针，shared_ptr, unique_ptr, weak_ptr。&lt;/p&gt;
&lt;p&gt;顾名思义，shared_ptr指向的对象是可以被共享的，只有再也不被指向的对象会被销毁，而unique_ptr指针不能被共享，只能改变指向，一旦改变，原对象会被销毁。&lt;/p&gt;
&lt;p&gt;而weak_ptr具有如下特征：&lt;br&gt;a) weak_ptr不能独立存在，只能从一个shared_ptr产生，其指向shared_ptr指向的内存，但并不拥有该内存，不改变引用计数。&lt;br&gt;b) weak_ptr通过lock()成员可以返回指向该内存的shared_ptr对象，如果已经无效则返回空&lt;br&gt;c) 使用weak_ptr是为了解决循环引用的问题，如果两个对象中都分别包含对对方的引用，则会产生循环引用，计数无法降为0，使用weak_ptr可以解决这个问题，因为其不会增加引用计数。&lt;/p&gt;
&lt;p&gt;智能指针内部会维护一个引用计数，即使用指向资源的智能指针个数，如果降到0，即不再有指针指向该对象，那么自动销毁该对象。&lt;/p&gt;
&lt;p&gt;引用计数基本思想：对被管理的资源进行引用计数，当一个shared_ptr对象要共享这个资源的时候，该资源的引用计数加1，当这个对象生命期结束的时候，再把该引用计数减少1。这样当最后一个引用它的对象被释放的时候，资源的引用计数减少到0，此时释放该资源。&lt;/p&gt;
&lt;p&gt;引用计数改变的情况：&lt;br&gt;作为函数参数：传值则引用计数加1，传引用则引用计数不变 3 作为函数返回值：如果返回值作为右值进行拷贝，则引用计数加1，否则不变&lt;/p&gt;
&lt;p&gt;还有一个有趣的问题：C++ 为什么不支持垃圾回收？&lt;/p&gt;
&lt;p&gt;C和C++中的垃圾收集都是困难的主题，原因如下：&lt;/p&gt;
&lt;p&gt;-2) C and C++ are languages that are created to support all possible use cases. 通用性&lt;/p&gt;
&lt;p&gt;-1）C++ 的哲学是”close to the metal”，不愿意加上一些性价比不高的features&lt;/p&gt;
&lt;p&gt;0）GC Stop-the-World 带来的性能延迟，有时是不可忍受的，尤其在实时应用中&lt;/p&gt;
&lt;p&gt;1）指针可以被转换为整数，反之亦然。 这意味着我可以有一个内存块只能通过一个整数，类型转换为指针，然后解除引用。 一个垃圾收集器必须小心，不要认为块是无法到达的，当它仍然可以达到。&lt;br&gt;GC 必须能够准确识别指针和非指针。&lt;/p&gt;
&lt;p&gt;2）指针不是不透明的。 许多垃圾收集器，如停止和复制收集器，喜欢移动内存块或压缩它们以节省空间。 由于您可以明确地查看C和C++中的指针值，因此难以正确实现。 您必须确定，如果某人正在使用类似于整数的方式进行一些棘手的操作，那么如果您移动了一块内存，则正确更新了整数。&lt;/p&gt;
&lt;p&gt;3）内存管理可以明确完成。任何垃圾收集器都需要考虑到用户可以随时显式释放内存块。&lt;/p&gt;
&lt;p&gt;4）在C++中，分配/取消分配和对象构造/销毁是分开的。 一块内存可以分配足够的空间来容纳一个对象，而不需要在那里实际构造任何对象。 一个好的垃圾回收器在回收内存时需要知道是否调用可能在那里分配的任何对象的析构函数。 对于标准库容器尤其如此，因为出于效率原因，通常使用std::allocator来使用这个技巧。&lt;/p&gt;
&lt;p&gt;5）内存可以从不同的地方分配。 C和C++可以通过内置的freestore（malloc / free或new / delete），也可以通过mmap或其他系统调用从OS获得内存，对于C++，可以从&lt;code&gt;get_temporary_buffer&lt;/code&gt;或&lt;code&gt;return_temporary_buffer&lt;/code&gt;获得内存。 程序也可能从一些第三方库中获取内存。 一个好的垃圾收集器需要能够跟踪对这些其他池中的内存的引用，并且（可能）必须负责清理它们。&lt;/p&gt;
&lt;p&gt;6）指针可以指向对象或数组的中间。 在像Java这样的垃圾收集语言中，对象引用总是指向对象的开始。 在C和C++中，指针可以指向数组的中间，而在C++中指向对象的中间（如果使用多重继承的话）。 这可能会使检测仍然可达的逻辑复杂化。&lt;/p&gt;
&lt;p&gt;所以，简而言之，为C或C++构建一个垃圾收集器是非常困难的。 大多数使用C和C++进行垃圾回收的库在方法上都非常保守，在技术上是不健全的 - 例如，他们认为你不会拿一个指针，把它转换为一个整数，写入磁盘，然后加载它稍后再回来。 他们还假定内存中任何一个指针大小的值都可能是一个指针，所以有时候会拒绝释放无法访问的内存，因为有一个指向它的非零的机会。&lt;/p&gt;
&lt;p&gt;正如其他人所指出的那样， Boehm GC确实为C和C++做垃圾回收，但受上述限制。&lt;/p&gt;
&lt;p&gt;有趣的是，C++ 11包含了一些新的库函数，允许程序员在未来的垃圾收集工作中将内存区域标记为可达和不可达。 将来有可能用这种信息构建一个非常好的C++ 11垃圾收集器。 与此同时，你需要非常小心，不要违反上述规定。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文谈谈C++的内存分配与管理，主要包括内存布局，分配，管理，解配，以及内存错误和防范措施。&lt;br&gt;漫谈漫谈，想到什么谈什么，不要在意前后衔接。&lt;/p&gt;
&lt;p&gt;首先要了解程序占用的内存布局，顺便可以了解下对应的操作系统上的真实存储布局。&lt;/p&gt;
&lt;p&gt;通常一个由 C/C++
    
    </summary>
    
      <category term="编程语言 | Program Lang." scheme="http://whatbeg.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80-Program-Lang/"/>
    
    
      <category term="C++" scheme="http://whatbeg.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>《软技能》读书笔记</title>
    <link href="http://whatbeg.com/2019/01/04/softskills.html"/>
    <id>http://whatbeg.com/2019/01/04/softskills.html</id>
    <published>2019-01-04T03:54:18.000Z</published>
    <updated>2019-01-04T03:55:38.854Z</updated>
    
    <content type="html">&lt;p&gt;偶然的机会，得阅《软技能》一书。&lt;/p&gt;
&lt;p&gt;这本书蛮神奇，对于程序员这个职业代码之外的许多个方面结合作者的经验做了讲述。&lt;/p&gt;
&lt;p&gt;涵盖主题从工作效率，工作方法，到博客，演讲，学习方法到健身，理财，营养学等多个方面，非常广泛，给人启发，愚以为软件从业人员值得一读。&lt;/p&gt;
&lt;p&gt;其中有几点对我个人比较有启发，在这里分享一下。&lt;/p&gt;
&lt;h3 id=&quot;跨越墙的能力&quot;&gt;&lt;a href=&quot;#跨越墙的能力&quot; class=&quot;headerlink&quot; title=&quot;跨越墙的能力&quot;&gt;&lt;/a&gt;跨越墙的能力&lt;/h3&gt;&lt;p&gt;有时候我们学东西，或者做事，会遇到一些瓶颈，会遇到失去兴趣的时候。&lt;/p&gt;
&lt;p&gt;失去兴趣是人的本性所致，刚接触一样新东西时，人的大脑总是会特别兴奋，待到持续的做了一段时间后，会有一个倦怠，失去兴趣的时候。这也解释了，为什么很多人都是三分钟热度，某件事听着好玩，开始前常常信誓旦旦说要在这个领域达到一个什么样的效果，然后尝试了一段时间后，就抛诸脑后了（我也常如此哈哈。&lt;/p&gt;
&lt;p&gt;而遇到瓶颈也是常有的事，因为人学习能力比较强，初学基本知识很容易学会了，但是要进一步往上升，将自己的技能，思维提高一个层次，却常常不知如何下手，导致卡在一个瓶颈，仍只能处理所在层次的简单问题，无法解决更复杂的问题。&lt;/p&gt;
&lt;p&gt;这个时候，作者的建议很简单粗暴，就是硬着头皮继续做下去。学不下去，强迫自己养成习惯去做。有瓶颈，寻找更难的问题，逃离舒适区，强行去做。这必然有一段痛苦的时间，等到熬过去，穿越了这堵“墙”，你会发现，很容易有正循环建立起来，你的水平会提高，然后也会感觉对这件事更有兴趣了，也会感到瓶颈其实也没那么可怕。&lt;/p&gt;
&lt;p&gt;当然这也不是绝对的，人各有其天赋，有的人终其一生也跨不过一些墙，所以有时也需要对自己有更清楚的认识。&lt;/p&gt;
&lt;p&gt;一切都在穿墙之后。&lt;/p&gt;
&lt;h3 id=&quot;潜意识的重要作用&quot;&gt;&lt;a href=&quot;#潜意识的重要作用&quot; class=&quot;headerlink&quot; title=&quot;潜意识的重要作用&quot;&gt;&lt;/a&gt;潜意识的重要作用&lt;/h3&gt;&lt;p&gt;给自己积极的暗示，想想自己所追求的事情达到以后的美好，建立积极的潜意识，常常会使得事情容易一些。&lt;/p&gt;
&lt;p&gt;听过一句话，如果你想让一个人做一件事，最好的办法就是让他自己想做。&lt;/p&gt;
&lt;p&gt;放到自己身上，如果想让自己去做好一件事，最好的办法是否就是建立潜意识让自己的潜意识自己想做？&lt;/p&gt;
&lt;h3 id=&quot;像经营企业一样经营自己&quot;&gt;&lt;a href=&quot;#像经营企业一样经营自己&quot; class=&quot;headerlink&quot; title=&quot;像经营企业一样经营自己&quot;&gt;&lt;/a&gt;像经营企业一样经营自己&lt;/h3&gt;&lt;p&gt;作者提到，作为一个程序员，有时候需要悉心经营自己。&lt;/p&gt;
&lt;p&gt;我想，其实不同行业都一样，其实都可以更好地经营自己。&lt;/p&gt;
&lt;p&gt;作者提到，作为IT从业者，可以通过博客，演讲，授课等等各种方式来提高自己的知名度，建立自身品牌。&lt;/p&gt;
&lt;p&gt;同时可以应用企业经营的许多方法来经营自己，比如最根本的，企业需要为客户提供价值。&lt;/p&gt;
&lt;p&gt;其实想要赢得声誉或者是财富，都需要为他人能够带来价值。&lt;/p&gt;
&lt;h3 id=&quot;目标的重要性&quot;&gt;&lt;a href=&quot;#目标的重要性&quot; class=&quot;headerlink&quot; title=&quot;目标的重要性&quot;&gt;&lt;/a&gt;目标的重要性&lt;/h3&gt;&lt;p&gt;应该以目标为导向而不是以工作量为导向。&lt;/p&gt;
&lt;p&gt;衡量自己进步的标识，应该也是以达到多少个目标，目标给自己或别人带来的影响大小等来衡量。而非自己干了多少活，或者看了多少书…来衡量的。&lt;/p&gt;
&lt;h3 id=&quot;战略，理念的重要性&quot;&gt;&lt;a href=&quot;#战略，理念的重要性&quot; class=&quot;headerlink&quot; title=&quot;战略，理念的重要性&quot;&gt;&lt;/a&gt;战略，理念的重要性&lt;/h3&gt;&lt;p&gt;这点同样对各行各业的人都有普世的意义。&lt;/p&gt;
&lt;p&gt;不仅要脚踏实地，也要抬头看天。&lt;/p&gt;
&lt;p&gt;如果走错了方向，再多的脚踏实地，勤劳奋斗，可能都是南辕北辙。&lt;/p&gt;
&lt;p&gt;作为一个人，跟作为企业其实差不多，都需要一个战略，或者说理念。&lt;/p&gt;
&lt;p&gt;这个战略和理念又涉及到人生观和价值观，指的是你给自己的发展定下什么样的长远战略规划？你的一生要完成什么事业？你坚持的铁律是什么？哪些是你想要的？哪些是你有的？哪些是你需要放弃的？&lt;/p&gt;
&lt;p&gt;想清楚了这些，内心才有一根定海神针，获得坚定而自信。&lt;/p&gt;
&lt;p&gt;别小瞧了这两点，自己不坚定和自信，别人怎么坚定地相信你呢？&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;偶然的机会，得阅《软技能》一书。&lt;/p&gt;
&lt;p&gt;这本书蛮神奇，对于程序员这个职业代码之外的许多个方面结合作者的经验做了讲述。&lt;/p&gt;
&lt;p&gt;涵盖主题从工作效率，工作方法，到博客，演讲，学习方法到健身，理财，营养学等多个方面，非常广泛，给人启发，愚以为软件从业人员值得一读。&lt;
    
    </summary>
    
      <category term="读书 | Reading" scheme="http://whatbeg.com/categories/%E8%AF%BB%E4%B9%A6-Reading/"/>
    
    
      <category term="读书" scheme="http://whatbeg.com/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>算法拾珠（二）</title>
    <link href="http://whatbeg.com/2019/01/04/algorithmpearls.html"/>
    <id>http://whatbeg.com/2019/01/04/algorithmpearls.html</id>
    <published>2019-01-04T03:54:06.000Z</published>
    <updated>2019-01-04T04:16:25.124Z</updated>
    
    <content type="html">&lt;p&gt;不知怎么的把算法拾珠（一）发到公众号上去了，底稿也删了，所以算法拾珠（一）只能见公众号文章了。&lt;/p&gt;
&lt;p&gt;本文记录了三种算法问题的基本问题和一系列扩展问题（followup），可供深入理解这几类问题的解法。&lt;/p&gt;
&lt;p&gt;这三类问题包括：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;X sum问题：一个序列中取X个数字，使它们的和凑成定值。&lt;br&gt;股票买卖问题：一段连续天数，股票有价格可以买卖，问最大获利。&lt;br&gt;链表环问题：链表有环的条件，检测和分析。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;X-sum-问题&quot;&gt;&lt;a href=&quot;#X-sum-问题&quot; class=&quot;headerlink&quot; title=&quot;X sum 问题&quot;&gt;&lt;/a&gt;X sum 问题&lt;/h2&gt;&lt;p&gt;1) Two Sum, LeetCode #1&lt;/p&gt;
&lt;p&gt;我当初的解法：排序，二分法&lt;br&gt;最优解法：一边遍历，一边插入、查询hashmap，O(n)复杂度，O(n)空间&lt;/p&gt;
&lt;p&gt;2) 3Sum, LeetCode #15&lt;/p&gt;
&lt;p&gt;我的解法：排序，从左到右枚举，然后用双指针往中间移动&lt;br&gt;最优解法：目前看到的最优解法如上，O(n^2logn)时间，O(1)空间&lt;/p&gt;
&lt;p&gt;3) 3Sum Cloest, LeetCode #16&lt;/p&gt;
&lt;p&gt;解法：类似3Sum那样去找，只是每次记录一下与target的差距，最后取一个最小值。O(n2logn)时间，O(1)空间&lt;/p&gt;
&lt;p&gt;4) 4Sum, LeetCode #18&lt;/p&gt;
&lt;p&gt;解法: 还是双指针的思想，只不过比3Sum多一层而已。O(n^3)时间，O(1)空间&lt;/p&gt;
&lt;p&gt;*5) 4Sum II, LeetCode #454&lt;/p&gt;
&lt;p&gt;解法：首先A,B,C,D都排序，枚举A，B的元素，然后还是双指针的思想，一个指针在C从左往右，一个指针在D从右往左。&lt;br&gt;这题比较偏了，不属于常规kSum，不做重点考虑。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由此可得，k-Sum问题当k==2时可以用hashmap的额外空间以O(n)的复杂度解决。而当k&amp;gt;2时可以用递归以及双指针法来解决。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// kSum通用代码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;void&lt;/span&gt; kSum(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; vector&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;amp; nums, &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; k, &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; target, &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;, vector&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;amp; cur, vector&amp;lt;vector&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt; &amp;gt;&amp;amp; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (k &amp;lt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (k == &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; l = &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt;, r = &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (l &amp;lt; r) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nums[l] + nums[r] == target) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    vector&amp;lt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;&amp;gt; tmp(cur);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    tmp.push_back(nums[l]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    tmp.push_back(nums[r]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;.push_back(tmp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (l &amp;lt; r &amp;amp;&amp;amp; nums[l] == nums[l+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]) l++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (l &amp;lt; r &amp;amp;&amp;amp; nums[r] == nums[r-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]) r--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    l++, r--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nums[l] + nums[r] &amp;gt; target)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    r--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    l++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt;;i&amp;lt;=&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;-k+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;gt; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &amp;amp;&amp;amp; nums[i] == nums[i-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]) &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                cur.push_back(nums[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                kSum(nums, k-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, target-nums[i], i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;, cur, &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                cur.pop_back();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;股票买卖问题&quot;&gt;&lt;a href=&quot;#股票买卖问题&quot; class=&quot;headerlink&quot; title=&quot;股票买卖问题&quot;&gt;&lt;/a&gt;股票买卖问题&lt;/h2&gt;&lt;p&gt;给定n天的股票价格数据，n天内，买卖股票一次或多次，获得最大收益。&lt;/p&gt;
&lt;p&gt;1) Best Time to Buy and Sell Stock, LeetCode #121&lt;/p&gt;
&lt;p&gt;要求买卖一次股票，获得最大收益。&lt;br&gt;解法：贪心，即可，可以把股价看做折线图，只能买卖一次，所以我们只需找最低的波谷和最高的波峰，相减即得。当然要保证波峰在波谷之后。&lt;br&gt;具体的，从左往右扫描，维护当前最小值，每次用当天的股价减去目前最小股价（保证波峰在波谷之后），求得一个max值，即为答案。&lt;br&gt;复杂度O(n), O(1)，已经最优了。&lt;/p&gt;
&lt;p&gt;2) Best Time to Buy and Sell Stock II, LeetCode #122&lt;/p&gt;
&lt;p&gt;可以买卖任意次，获得最大收益。&lt;br&gt;解法：还是把股价波动看成折线图，既然可以无线买，那么我们肯定是贪心地，每个上升斜坡的钱都要挣到。&lt;br&gt;所以，具体的，只要price[i] &amp;gt; price[i+1]，一定可以挣这份钱。最大收益就是这样的钱的累加。&lt;br&gt;复杂度O(n), O(1)，也是最优。&lt;/p&gt;
&lt;p&gt;3) Best Time to Buy and Sell Stock III, LeetCode #123&lt;/p&gt;
&lt;p&gt;至多买卖两次。&lt;br&gt;我的解法：类似前面的思路，无非是要找最多两个不重叠的波谷-波峰对，我们枚举分界点，求出分界点左边的最优波谷-波峰和右边的最优波谷-波峰，相加为答案。&lt;br&gt;具体的，用O(n)的空间存储前缀的最优波谷-波峰，同样用O(n)的空间存储后缀的最优波谷-波峰，最后枚举分界点，两个利润一相加为答案。&lt;br&gt;此解法复杂度为O(n), O(n)，需要一定空间来存储。&lt;/p&gt;
&lt;p&gt;更优解法：&lt;br&gt;动态规划的思想。&lt;br&gt;每天只可能是种状态之一：持有第一支，卖出第一支，持有第二支，卖出第二支。&lt;br&gt;dp[i][state]表示到第i天，状态为state所获的最大收益。&lt;br&gt;则&lt;br&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dp[&lt;span class=&quot;string&quot;&gt;i&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;sell2&lt;/span&gt;] = max(dp[&lt;span class=&quot;string&quot;&gt;i-1&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;sell2&lt;/span&gt;], dp[&lt;span class=&quot;string&quot;&gt;i-1&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;hold2&lt;/span&gt;]+i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dp[&lt;span class=&quot;string&quot;&gt;i&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;hold2&lt;/span&gt;] = max(dp[&lt;span class=&quot;string&quot;&gt;i-1&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;hold2&lt;/span&gt;], dp[&lt;span class=&quot;string&quot;&gt;i-1&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;sell1&lt;/span&gt;]-i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dp[&lt;span class=&quot;string&quot;&gt;i&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;sell1&lt;/span&gt;] = max(dp[&lt;span class=&quot;string&quot;&gt;i-1&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;sell1&lt;/span&gt;], dp[&lt;span class=&quot;string&quot;&gt;i-1&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;hold1&lt;/span&gt;]+i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dp[&lt;span class=&quot;string&quot;&gt;i&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;hold1&lt;/span&gt;] = max(dp[&lt;span class=&quot;string&quot;&gt;i-1&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;hold1&lt;/span&gt;], 0-i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return dp[&lt;span class=&quot;string&quot;&gt;n&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;sell2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;由于dp[i][states]只与dp[i-1][states]有关，所以可以直接用一个变量表示每种状态，所以可以做到O(n), O(1)。&lt;/p&gt;
&lt;p&gt;4) Best Time to Buy and Sell Stock IV, LeetCode #188&lt;/p&gt;
&lt;p&gt;至多买卖k次。&lt;br&gt;类似上题的思想，动态规划法，只是4种状态变成2k种状态而已。&lt;br&gt;dp[i][k][h]表示到第i天，目前操作股票（持有/卖出）是第k支，操作状态为h（h=0:持有，h=1:卖出）。&lt;br&gt;则有如下转移方程：&lt;br&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dp[&lt;span class=&quot;string&quot;&gt;i&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;k&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;1&lt;/span&gt;] = max(dp[&lt;span class=&quot;string&quot;&gt;i-1&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;k&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;1&lt;/span&gt;], dp[&lt;span class=&quot;string&quot;&gt;i-1&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;k&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;0&lt;/span&gt;]+prices[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dp[&lt;span class=&quot;string&quot;&gt;i&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;k&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;0&lt;/span&gt;] = max(dp[&lt;span class=&quot;string&quot;&gt;i-1&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;k&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;0&lt;/span&gt;], dp[&lt;span class=&quot;string&quot;&gt;i-1&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;k-1&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;1&lt;/span&gt;]-prices[i]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;同样，由于第一维(i)只与i-1有关，所以该存储也可省去。&lt;br&gt;复杂度O(kn)，空间O(k)。&lt;br&gt;这题要注意的是，当k&amp;gt;=n/2时，实际上等价于没有次数限制的情况。对应题(2)。&lt;/p&gt;
&lt;p&gt;3) Best Time to Buy and Sell Stock with Cooldown, LeetCode #309&lt;/p&gt;
&lt;p&gt;可以无限次买卖，但是每次卖出后都需要隔一天才能再次买入。&lt;/p&gt;
&lt;p&gt;解法：&lt;br&gt;动态规划求解，由于不限买卖次数，只是需要隔一天。&lt;br&gt;我们令每天只有两种状态：持有(hold)，套现(cash)，其中持有包括不买卖和买入。&lt;br&gt;cash[i]表示第i天，最大现金流，有两个子问题：一是之前就已经套现，而是之前持有，今天套现。去这两者的最大值为今天最大现金流。持有类似。&lt;br&gt;那么有如下方程：&lt;br&gt;&lt;figure class=&quot;highlight gcode&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 套现取 |之前套现| 与 |之前持有，今天套现| 二者的最大值，后者要减去一定的手续费。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cash[i] = max&lt;span class=&quot;comment&quot;&gt;(cash[i-1], hold[i-1]+prices[i]-fee)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 持有取 |之前持有| 与 |前天及之前套现，今天买入| 二者的最大值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hold[i] = max&lt;span class=&quot;comment&quot;&gt;(hold[i-1], cash[i-2]-prices[i])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;4) Best Time to Buy and Sell Stock with Transaction Fee, LeetCode #714&lt;/p&gt;
&lt;p&gt;可以无限次买卖，但是每次卖出操作都有手续费fee，求最大收益。&lt;/p&gt;
&lt;p&gt;解法：&lt;br&gt;动态规划求解，由于不像限制买卖次数的题，我们不能去照样维护一个dp[k][2]，因为不知道k是多少，我们也无需考虑这次买卖是第几支，因为不限制随便买。&lt;br&gt;当然，也可以令k为n/2，但此时我们用另一种方法求解。&lt;br&gt;我们令每天只有两种状态：持有(hold)，套现(cash)，其中持有包括不买卖和买入。&lt;br&gt;那么有如下方程：&lt;br&gt;&lt;figure class=&quot;highlight gcode&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 套现取 |之前套现| 与 |之前持有，今天套现| 二者的最大值，后者要减去一定的手续费。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cash[i] = max&lt;span class=&quot;comment&quot;&gt;(cash[i-1], hold[i-1]+prices[i]-fee)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 持有取 |之前持有| 与 |之前套现，今天买入| 二者的最大值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hold[i] = max&lt;span class=&quot;comment&quot;&gt;(hold[i-1], cash[i-1]-prices[i])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;总而言之，解决股票类问题，如果简单的话，可以直接贪心思想来做，当然该贪心方法也是动态规划的特例。 如果稍微复杂一点，那么可以用动态规划来做。 只要把握好每天的状态，就好定制状态转移方程了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;链表环问题&quot;&gt;&lt;a href=&quot;#链表环问题&quot; class=&quot;headerlink&quot; title=&quot;链表环问题&quot;&gt;&lt;/a&gt;链表环问题&lt;/h2&gt;&lt;p&gt;链表环问题是比较常问的一类问题。我们系统梳理一下。&lt;/p&gt;
&lt;p&gt;1) 判断单链表是否有环&lt;/p&gt;
&lt;p&gt;解法：解法已经烂大街了，设置两个指针p1, p2，一个每次走一步，一个每次走两步，最后如果 p1 == p2，说明有环，如果其中一个为NULL，则没有环。&lt;/p&gt;
&lt;p&gt;2) 证明这样做的正确性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果没有环，走得快的那个一定会率先走到NULL，结束。&lt;/li&gt;
&lt;li&gt;如果有环，那么需证明，p1, p2 一定会相遇，从而得出有环的结论。&lt;br&gt;考虑 p1, p2 的距离，因为如果有环，最后 p1, p2 都会进入环，如果进入环的时候他们的距离为d，由于 p2 比 p1 快一步，所以他们的距离每次都会缩短1，所以他们的距离会呈现 d,d-1,d-2,…1,0 这样的趋势，最终距离为 0，相等判环。&lt;br&gt;且由于d &amp;lt; r（环长），所以，相遇的时候，p1绝对还没有绕环一圈。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3) 求有环单链表的环长&lt;/p&gt;
&lt;p&gt;解法：我们走到相遇点以后，从相遇点出发，一直走，总会走回到相遇点，这时走的步数就是环长。&lt;br&gt;另一种比较绕的思路：从相遇点开始 p1 和 p2 继续按照原来的方式向前走，直到二者再次相遇，此时经过的步数就是环上节点的个数。&lt;br&gt;因为 p1 == p2，可以看成他们初始距离为r（环长），此后每步初始距离减1，减到0，走的步数就是环长。&lt;/p&gt;
&lt;p&gt;4) 如果存在环，找出环的入口点&lt;/p&gt;
&lt;p&gt;假设链表总长为 L，head 到入口节点距离为 a，入口节点到相遇点距离为x，则环长 $r = L - a$&lt;br&gt;假设当 p1, p2 第一次相遇时，p1 走了 s 步，则 p2 走了 2s 步。即 $s = a+x$。&lt;br&gt;由于此时相遇，则有 $s + nr = 2s, n \ge 1$。&lt;br&gt;则有 $nr = a+x$，$a = nr - x = (n-1)r + r - x = (n-1)r + L - a - x$。&lt;br&gt;也就是说，我们从起点 head 走到入口节点，和从相遇点走 0 圈或多圈到达入口节点的距离是一样的。&lt;br&gt;所以，一个指针 p3 从 head 出发，一个 p4 从相遇点出发，p3==p4 时，到达入口节点。&lt;/p&gt;
&lt;p&gt;5) 求有环单链表的链表长&lt;/p&gt;
&lt;p&gt;入口节点知道了，则距离 a 知道了，环长 r 也知道了，所以 a + r = L。&lt;/p&gt;
&lt;p&gt;6) 如果存在环，求出环上距离任意一个节点最远的点（对面节点）&lt;/p&gt;
&lt;p&gt;其实这题相当于求链表的中间点，仍可以用一快一慢双指针解决。一个走一步，一个走两步。&lt;/p&gt;
&lt;p&gt;7) 为什么快慢指针步长为2，为3, 4, 5…行不行？&lt;/p&gt;
&lt;p&gt;可以。下面证明在有环链表中，步长$k=3,4,5…$的时候依然存在一个相遇点，检测出环。&lt;br&gt;即要证明存在 s, $X_s == X_{2s}$。&lt;br&gt;设 s 是第一个大于 a 的且是 r 的倍数的数。且 $X_{2s}$ 可被看做 s 多走了 $(k-1)s$ 步到达的地点。&lt;br&gt;即 $X_{2s} = X_s + ((k-1)s \% r)$，又 s 是 r 的倍数，所以后项等于 0。所以有 $X_s == X_{2s}$。&lt;br&gt;所以无论对于多大的 k (k &amp;gt; 1)，都存在一个 s，使得两指针相遇，判断出环。&lt;/p&gt;
&lt;p&gt;8) 步长改成3会不会变快？不能，为什么？相遇所经过的步数与环和步长有什么关系？&lt;/p&gt;
&lt;p&gt;仍然设 head 到相遇点距离为 s，设步长为 k，则有 $s + nr = ks$。&lt;br&gt;即有：$nr = (k-1)s \to s = nr / (k-1)$。&lt;br&gt;这就是相遇所经过的步数与环和步长的关系。&lt;br&gt;那么 $s = nr / (k-1)$，最好的情况是，$s = r$ 即 $n / (k-1) = 1 \to k = n+1$。&lt;br&gt;又因为，$n \ge 1$，因为快指针至少比慢指针多走一圈（不绕一圈无法相遇）。&lt;br&gt;所以 $k &amp;gt;= 2$，由于快指针走得复杂度是 $O(nk)$，所以 k 越小越好，为 2 最佳。慢指针复杂度是 $O(n)$。&lt;/p&gt;
&lt;p&gt;9) 会不会在多点相遇？&lt;/p&gt;
&lt;p&gt;会，但是考虑这个无意义了，因为只要相遇，环已经检测出来了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;总的来说，遇到链表环问题，基本上用双指针来做，快的指针步长为2是有道理的，能够使得相遇前快指针走的步数最少，也即时间复杂度最小。当然，任意的k&amp;gt;1都能够作为快指针的步长。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/5130246/why-increase-pointer-by-two-while-finding-loop-in-linked-list-why-not-3-4-5&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Why increase pointer by two while finding loop in linked list, why not 3,4,5?
&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;不知怎么的把算法拾珠（一）发到公众号上去了，底稿也删了，所以算法拾珠（一）只能见公众号文章了。&lt;/p&gt;
&lt;p&gt;本文记录了三种算法问题的基本问题和一系列扩展问题（followup），可供深入理解这几类问题的解法。&lt;/p&gt;
&lt;p&gt;这三类问题包括：&lt;/p&gt;
&lt;blockquote
    
    </summary>
    
      <category term="算法 | Algorithm" scheme="http://whatbeg.com/categories/%E7%AE%97%E6%B3%95-Algorithm/"/>
    
    
      <category term="算法" scheme="http://whatbeg.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>2019，再出发</title>
    <link href="http://whatbeg.com/2019/01/04/annualsummary2018.html"/>
    <id>http://whatbeg.com/2019/01/04/annualsummary2018.html</id>
    <published>2019-01-04T03:53:54.000Z</published>
    <updated>2019-01-05T05:15:02.811Z</updated>
    
    <content type="html">&lt;p&gt;2019 年元旦是在旅行中度过的，这次行程之一是回到成都的母校。&lt;/p&gt;
&lt;p&gt;母校有一些变化，但变化不大，外边加了一座天桥，南门正准备修地铁，以后出行应该会更方便了。最惨的是，作为一名“校外人士”，想买东西，发现支付宝微信一概不能用，只能刷卡。&lt;/p&gt;
&lt;p&gt;旅行完毕，是时候该对过去的一年做一个整理和总结了，对来年也需要定一个目标和规划。就像一个船长，需要定期检查船体和功能，需要根据海上的情况及时做出反应，调整航向。&lt;/p&gt;
&lt;p&gt;这一年，到了确定就业去向的一年，近 20 年读书生涯也即将告罄，究竟会去到哪里开始自己的职业生涯，开始自己的为生存，生活所奋斗呢？这个问题我上半年也一直在纠结。&lt;/p&gt;
&lt;p&gt;工作方面，项目，论文，都要抓起来，事务繁多，但是也在尽力的协调，尽量更合理的安排时间，逐渐形成目标导向，去粗取精式的工作方式。&lt;/p&gt;
&lt;p&gt;其次最深刻的感觉是，这几年每一年的思维都会有所成长。不过也能理解，20 多岁的年纪，正是思维最为活跃的年纪，也是三观逐渐成型的年纪，自然会有很多新的体悟。这个年纪也是人生中创造力，精力都最旺盛的几年，当然希望自己好好把握，不要浪费。&lt;/p&gt;
&lt;h2 id=&quot;学习工作篇&quot;&gt;&lt;a href=&quot;#学习工作篇&quot; class=&quot;headerlink&quot; title=&quot;学习工作篇&quot;&gt;&lt;/a&gt;学习工作篇&lt;/h2&gt;&lt;p&gt;今年学习工作方面主要分为几块时间：&lt;br&gt;3-8 月：ForestLayer 研究，实验和论文写作&lt;br&gt;8-10 月：找工作&lt;br&gt;10-12 月：横向项目，论文修改&lt;/p&gt;
&lt;p&gt;回过头来才发现，原来 ForestLayer 论文整了这么长的时间，其实把整个工作的脉络捋下来，感觉根本用不了那么长的时间。&lt;br&gt;这里需要反省的是，自己在一些实验设计上犯了惰于思考的错误，常常犯错误或者实验设计有问题，所以需要重跑实验，同时以为反正机器够用，就一直跑即可。殊不知，如果花更多时间去思考实验不顺利背后的原因，花时间去设计完善的实验，仔细检查各种条件，可能不会有这么多的返工，整个工作也会更高效一些。&lt;/p&gt;
&lt;p&gt;这里后来有感而发写就了一篇文章《警惕虚假的忙碌》，可见博客首页公众号。&lt;/p&gt;
&lt;p&gt;除了实验设计，论文的写作和修改也花了一大部分时间。开始是由我写一稿，我吭哧吭哧写完以后被师兄喷了个狗血淋头：前后逻辑不通，叙述过于细节没有分清主次，用词不准，描述不清…后面师兄帮忙一句一句的抠，前后抠了近两个多月，基本上算是师兄全部重写了一遍。之所以犯这些错误，其根本原因在于没有把握学术论文的本质，学术论文其实是一个填补知识差的过程，你把自己的发现告诉别人，填补这个知识差，如果你的发现够好够有意义，总有一天别人会认可。&lt;br&gt;这个填补的过程就需要注意方式方法：比如逻辑要通顺，便于理解，用词准确且严谨，短短的篇幅无需涉及大量细节，等等。&lt;/p&gt;
&lt;p&gt;这部分也总结了一些学术论文写作中自己犯过的一些错误，可见公众号文章《学术论文写作》。&lt;/p&gt;
&lt;p&gt;找工作的时候，一开始的时候整个人还是比较焦虑的，生怕因为面试发挥不佳或者运气不好而不能进入到心仪的公司。&lt;/p&gt;
&lt;p&gt;不过最后自己运气也是一如既往的好，虽然自我感觉面试得并非很好，但是居然拿到了心仪的 offer。可能是专业匹配的缘故或是其他原因吧。&lt;/p&gt;
&lt;p&gt;除了最心仪的这家，还面了其他几家，因为不知道自己在对方那里评价如何，陆续也拿到了几个 offer，最后综合了一下平台，成长性和未来的发展，还是选择了这家。&lt;/p&gt;
&lt;p&gt;总结一下就是，专业匹配加上准备充分的话其实大概率没问题。&lt;br&gt;如果不匹配，但是准备充分的话也没大问题。&lt;br&gt;如果匹配，但是准备不充分，那么可能性会降低。&lt;br&gt;如果既不匹配也准备得不充分，那么大概率凉。&lt;/p&gt;
&lt;p&gt;关于找工作的心得一直想找个机会写篇文章，但是还没来得及，这个可以列入 2019 年计划当中。&lt;/p&gt;
&lt;p&gt;由于横向项目的关系，也会遇到一些业界的人士过来交流的机会。了解到如今机器学习，深度学习的火热，带动了众多的公司开始采用机器学习方法。虽说深度学习像一把尖刀，但是有很多公司的业务却并不符合深度学习的模式，比如非图像，语音，文本数据。而且这类业务的需求也并不小。既然深度学习不适用，那么只能使用传统机器学习算法，在这个过程中，就会遇到很多特征工程的问题，以及复杂异构数据源的特征提取问题（在去年年终总结的未来篇有提到）。有时候往往特征工程还是比较重要的一环，直接影响模型性能的上限。同时，业界也在寻求 AutoML 的帮助，希望能够自动地提取特征，或者改善模型。&lt;/p&gt;
&lt;p&gt;原来模型是想自动化学习规律，如今 AutoML 是想自动化模型的选择，自动化上加了一层自动化。相信在 2019 年 AutoML 应该会逐步放出光彩。不出意外，未来我会写一篇总结 AutoML 的文章，抛砖引玉，发表一些浅见。&lt;/p&gt;
&lt;h2 id=&quot;读书与写作&quot;&gt;&lt;a href=&quot;#读书与写作&quot; class=&quot;headerlink&quot; title=&quot;读书与写作&quot;&gt;&lt;/a&gt;读书与写作&lt;/h2&gt;&lt;p&gt;今年的读书量并不算多，17 本，虽说相比 2017 年增加了 7 本，但是其实还是不够。&lt;/p&gt;
&lt;p&gt;最近几个月一个明显感悟就是，读书并不一定要一字一句读完才叫读书，那样的读书更像是一种任务型读书，花费了很多时间，收效却并不明显。这里其实涉及到了一个哲学问题，就是需要分清主要矛盾和次要矛盾，不要眉毛胡子一把抓。所以在 2019 年，我决定要把自己的阅读方式优化一下，从原来的接近任务型的读书法优化成目标型的高效读书法。甚至构建一个读书系统（这点后面说），然后不断去优化和迭代这个系统，而不是拿一本，啃完，再下一本这样弱目的性地读书了。这些思考启发自辉哥（辉哥奇谭）。&lt;/p&gt;
&lt;p&gt;今年的读书清单中主要包括技术类的书籍和商业金融理财类的书籍，历史和文学读的很少。&lt;br&gt;技术书籍主要包括 C++ 系的书籍，以及 CSAPP，其中 CSAPP 堪称神作，对计算机底层原理进行了鞭辟入里的讲解，适合常读。&lt;br&gt;商业金融理财类中印象比较深的包括《穷查理宝典》，《富爸爸穷爸爸》和《见识》。这几本书的共同之处在于，都鼓励人们去提高自己的思维层次（或者说见识），不管是理财相关的或是普世生活相关的。人与人之间的根本差别往往在于思维层次。后来，有感而发，也写了一篇文章《也说思维层次》放在公众号上。其中《穷查理宝典》包含了尤其多的芒格老爷子的普世智慧，推荐一读。&lt;/p&gt;
&lt;p&gt;年末的时候开始重读老子，重新接触老庄哲学，发现另有一片乾坤，回想 2017 年的时候觉得道德经不能够打动我，现在却觉得老庄哲学颇有一番风味。正如南怀瑾老师所说的，中国自汉以来这几千年，外示儒术，内里还是黄老。这方面准备进一步阅读研究一下。&lt;/p&gt;
&lt;p&gt;一些书籍目前已经确定在 2019 年的阅读清单中：《老子》，《庄子》，《庄子諵譁》，《如何有效阅读一本书》，《原则》…具体的根据实际情况调整。&lt;/p&gt;
&lt;p&gt;2019 年，希望自己能够掌握快速而有效的阅读，能够读更多的书，博观而约取。同时总结出自己的一套读书系统，即驱动阅读的一页纸。（关于系统是什么可见辉哥公号，他经常提）。同时，希望自己保证阅读时间，目前的量化规划是，每周至少 6 个番茄钟用来读书。读书量的规划暂时希望至少比 2018 年提升一倍，达到 34 本以上。&lt;/p&gt;
&lt;p&gt;写作上来说，今年写就了 20 篇文章，刚刚好实现了去年的计划。&lt;/p&gt;
&lt;p&gt;文章主要年初写得多，此后由于工作繁忙，博客一路沉寂，不过在公众号上更新了几篇文章。直到 12 月，接触了一些新技术，以及对之前的文章做了整理，发表了出来。&lt;/p&gt;
&lt;p&gt;总体来看，20 篇文章还算可以，不过效率仍然有很大提高的余地。2019 年计划进一步提高文章写作效率和文章质量，学习高效的写作方法，争取分享更多的技术总结和非技术的思考给大家。最好是能够整理形成一个写作系统。读书系统和写作系统可以统归于“兴趣系统”。&lt;/p&gt;
&lt;p&gt;从量上来规划的话，希望能够达到 30 篇文章，同时不断提高质量。&lt;/p&gt;
&lt;h2 id=&quot;2018-计划检查篇&quot;&gt;&lt;a href=&quot;#2018-计划检查篇&quot; class=&quot;headerlink&quot; title=&quot;2018 计划检查篇&quot;&gt;&lt;/a&gt;2018 计划检查篇&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;阅读 20 本书&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;没有达到，只读了 17 本，甚至直到今天，才知道自己目标还没达到，中途也没有根据实际情况作调整，浪费了很多时间。&lt;/p&gt;
&lt;p&gt;鉴于此，在 2019 年，需要执行 OKR 工作法，来跟进所有计划的进度，并根据完成情况进行调整。这样应该会有助于目标的确保实现。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;做出两篇论文&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;发表一篇，投递一篇在等结果，希望有好消息。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;拿到心仪 offer&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;完成。&lt;/p&gt;
&lt;p&gt;综合 2018 计划完成情况来看，不算太令人满意，一些明明可以按时按量完成的，因为没有及时检查进度，有所松懈，导致了没有完成。希望 2019 年建立一个 OKR 表来做监督检查。&lt;/p&gt;
&lt;p&gt;同时，任务有些过于少了，其他方面都没有计划，可以适量增加计划。&lt;/p&gt;
&lt;h2 id=&quot;其他篇&quot;&gt;&lt;a href=&quot;#其他篇&quot; class=&quot;headerlink&quot; title=&quot;其他篇&quot;&gt;&lt;/a&gt;其他篇&lt;/h2&gt;&lt;p&gt;2018 其实还打算了几个事情，一个就是找完工作去学毛笔书法，可由于面试跨度太大，甚至 12 月份的周末还在面试，所以没有能够在周末去学书法，在 2019 年初，打算把这块提上日程。&lt;br&gt;其次，期间还计划了健身增肌，坚持了 1 个多月的每周 3 次健身，后面由于天气转凉，没了下文。应该在 2019 年好好计划一下这个事情。&lt;/p&gt;
&lt;h2 id=&quot;收获篇&quot;&gt;&lt;a href=&quot;#收获篇&quot; class=&quot;headerlink&quot; title=&quot;收获篇&quot;&gt;&lt;/a&gt;收获篇&lt;/h2&gt;&lt;p&gt;总的来说，2018 年，我收获了一些思维方式的转变，思维层次的提高，收获了一些高效学习和工作的方法，虽然情况各异，有的执行了，有的还没执行，有的执行的不太严格。同时，也收获了一份不错的工作和一篇论文。&lt;/p&gt;
&lt;p&gt;慢慢走，慢慢看，希望明年也会有丰富的收获。&lt;/p&gt;
&lt;h2 id=&quot;2019-计划篇&quot;&gt;&lt;a href=&quot;#2019-计划篇&quot; class=&quot;headerlink&quot; title=&quot;2019 计划篇&quot;&gt;&lt;/a&gt;2019 计划篇&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;基本战略：目标导向，高效。&lt;br&gt;主要围绕这几个关键词，转变思维，彻底提高工作效率。其实每个人到了这个阶段，这个年纪，高效性是必然需要追求的了。&lt;/li&gt;
&lt;li&gt;方法论：系统构建&lt;br&gt;构建几套系统，用系统来提高效率，保证稳定的发挥和收益。就像我们有了很多很多的算法，就会构建一个抽象系统来支撑它一样。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;每周至少 6 个阅读番茄钟，阅读 34 本书以上&lt;br&gt;每周至少 2 个写作番茄钟，写作 30 篇文章以上&lt;br&gt;总结自己的两大系统：兴趣系统，工作系统&lt;br&gt;发表 ForestLayer 论文&lt;br&gt;增肌，具体量化写到 OKR 里面&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2019，重新出发，也要从心出发，跟随自己的内心，丰富自己的内心，提升自己的思维，强化自己的技能，并给他人带来价值。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;2019 年元旦是在旅行中度过的，这次行程之一是回到成都的母校。&lt;/p&gt;
&lt;p&gt;母校有一些变化，但变化不大，外边加了一座天桥，南门正准备修地铁，以后出行应该会更方便了。最惨的是，作为一名“校外人士”，想买东西，发现支付宝微信一概不能用，只能刷卡。&lt;/p&gt;
&lt;p&gt;旅行完毕，是
    
    </summary>
    
      <category term="成长之路 | Biography" scheme="http://whatbeg.com/categories/%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF-Biography/"/>
    
    
      <category term="Summary" scheme="http://whatbeg.com/tags/Summary/"/>
    
  </entry>
  
  <entry>
    <title>Latex 错误集锦及使用技巧</title>
    <link href="http://whatbeg.com/2018/12/17/latexerror.html"/>
    <id>http://whatbeg.com/2018/12/17/latexerror.html</id>
    <published>2018-12-17T14:24:28.000Z</published>
    <updated>2018-12-17T14:25:32.163Z</updated>
    
    <content type="html">&lt;p&gt;本文记录LaTeX编译，使用过程中的一些错误及其解决方案。&lt;/p&gt;
&lt;p&gt;另外，还包括一些使用技巧，常见的元素使用方法等等。&lt;/p&gt;
&lt;p&gt;便于自己以及后来人查阅解决。&lt;/p&gt;
&lt;p&gt;我是留白。&lt;/p&gt;
&lt;p&gt;我是留白。&lt;/p&gt;
&lt;h3 id=&quot;Latex-“Error-Extra-alignment-tab-has-been-changed-to-cr-“&quot;&gt;&lt;a href=&quot;#Latex-“Error-Extra-alignment-tab-has-been-changed-to-cr-“&quot; class=&quot;headerlink&quot; title=&quot;Latex “Error: Extra alignment tab has been changed to \cr. “&quot;&gt;&lt;/a&gt;Latex “Error: Extra alignment tab has been changed to \cr. “&lt;/h3&gt;&lt;p&gt;是因为&lt;code&gt;\begin{tabular}&lt;/code&gt;后面的参数指定为 A 列，而实际排列了 B 列数据。（A!=B）&lt;/p&gt;
&lt;p&gt;解决方案：检查&lt;code&gt;\begin{tabular}&lt;/code&gt;后面的&lt;code&gt;r|c|l&lt;/code&gt;数量够不够实际列数。&lt;/p&gt;
&lt;h3 id=&quot;File-ended-while-scanning-use-of-writefile&quot;&gt;&lt;a href=&quot;#File-ended-while-scanning-use-of-writefile&quot; class=&quot;headerlink&quot; title=&quot;File ended while scanning use of \@writefile&quot;&gt;&lt;/a&gt;File ended while scanning use of \@writefile&lt;/h3&gt;&lt;p&gt;&lt;code&gt;.aux&lt;/code&gt;不完整，可能是上次编译没通过。&lt;/p&gt;
&lt;p&gt;解决方案：删除掉.aux文件，重新编译；如果依然不行，将.tex和其他图像文件、参考文献保留外，由系统编译生成的文件通通删掉，重新编译。&lt;/p&gt;
&lt;p&gt;使用技巧&lt;/p&gt;
&lt;h3 id=&quot;批量注释、取消注释&quot;&gt;&lt;a href=&quot;#批量注释、取消注释&quot; class=&quot;headerlink&quot; title=&quot;批量注释、取消注释&quot;&gt;&lt;/a&gt;批量注释、取消注释&lt;/h3&gt;&lt;p&gt;Ctrl+Shift+Alt+Right：批量注释&lt;/p&gt;
&lt;p&gt;Ctrl+Shift+Alt+Left：取消注释&lt;/p&gt;
&lt;h3 id=&quot;表格注释&quot;&gt;&lt;a href=&quot;#表格注释&quot; class=&quot;headerlink&quot; title=&quot;表格注释&quot;&gt;&lt;/a&gt;表格注释&lt;/h3&gt;&lt;figure class=&quot;highlight tex&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;table*&amp;#125;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;[htbp]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;caption&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;xx&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;center&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;scalebox&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;0.6&amp;#125;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		\begin&amp;#123;tabular&amp;#125;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;rccccccccccc&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;%\toprule&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;hline&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;multirow&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;2&amp;#125;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;*&amp;#125;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;xx&amp;#125;&lt;/span&gt;&lt;/span&gt;  &amp;amp; xx &amp;amp;...  &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			... &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;tnote&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;*&amp;#125;&lt;/span&gt;&lt;/span&gt;   &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;%\midrule&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;hline&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			xxx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;hline&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;%\bottomrule&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;tabular&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;tablenotes&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;footnotesize&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;[*]&lt;/span&gt;&lt;/span&gt; * the note you wanna add&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;tablenotes&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;xx&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;center&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;table*&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;本文记录LaTeX编译，使用过程中的一些错误及其解决方案。&lt;/p&gt;
&lt;p&gt;另外，还包括一些使用技巧，常见的元素使用方法等等。&lt;/p&gt;
&lt;p&gt;便于自己以及后来人查阅解决。&lt;/p&gt;
&lt;p&gt;我是留白。&lt;/p&gt;
&lt;p&gt;我是留白。&lt;/p&gt;
&lt;h3 id=&quot;Latex-“Error-E
    
    </summary>
    
      <category term="错误解决与优化 | Err&Opt" scheme="http://whatbeg.com/categories/%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E4%B8%8E%E4%BC%98%E5%8C%96-Err-Opt/"/>
    
    
      <category term="Latex" scheme="http://whatbeg.com/tags/Latex/"/>
    
  </entry>
  
  <entry>
    <title>Scala语法简摘</title>
    <link href="http://whatbeg.com/2018/12/17/scalagrammar.html"/>
    <id>http://whatbeg.com/2018/12/17/scalagrammar.html</id>
    <published>2018-12-17T12:42:02.000Z</published>
    <updated>2018-12-17T12:47:09.674Z</updated>
    
    <content type="html">&lt;p&gt;本文摘录Scala语言的一些语法和关键概念，不成系统，可看做学习笔记罢。&lt;/p&gt;
&lt;h2 id=&quot;类型推断&quot;&gt;&lt;a href=&quot;#类型推断&quot; class=&quot;headerlink&quot; title=&quot;类型推断&quot;&gt;&lt;/a&gt;类型推断&lt;/h2&gt;&lt;p&gt;&lt;code&gt;for (arg &amp;lt;- args)&lt;/code&gt;中&lt;code&gt;arg&lt;/code&gt;一定是val类型，循环中不能改变其值。&lt;/p&gt;
&lt;p&gt;Scala程序员的平衡感：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;崇尚val，不可变对象和没有副作用的方法&lt;/li&gt;
&lt;li&gt;首先想到他们，只有在特定需要或权衡后才选择var，可变对象或者带副作用方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Scala 伴生对象，是一个单例对象，可以看做Java中可能用到的静态方法工具类&lt;/p&gt;
&lt;h2 id=&quot;基本类型&quot;&gt;&lt;a href=&quot;#基本类型&quot; class=&quot;headerlink&quot; title=&quot;基本类型&quot;&gt;&lt;/a&gt;基本类型&lt;/h2&gt;&lt;p&gt;任何方法都可以是操作符，任何操作符都是方法。&lt;/p&gt;
&lt;h2 id=&quot;函数式对象&quot;&gt;&lt;a href=&quot;#函数式对象&quot; class=&quot;headerlink&quot; title=&quot;函数式对象&quot;&gt;&lt;/a&gt;函数式对象&lt;/h2&gt;&lt;p&gt;辅助构造器，关键词this指向当前执行方法被调用的对象实例&lt;br&gt;如果使用在构造器里的话，就是指正在构建的实例&lt;/p&gt;
&lt;p&gt;辅助构造器使用&lt;code&gt;def this(..)&lt;/code&gt;定义，每个Scala构造器调用终将结束于对主构造器的调用。因为主构造器是类的唯一入口点。&lt;/p&gt;
&lt;p&gt;重载操作符，重载后仍然按照原来的优先级，比如* &amp;gt; +&lt;/p&gt;
&lt;p&gt;字面量标识符 &lt;code&gt;yield&lt;/code&gt;可以作为一个变量/常量名&lt;/p&gt;
&lt;h2 id=&quot;函数和闭包&quot;&gt;&lt;a href=&quot;#函数和闭包&quot; class=&quot;headerlink&quot; title=&quot;函数和闭包&quot;&gt;&lt;/a&gt;函数和闭包&lt;/h2&gt;&lt;p&gt;本地函数：函数定义在函数中，本地函数可以随意访问包含它的函数的参数&lt;/p&gt;
&lt;p&gt;函数字面量&lt;br&gt;例子： &lt;code&gt;(x: Int) =&amp;gt; x + 1&lt;/code&gt;&lt;br&gt;在&lt;code&gt;foreach&lt;/code&gt;，&lt;code&gt;filter&lt;/code&gt;等许多函数中会使用到，x的类型往往可以被推断，所以通常也可写成： &lt;code&gt;x =&amp;gt; x + 1&lt;/code&gt;&lt;br&gt;函数字面量存在于源代码，而函数值作为对象存在于运行期。&lt;/p&gt;
&lt;p&gt;更简单的，可以使用占位符语法，用下划线当做一个或者多个参数的占位符，只要每个参数在函数字面量内只出现一次即可，第n个下划线代表第n个参数&lt;br&gt;如&lt;code&gt;filter(_ &amp;gt; 0)&lt;/code&gt;，调用时，用参数来填补下划线，也即&lt;code&gt;filter(x &amp;gt; 0)&lt;/code&gt;&lt;br&gt;如&lt;code&gt;reduce(_ + _)&lt;/code&gt;，调用时，分别填补，也即&lt;code&gt;reduce(l+r)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;偏函数（部分应用函数），一个下划线代替所有参数&lt;/p&gt;
&lt;p&gt;闭包：函数字面量中包含了自由变量的绑定，运行时必须捕获其绑定。&lt;br&gt;如&lt;code&gt;val addMore = (x: Int) =&amp;gt; x + more&lt;/code&gt;，&lt;code&gt;more&lt;/code&gt;是自由变量&lt;br&gt;注意，闭包是一个非常重要的概念，我们时常会想要在循环体，比如foreach,map中加入一些对外部变量的修改，这是我们在其他语言养成的习惯。&lt;br&gt;直觉上，Scala在运行时会捕获自由变量本身，而不是变量指向的值。&lt;br&gt;比如&lt;br&gt;&lt;code&gt;(x: Int) =&amp;gt; x + more&lt;/code&gt;&lt;br&gt;此时创建的闭包可以看到闭包外部对more的改变，同样，闭包对捕获变量做出的修改在闭包外部也可见，比如：&lt;br&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;val someNumber = &lt;span class=&quot;keyword&quot;&gt;List&lt;/span&gt;(-11, -10, 0, 10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;sum&lt;/span&gt; = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;someNumber.&lt;span class=&quot;keyword&quot;&gt;foreach&lt;/span&gt;(x =&amp;gt; &lt;span class=&quot;keyword&quot;&gt;sum&lt;/span&gt; += x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;scala&lt;/span&gt;&amp;gt; &lt;span class=&quot;built_in&quot;&gt;sum&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;res: Int = -11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;但是如果读者用过Spark的话，一定会了解到Spark的闭包和Scala的闭包是不一样的，原因就在于Spark是分布式环境下运行的。&lt;br&gt;&lt;a href=&quot;http://spark.apache.org/docs/latest/rdd-programming-guide.html#understanding-closures-a-nameclosureslinka&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;有Spark官方对closure的描述。&lt;/p&gt;
&lt;p&gt;还是上面那个例子&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;var&lt;/span&gt; sum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;var&lt;/span&gt; rdd = sc.parallelize(someNumbers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Wrong: Don&#39;t do this!!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rdd.foreach(x =&amp;gt; sum += x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Counter value: &quot;&lt;/span&gt; + counter)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// counter = 0, because driver cannot feel the change of counter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;众所周知，在分布式环境下，rdd的操作形成一个闭包，闭包会先序列化，然后被调度到各个executor执行，且每个executor拿到的其实是序列化后的sum，相当于driver端的一个copy，executor对sum的操作对driver来说不可见，driver的sum对各个executor来说也不可见，所以在driver端，counter始终是0。这就是scala闭包和spark闭包概念的一个最大不同。&lt;/p&gt;
&lt;p&gt;重复参数，即可变参数，尾部加&lt;code&gt;*&lt;/code&gt;号即可，如：&lt;br&gt;&lt;code&gt;def echo(args: String*)&lt;/code&gt;&lt;br&gt;&lt;code&gt;args&lt;/code&gt;其实是&lt;code&gt;Array[String]&lt;/code&gt;类型，但是仍然不能真的传入一个&lt;code&gt;Array[String]&lt;/code&gt;类型的参数，比如要传入&lt;code&gt;arr&lt;/code&gt;，你需要&lt;code&gt;echo(arr: _*)&lt;/code&gt;这么写，意思是告诉编译器把每个元素当参数而不是把arr当做单一参数。&lt;/p&gt;
&lt;p&gt;尾递归：在最后一个动作调用自己的函数。注意只能是单纯的调用自己，不能有多余的表达式，也不能通过其它函数中转&lt;/p&gt;
&lt;p&gt;Scala的核心：简洁，简洁，简洁！&lt;/p&gt;
&lt;h2 id=&quot;控制抽象&quot;&gt;&lt;a href=&quot;#控制抽象&quot; class=&quot;headerlink&quot; title=&quot;控制抽象&quot;&gt;&lt;/a&gt;控制抽象&lt;/h2&gt;&lt;p&gt;柯里化，传名参数&lt;/p&gt;
&lt;h2 id=&quot;组合与继承&quot;&gt;&lt;a href=&quot;#组合与继承&quot; class=&quot;headerlink&quot; title=&quot;组合与继承&quot;&gt;&lt;/a&gt;组合与继承&lt;/h2&gt;&lt;p&gt;组合指一个类持有另一个的引用，借助被引用的类完成任务。&lt;/p&gt;
&lt;p&gt;不带参数，且没有副作用的方法可以不写括号&lt;/p&gt;
&lt;p&gt;“脆基类”问题：意外的方法重写&lt;/p&gt;
&lt;p&gt;多态的重新理解：父类型引用可以指向子类型对象 =&amp;gt; 父类对象可有多种形式 =&amp;gt; 多态&lt;/p&gt;
&lt;p&gt;动态绑定：被调用的实际方法取决于运行期对象基于的类型&lt;/p&gt;
&lt;h2 id=&quot;Scala-层级&quot;&gt;&lt;a href=&quot;#Scala-层级&quot; class=&quot;headerlink&quot; title=&quot;Scala 层级&quot;&gt;&lt;/a&gt;Scala 层级&lt;/h2&gt;&lt;p&gt;所有类的父类是Any类，下辖两个子类，AnyRef（所有引用类的父类）和AnyVal（所有值类的父类）&lt;br&gt;底层有Nothing类和Null类，Null类是所有引用类的子类，不兼容子类型，而Nothing是所有类的子类。&lt;br&gt;scala的==对值类型为自然相等，对引用类型来说被视为equals方法的别名，equals初始定义为引用相等，但许多子类都会重写它以实现自然意义上的相等。&lt;br&gt;要比较引用相等，可以使用eq方法（反面是ne方法）&lt;/p&gt;
&lt;h2 id=&quot;特质-trait&quot;&gt;&lt;a href=&quot;#特质-trait&quot; class=&quot;headerlink&quot; title=&quot;特质(trait)&quot;&gt;&lt;/a&gt;特质(trait)&lt;/h2&gt;&lt;p&gt;特质类似Java中的接口，混入特质可以使用extends或者with&lt;/p&gt;
&lt;p&gt;特质像是带有具体方法的Java接口，并且可以声明字段和维持状态值，特质可以做类定义所能做的事&lt;br&gt;但与类定义有两点不同：&lt;br&gt;1） 特质不能有参数（传递给主构造器）&lt;br&gt;2）super调用时动态绑定的&lt;/p&gt;
&lt;p&gt;胖接口：拥有更多方法的接口&lt;br&gt;特质的一个用法就是把瘦接口变成胖接口&lt;/p&gt;
&lt;p&gt;需要排序比较时，可以混入（mixin）Ordered特质&lt;br&gt;步骤：混入Ordered特质，实现compare方法，可以自动拥有大多数比较方法，但是不会有equals方法  =&amp;gt; 类型擦除&lt;/p&gt;
&lt;p&gt;特质的第二个用法：为类提供可堆叠的改变&lt;/p&gt;
&lt;p&gt;混入多个特质，最右边的特质最先起作用&lt;/p&gt;
&lt;p&gt;不同的组合，不同的次序混入特质，可以依靠少量的特质得到多个不同的类&lt;/p&gt;
&lt;p&gt;特质线性化地解释super&lt;/p&gt;
&lt;p&gt;特质，用还是不用？&lt;br&gt;1） 如果行为不会被重用，那做成具体类&lt;br&gt;2）如果要在多个不相关的类中重用，那就做成特质&lt;br&gt;3）如果希望从Java代码继承，那就是用抽象类 （只含有抽象成员的scala特质会被直接翻译成Java接口）&lt;br&gt;4）如果计划以编译后的方式发布，或者希望外部组织继承它，更倾向使用抽象类&lt;br&gt;5）如果效率很重要，倾向于使用类&lt;/p&gt;
&lt;h2 id=&quot;包和引用&quot;&gt;&lt;a href=&quot;#包和引用&quot; class=&quot;headerlink&quot; title=&quot;包和引用&quot;&gt;&lt;/a&gt;包和引用&lt;/h2&gt;&lt;p&gt;&lt;code&gt;_root_&lt;/code&gt;顶层包：所有你能写出来的顶层包都是&lt;code&gt;_root_&lt;/code&gt;的成员，可以用&lt;code&gt;_root_.yourpack&lt;/code&gt;来访问&lt;/p&gt;
&lt;p&gt;scala应用灵活在于：&lt;br&gt;1）可以随处import&lt;br&gt;2）可以指对象或包&lt;br&gt;3）可以重命名或者隐藏&lt;/p&gt;
&lt;p&gt;每个scala源文件都隐含引用java.lang包，scala包以及单例对象Predef&lt;/p&gt;
&lt;p&gt;访问修饰符：protected比Java中的更加严格：仅限子类访问，同一包中的类不能访问&lt;/p&gt;
&lt;p&gt;访问修饰符限定规则：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;private[X] method/class&lt;/code&gt; 此类或方法对X下所有类和对象可见&lt;/p&gt;
&lt;p&gt;&lt;code&gt;protected[X] method/class&lt;/code&gt; 对此类或子类或修饰符所在的包，类或对象X可见  （？）&lt;/p&gt;
&lt;h2 id=&quot;断言和单元测试&quot;&gt;&lt;a href=&quot;#断言和单元测试&quot; class=&quot;headerlink&quot; title=&quot;断言和单元测试&quot;&gt;&lt;/a&gt;断言和单元测试&lt;/h2&gt;&lt;p&gt;&lt;code&gt;assert&lt;/code&gt;:&lt;br&gt;&lt;code&gt;assert(ele.width === 2)&lt;/code&gt; 三等号，如果不等，会报告&lt;code&gt;“3 dit not equal to 2”&lt;/code&gt;&lt;br&gt;或&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;expect (&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ele&lt;span class=&quot;selector-class&quot;&gt;.width&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;intercept检查是否抛出了期待的异常&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;intercept&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(class[IllegalArgumentException])&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  elem(&lt;span class=&quot;string&quot;&gt;&#39;x&#39;&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;scala中的一些测试方法：&lt;br&gt;1)  ScalaTest&lt;br&gt;2)  Suite:&lt;br&gt;3)  JUnit&lt;br&gt;4)  TestNG&lt;br&gt;5)  Specs 规格测试， a should be … 具有描述部分和规格部分&lt;br&gt;ScalaCheck 属性测试，测试代码具有属性&lt;/p&gt;
&lt;h2 id=&quot;样例类和模式匹配&quot;&gt;&lt;a href=&quot;#样例类和模式匹配&quot; class=&quot;headerlink&quot; title=&quot;样例类和模式匹配&quot;&gt;&lt;/a&gt;样例类和模式匹配&lt;/h2&gt;&lt;p&gt;样例类 &lt;code&gt;case class CLSNAME(argA: argAType, ...)&lt;/code&gt;&lt;br&gt;最大的好处是他们可以支持模式匹配&lt;/p&gt;
&lt;p&gt;模式有很多种，包括通配，常量模式，变量模式，构造器模式，序列模式，元组模式，类型模式，更高级的还有变量绑定&lt;br&gt;使用类型模式应注意类型擦除，擦除规则不适用于数组&lt;/p&gt;
&lt;p&gt;编译器会为&lt;code&gt;case class&lt;/code&gt;自动生成伴生对象&lt;br&gt;编译器也会为该伴生对象自动生成&lt;code&gt;apply&lt;/code&gt;,&lt;code&gt;unapply&lt;/code&gt;方法&lt;/p&gt;
&lt;p&gt;模式守卫&lt;/p&gt;
&lt;h2 id=&quot;列表：List&quot;&gt;&lt;a href=&quot;#列表：List&quot; class=&quot;headerlink&quot; title=&quot;列表：List&quot;&gt;&lt;/a&gt;列表：List&lt;/h2&gt;&lt;p&gt;List是协变的，意味着，如果S是T的子类，List[S]就是List[T]的子类，故而 &lt;code&gt;List[Nothing]&lt;/code&gt; 是 &lt;code&gt;List[String]&lt;/code&gt; 的子类，故可以&lt;code&gt;val List[String] = List()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;::&lt;/code&gt; 元素与List连接，元素与元素连接&lt;br&gt;&lt;code&gt;:::&lt;/code&gt; List与List连接&lt;/p&gt;
&lt;p&gt;计算长度&lt;code&gt;.length&lt;/code&gt;方法需要遍历整个列表，所以如果判断长度为0的话最好使用&lt;code&gt;.isEmpty&lt;/code&gt;方法&lt;br&gt;访问头部：&lt;code&gt;init&lt;/code&gt;方法，访问除了最后一个元素外的子列表， &lt;code&gt;head&lt;/code&gt;方法：访问第一个元素&lt;br&gt;访问尾部：&lt;code&gt;last&lt;/code&gt;方法，访问最后一个元素， &lt;code&gt;tail&lt;/code&gt;方法：访问除第一个元素外的列表&lt;br&gt;更一般的，&lt;code&gt;drop&lt;/code&gt;, &lt;code&gt;take&lt;/code&gt;方法&lt;/p&gt;
&lt;p&gt;&lt;code&gt;copyToArray&lt;/code&gt;: 把列表元素复制到目标数组的一段连续空间&lt;br&gt;&lt;code&gt;elements&lt;/code&gt;方法：返回迭代器&lt;/p&gt;
&lt;p&gt;其他的List高阶方法：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt;,flatMap,foreach&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;过滤：&lt;span class=&quot;built_in&quot;&gt;filter&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;partition&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;find&lt;/span&gt;,takeWhile,dropWhile,span&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;论断：forall,exists&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;折叠：/: 和 :\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;翻转&lt;span class=&quot;built_in&quot;&gt;reverse&lt;/span&gt;，排序sortWith&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;List对象的方法:&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;List&lt;span class=&quot;selector-class&quot;&gt;.apply&lt;/span&gt;,List&lt;span class=&quot;selector-class&quot;&gt;.range&lt;/span&gt;,List.make(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;List&lt;span class=&quot;selector-class&quot;&gt;.unzip&lt;/span&gt; 解除啮合&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;连接： List&lt;span class=&quot;selector-class&quot;&gt;.flatten&lt;/span&gt;, List.concat&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;区别在于前者用列表的列表做参数，后者可以直接用多个列表作为参数（以可变参数的方式）&lt;/p&gt;
&lt;p&gt;Scala类型推断&lt;br&gt;Scala采用局部的，基于流的类型推断算法&lt;/p&gt;
&lt;p&gt;通常，一旦有需要推断多态方法类型参数的任务时，类型推断器只会参考第一个参数列表中所有的值参数类型，而不会参考之后的参数。&lt;br&gt;库方法设计原则：&lt;br&gt;如果需要把参数设计为若干非函数值即一个函数值的某种多态方法，需要把函数参数独自放在柯里化参数列表的最后面。&lt;br&gt;即，在柯里化方法中，方法类型仅取决于第一段参数。&lt;br&gt;同样的，一种快速解决类型错误问题的方法：&lt;br&gt;添加明确的类型标注&lt;/p&gt;
&lt;h2 id=&quot;集合与映射&quot;&gt;&lt;a href=&quot;#集合与映射&quot; class=&quot;headerlink&quot; title=&quot;集合与映射&quot;&gt;&lt;/a&gt;集合与映射&lt;/h2&gt;&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Set&lt;/span&gt;, Seq, &lt;span class=&quot;built_in&quot;&gt;Map&lt;/span&gt; -&amp;gt; &lt;span class=&quot;built_in&quot;&gt;Iterable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SortedSet&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SynchronizedMap&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果元素数量不多，不可变集合比可变集合存储更紧凑，空间更加节省。&lt;/p&gt;
&lt;p&gt;可变状态的对象&lt;/p&gt;
&lt;p&gt;状态与var变量常常一起出现，但并不具有严格的关系。&lt;br&gt;类即使没有定义或继承var变量，也可以由于把方法调用传递给其他具有可变状态的对象而带有状态，（有点拗口）&lt;br&gt;类即使包含了var变量也可以仍是纯函数的&lt;/p&gt;
&lt;p&gt;Scala中，对象的每个非私有的var类型成员变量都隐含定义了&lt;code&gt;getter&lt;/code&gt;和&lt;code&gt;setter&lt;/code&gt;方法。&lt;br&gt;&lt;code&gt;getter&lt;/code&gt;方法为&lt;code&gt;x&lt;/code&gt;&lt;br&gt;&lt;code&gt;setter&lt;/code&gt;方法为&lt;code&gt;x_&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;类中字段初始化为0/false/null，&lt;br&gt;&lt;code&gt;var x = _&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;不可以省略 “= _”，否则var x: Float 为抽象变量，而不是未初始化的变量&lt;/p&gt;
&lt;h2 id=&quot;类型参数化（重头戏）&quot;&gt;&lt;a href=&quot;#类型参数化（重头戏）&quot; class=&quot;headerlink&quot; title=&quot;类型参数化（重头戏）&quot;&gt;&lt;/a&gt;类型参数化（重头戏）&lt;/h2&gt;&lt;p&gt;类型参数化让我们能够编写泛型和特质&lt;br&gt;信息隐藏：&lt;br&gt;隐藏主构造器： private加载类名的后面，类参数列表的前面：&lt;br&gt;&lt;figure class=&quot;highlight kotlin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Queue&lt;/span&gt;[&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;] &lt;span class=&quot;title&quot;&gt;private&lt;/span&gt; &lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; leading&lt;/span&gt;: List[T],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; tailing&lt;/span&gt;: List[T]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;那么如何构造对象呢？&lt;/p&gt;
&lt;p&gt;方法1：定义辅助构造器&lt;br&gt;&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;() = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;(Nil, Nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;(elem: T*) = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;(elem.&lt;span class=&quot;keyword&quot;&gt;toList&lt;/span&gt;, Nil)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;方法2：在伴生对象中编写apply工厂方法&lt;br&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;object Queue &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  def apply[&lt;span class=&quot;string&quot;&gt;T&lt;/span&gt;](&lt;span class=&quot;link&quot;&gt;xs: T*&lt;/span&gt;) = new Queue[&lt;span class=&quot;string&quot;&gt;T&lt;/span&gt;](&lt;span class=&quot;link&quot;&gt;xs.toList, Nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;（注意，scala没有全局方法，方法必须包含在类或对象中）&lt;/p&gt;
&lt;p&gt;另一种信息隐藏的方法，直接把类本身通过暴露特质(trait)而隐藏掉&lt;/p&gt;
&lt;p&gt;如果类或者特质声明时带类型参数，那么创建变量时也要制定具体的参数化的类型&lt;br&gt;如&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Queue&lt;/span&gt;&lt;span class=&quot;meta&quot;&gt;[&lt;/span&gt;T&lt;span class=&quot;meta&quot;&gt;]&lt;/span&gt; &amp;#123; .. &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Queue是特质， Queue&lt;span class=&quot;meta&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;meta&quot;&gt;]&lt;/span&gt;是类型&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;泛型：通过一个能够广泛适用的类或特质，定义了许多特定的类型&lt;/p&gt;
&lt;p&gt;在scala中，泛型类默认是非协变的子类型化&lt;br&gt;如果要表明参数的子类型化是协变的，需要变成如下形式：&lt;br&gt;&lt;code&gt;trait Queue[+T] { .. }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;加上-号表示需要逆变的子类型化&lt;/p&gt;
&lt;p&gt;只要泛型的参数类型被当做方法参数的类型，那么包含它的类或特质就有可能不能与这个类型参数一起协变&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Queue&lt;/span&gt;[+&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;] &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;symbol&quot;&gt;x:&lt;/span&gt; T)&lt;/span&gt;&lt;/span&gt; = ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;下界和上界&lt;br&gt;&lt;code&gt;def append[U&amp;gt;: T](x: U) = new Queue[U](leading, x :: tailing)&lt;/code&gt;&lt;br&gt;语法&lt;code&gt;U &amp;gt;: T&lt;/code&gt;定义了T为U的下界，结果U必须是T的超类型，append的参数现在为U而不是T，返回类型也变成了&lt;code&gt;Queue[U]&lt;/code&gt;，不过，自身即是自身的超类型又是自身的子类型，所以是类似小于等于的关系。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;def orderedMergeSort[T &amp;lt;: Ordered[T]](xs: List[T]): List[T] = ...&lt;/code&gt;&lt;br&gt;语法&lt;code&gt;T &amp;lt;: Ordered[T]&lt;/code&gt;定义了类型参数T具有上界&lt;code&gt;Ordered[T]&lt;/code&gt;，即传递给&lt;code&gt;orderedMergeSort&lt;/code&gt;的参数必须是&lt;code&gt;Ordered[T]&lt;/code&gt;的子类型。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文摘录Scala语言的一些语法和关键概念，不成系统，可看做学习笔记罢。&lt;/p&gt;
&lt;h2 id=&quot;类型推断&quot;&gt;&lt;a href=&quot;#类型推断&quot; class=&quot;headerlink&quot; title=&quot;类型推断&quot;&gt;&lt;/a&gt;类型推断&lt;/h2&gt;&lt;p&gt;&lt;code&gt;for (arg &amp;lt
    
    </summary>
    
      <category term="编程语言 | Program Lang." scheme="http://whatbeg.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80-Program-Lang/"/>
    
    
      <category term="Scala" scheme="http://whatbeg.com/tags/Scala/"/>
    
  </entry>
  
  <entry>
    <title>Tensorflow 错误集锦</title>
    <link href="http://whatbeg.com/2018/12/05/tensorflowtips.html"/>
    <id>http://whatbeg.com/2018/12/05/tensorflowtips.html</id>
    <published>2018-12-05T15:19:18.000Z</published>
    <updated>2018-12-08T15:11:17.843Z</updated>
    
    <content type="html">&lt;p&gt;本文记录笔者在Tensorflow使用上的一些错误的集锦，方便后来人迅速查阅解决问题。&lt;/p&gt;
&lt;p&gt;我是留白。&lt;/p&gt;
&lt;p&gt;我是留白。&lt;/p&gt;
&lt;h3 id=&quot;CreateSession-still-waiting-for-response-from-worker-job-worker-replica-0-task-0&quot;&gt;&lt;a href=&quot;#CreateSession-still-waiting-for-response-from-worker-job-worker-replica-0-task-0&quot; class=&quot;headerlink&quot; title=&quot;CreateSession still waiting for response from worker: /job:worker/replica:0/task:0&quot;&gt;&lt;/a&gt;CreateSession still waiting for response from worker: /job:worker/replica:0/task:0&lt;/h3&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;24.565303&lt;/span&gt;: I tensorflow&lt;span class=&quot;regexp&quot;&gt;/core/&lt;/span&gt;distributed_runtime&lt;span class=&quot;regexp&quot;&gt;/rpc/&lt;/span&gt;grpc_channel.&lt;span class=&quot;string&quot;&gt;cc:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;222&lt;/span&gt;] Initialize GrpcChannelCache &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; job ps -&amp;gt; &amp;#123;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; -&amp;gt; &lt;span class=&quot;string&quot;&gt;localhost:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;3376&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;24.565372&lt;/span&gt;: I tensorflow&lt;span class=&quot;regexp&quot;&gt;/core/&lt;/span&gt;distributed_runtime&lt;span class=&quot;regexp&quot;&gt;/rpc/&lt;/span&gt;grpc_channel.&lt;span class=&quot;string&quot;&gt;cc:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;222&lt;/span&gt;] Initialize GrpcChannelCache &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; job worker -&amp;gt; &amp;#123;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; -&amp;gt; &lt;span class=&quot;string&quot;&gt;localhost:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;3330&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; -&amp;gt; &lt;span class=&quot;string&quot;&gt;localhost:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;3331&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;24.569212&lt;/span&gt;: I tensorflow&lt;span class=&quot;regexp&quot;&gt;/core/&lt;/span&gt;distributed_runtime&lt;span class=&quot;regexp&quot;&gt;/rpc/&lt;/span&gt;grpc_server_lib.&lt;span class=&quot;string&quot;&gt;cc:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;381&lt;/span&gt;] Started server with &lt;span class=&quot;string&quot;&gt;target:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;grpc:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//localhost:3376&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;26.170901&lt;/span&gt;: I tensorflow&lt;span class=&quot;regexp&quot;&gt;/core/&lt;/span&gt;distributed_runtime&lt;span class=&quot;regexp&quot;&gt;/rpc/&lt;/span&gt;grpc_channel.&lt;span class=&quot;string&quot;&gt;cc:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;222&lt;/span&gt;] Initialize GrpcChannelCache &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; job ps -&amp;gt; &amp;#123;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; -&amp;gt; &lt;span class=&quot;string&quot;&gt;localhost:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;3376&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;26.170969&lt;/span&gt;: I tensorflow&lt;span class=&quot;regexp&quot;&gt;/core/&lt;/span&gt;distributed_runtime&lt;span class=&quot;regexp&quot;&gt;/rpc/&lt;/span&gt;grpc_channel.&lt;span class=&quot;string&quot;&gt;cc:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;222&lt;/span&gt;] Initialize GrpcChannelCache &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; job worker -&amp;gt; &amp;#123;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; -&amp;gt; &lt;span class=&quot;string&quot;&gt;localhost:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;3330&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; -&amp;gt; &lt;span class=&quot;string&quot;&gt;localhost:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;3331&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;26.174856&lt;/span&gt;: I tensorflow&lt;span class=&quot;regexp&quot;&gt;/core/&lt;/span&gt;distributed_runtime&lt;span class=&quot;regexp&quot;&gt;/rpc/&lt;/span&gt;grpc_server_lib.&lt;span class=&quot;string&quot;&gt;cc:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;381&lt;/span&gt;] Started server with &lt;span class=&quot;string&quot;&gt;target:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;grpc:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//localhost:3330&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;27.177003&lt;/span&gt;: I tensorflow&lt;span class=&quot;regexp&quot;&gt;/core/&lt;/span&gt;distributed_runtime&lt;span class=&quot;regexp&quot;&gt;/rpc/&lt;/span&gt;grpc_channel.&lt;span class=&quot;string&quot;&gt;cc:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;222&lt;/span&gt;] Initialize GrpcChannelCache &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; job ps -&amp;gt; &amp;#123;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; -&amp;gt; &lt;span class=&quot;string&quot;&gt;localhost:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;3376&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;27.177071&lt;/span&gt;: I tensorflow&lt;span class=&quot;regexp&quot;&gt;/core/&lt;/span&gt;distributed_runtime&lt;span class=&quot;regexp&quot;&gt;/rpc/&lt;/span&gt;grpc_channel.&lt;span class=&quot;string&quot;&gt;cc:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;222&lt;/span&gt;] Initialize GrpcChannelCache &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; job worker -&amp;gt; &amp;#123;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; -&amp;gt; &lt;span class=&quot;string&quot;&gt;localhost:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;3330&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; -&amp;gt; &lt;span class=&quot;string&quot;&gt;localhost:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;3331&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;27.180980&lt;/span&gt;: I tensorflow&lt;span class=&quot;regexp&quot;&gt;/core/&lt;/span&gt;distributed_runtime&lt;span class=&quot;regexp&quot;&gt;/rpc/&lt;/span&gt;grpc_server_lib.&lt;span class=&quot;string&quot;&gt;cc:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;381&lt;/span&gt;] Started server with &lt;span class=&quot;string&quot;&gt;target:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;grpc:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//localhost:3331&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;34.625459&lt;/span&gt;: I tensorflow&lt;span class=&quot;regexp&quot;&gt;/core/&lt;/span&gt;distributed_runtime&lt;span class=&quot;regexp&quot;&gt;/master.cc:267] CreateSession still waiting for response from worker: /&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;job:&lt;/span&gt;worker&lt;span class=&quot;regexp&quot;&gt;/replica:0/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;task:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;34.625513&lt;/span&gt;: I tensorflow&lt;span class=&quot;regexp&quot;&gt;/core/&lt;/span&gt;distributed_runtime&lt;span class=&quot;regexp&quot;&gt;/master.cc:267] CreateSession still waiting for response from worker: /&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;job:&lt;/span&gt;worker&lt;span class=&quot;regexp&quot;&gt;/replica:0/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;task:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;36.231936&lt;/span&gt;: I tensorflow&lt;span class=&quot;regexp&quot;&gt;/core/&lt;/span&gt;distributed_runtime&lt;span class=&quot;regexp&quot;&gt;/master.cc:267] CreateSession still waiting for response from worker: /&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;job:&lt;/span&gt;ps&lt;span class=&quot;regexp&quot;&gt;/replica:0/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;task:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;36.231971&lt;/span&gt;: I tensorflow&lt;span class=&quot;regexp&quot;&gt;/core/&lt;/span&gt;distributed_runtime&lt;span class=&quot;regexp&quot;&gt;/master.cc:267] CreateSession still waiting for response from worker: /&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;job:&lt;/span&gt;worker&lt;span class=&quot;regexp&quot;&gt;/replica:0/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;task:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;37.235899&lt;/span&gt;: I tensorflow&lt;span class=&quot;regexp&quot;&gt;/core/&lt;/span&gt;distributed_runtime&lt;span class=&quot;regexp&quot;&gt;/master.cc:267] CreateSession still waiting for response from worker: /&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;job:&lt;/span&gt;ps&lt;span class=&quot;regexp&quot;&gt;/replica:0/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;task:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-05&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;37.235952&lt;/span&gt;: I tensorflow&lt;span class=&quot;regexp&quot;&gt;/core/&lt;/span&gt;distributed_runtime&lt;span class=&quot;regexp&quot;&gt;/master.cc:267] CreateSession still waiting for response from worker: /&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;job:&lt;/span&gt;worker&lt;span class=&quot;regexp&quot;&gt;/replica:0/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;task:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;首先保证&lt;code&gt;job_name,task_index,ps_hosts,worker_hosts&lt;/code&gt;这四个参数都是正确的,考虑以下这种情况是不正确的：&lt;br&gt;在一个IP为192.168.1.100的机器上启动ps或worker进程：&lt;br&gt;&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;--job_name&lt;/span&gt;=worker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;--task_index&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;--ps_hosts&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1.100&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2222&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1.101&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2222&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;--worker_hosts&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1.100&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2223&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1.101&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2223&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;因为该进程启动位置是192.168.1.100，但是运行参数中指定的task_index为1，对应的IP地址是ps_hosts或worker_hosts的第二项（第一项的task_index为0)，也就是192.168.1.101，和进程本身所在机器的IP不一致。&lt;/p&gt;
&lt;p&gt;另外一种情况也会导致该问题的发生，从TensorFlow-1.4开始，分布式会自动使用环境变量中的代理去连接，如果运行的节点之间不需要代理互连，那么将代理的环境变量移除即可，在脚本的开始位置添加代码：&lt;br&gt;注意这段代码必须写在import tensorflow as tf或者import moxing.tensorflow as mox之前&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;os&lt;span class=&quot;selector-class&quot;&gt;.enrivon&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.pop&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;http_proxy&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;os&lt;span class=&quot;selector-class&quot;&gt;.enrivon&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.pop&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;https_proxy&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;— 摘自(&lt;a href=&quot;https://bbs.huaweicloud.com/blogs/463145f7a1d111e89fc57ca23e93a89f&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://bbs.huaweicloud.com/blogs/463145f7a1d111e89fc57ca23e93a89f&lt;/a&gt;)&lt;/p&gt;
&lt;h3 id=&quot;ImportError-lib64-libstdc-so-6-version-CXXABI-1-3-9’-not-found&quot;&gt;&lt;a href=&quot;#ImportError-lib64-libstdc-so-6-version-CXXABI-1-3-9’-not-found&quot; class=&quot;headerlink&quot; title=&quot;ImportError: /lib64/libstdc++.so.6: version `CXXABI_1.3.9’ not found&quot;&gt;&lt;/a&gt;ImportError: /lib64/libstdc++.so.6: version `CXXABI_1.3.9’ not found&lt;/h3&gt;&lt;figure class=&quot;highlight qml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/home/experiment/huqiu/anaconda3/lib/python3&lt;span class=&quot;number&quot;&gt;.6&lt;/span&gt;/site-packages/h5py/&lt;span class=&quot;attribute&quot;&gt;__init__.py&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;: &lt;span class=&quot;attribute&quot;&gt;FutureWarning&lt;/span&gt;: Conversion &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; the second argument &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; issubdtype from &lt;span class=&quot;string&quot;&gt;`float`&lt;/span&gt; to &lt;span class=&quot;string&quot;&gt;`np.floating`&lt;/span&gt; is deprecated. In future, it will be treated &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`np.float64 == np.dtype(float).type`&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  from ._conv &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;string&quot;&gt; register_converters as _register_converters&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &lt;span class=&quot;string&quot;&gt;&quot;trainer.py&quot;&lt;/span&gt;, line &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &amp;lt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;string&quot;&gt; sklearn.datasets&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &lt;span class=&quot;string&quot;&gt;&quot;/home/experiment/huqiu/anaconda3/lib/python3.6/site-packages/sklearn/__init__.py&quot;&lt;/span&gt;, line &lt;span class=&quot;number&quot;&gt;134&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &amp;lt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    from .base &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;string&quot;&gt; clone&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &lt;span class=&quot;string&quot;&gt;&quot;/home/experiment/huqiu/anaconda3/lib/python3.6/site-packages/sklearn/base.py&quot;&lt;/span&gt;, line &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &amp;lt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    from scipy &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;string&quot;&gt; sparse&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &lt;span class=&quot;string&quot;&gt;&quot;/home/experiment/huqiu/anaconda3/lib/python3.6/site-packages/scipy/sparse/__init__.py&quot;&lt;/span&gt;, line &lt;span class=&quot;number&quot;&gt;229&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &amp;lt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    from .csr &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;string&quot;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &lt;span class=&quot;string&quot;&gt;&quot;/home/experiment/huqiu/anaconda3/lib/python3.6/site-packages/scipy/sparse/csr.py&quot;&lt;/span&gt;, line &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &amp;lt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    from ._sparsetools &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;string&quot;&gt; csr_tocsc, csr_tobsr, csr_count_blocks, \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;ImportError&lt;/span&gt;: /lib64/libstdc++.so&lt;span class=&quot;number&quot;&gt;.6&lt;/span&gt;: version &lt;span class=&quot;string&quot;&gt;`CXXABI_1.3.9&#39; not found (required by /home/experiment/huqiu/anaconda3/lib/python3.6/site-packages/scipy/sparse/_sparsetools.cpython-36m-x86_64-linux-gnu.so)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;系统的库文件较老，不含CXXABI_1.3.9，可将&lt;code&gt;&amp;lt;Anaconda_PATH&amp;gt;/lib&lt;/code&gt;加入&lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;中，像这样：&lt;br&gt;&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;export LD_LIBRARY_PATH=&lt;span class=&quot;regexp&quot;&gt;/home/&lt;/span&gt;../anaconda3/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;:$&lt;span class=&quot;title&quot;&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如此，系统会先找到anaconda里面的lib，从而满足要求。&lt;/p&gt;
&lt;p&gt;参考：Stackoverflow. &lt;a href=&quot;https://stackoverflow.com/questions/49875588/importerror-lib64-libstdc-so-6-version-cxxabi-1-3-9-not-found&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;问题2&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;分布式Tensorflow-ps端运行出现tensorflow-python-framework-errors-impl-UnavailableError-OS-Error&quot;&gt;&lt;a href=&quot;#分布式Tensorflow-ps端运行出现tensorflow-python-framework-errors-impl-UnavailableError-OS-Error&quot; class=&quot;headerlink&quot; title=&quot;分布式Tensorflow, ps端运行出现tensorflow.python.framework.errors_impl.UnavailableError: OS Error&quot;&gt;&lt;/a&gt;分布式Tensorflow, ps端运行出现tensorflow.python.framework.errors_impl.UnavailableError: OS Error&lt;/h3&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2018-12-07 15:40:05.167922: I tensorflow/core/distributed_runtime/rpc/grpc_channel.&lt;span class=&quot;keyword&quot;&gt;cc&lt;/span&gt;:222] Initialize GrpcChannelCache &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; job ps -&amp;gt; &amp;#123;0 -&amp;gt; localhost:3333&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2018-12-07 15:40:05.167970: I tensorflow/core/distributed_runtime/rpc/grpc_channel.&lt;span class=&quot;keyword&quot;&gt;cc&lt;/span&gt;:222] Initialize GrpcChannelCache &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; job worker -&amp;gt; &amp;#123;0 -&amp;gt; 192.168.100.36:3333, 1 -&amp;gt; 192.168.100.37:3333&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2018-12-07 15:40:05.171857: I tensorflow/core/distributed_runtime/rpc/grpc_server_lib.&lt;span class=&quot;keyword&quot;&gt;cc&lt;/span&gt;:381] Started server with target: grpc:&lt;span class=&quot;comment&quot;&gt;//localhost:3333&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Parameter server: waiting &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;cluster&lt;/span&gt; connection...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2018-12-07 15:40:05.213496: &lt;span class=&quot;keyword&quot;&gt;E&lt;/span&gt; tensorflow/core/distributed_runtime/master.&lt;span class=&quot;keyword&quot;&gt;cc&lt;/span&gt;:315] CreateSession failed because worker /job:worker/replica:0/task:0 returned &lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt;: Unavailable: OS &lt;span class=&quot;keyword&quot;&gt;Error&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2018-12-07 15:40:05.213645: &lt;span class=&quot;keyword&quot;&gt;E&lt;/span&gt; tensorflow/core/distributed_runtime/master.&lt;span class=&quot;keyword&quot;&gt;cc&lt;/span&gt;:315] CreateSession failed because worker /job:worker/replica:0/task:1 returned &lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt;: Unavailable: OS &lt;span class=&quot;keyword&quot;&gt;Error&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;/home/experiment/huqiu/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;line&lt;/span&gt; 1334, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; _do_call&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; fn(*&lt;span class=&quot;keyword&quot;&gt;args&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;/home/experiment/huqiu/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;line&lt;/span&gt; 1317, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; _run_fn&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self._extend_graph()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;/home/experiment/huqiu/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;line&lt;/span&gt; 1352, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; _extend_graph&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tf_session.ExtendSession(self._session)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow.python.framework.errors_impl.UnavailableError: OS &lt;span class=&quot;keyword&quot;&gt;Error&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;During handling of the above exception, another exception occurred:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;trainer.py&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;line&lt;/span&gt; 364, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tf.&lt;span class=&quot;keyword&quot;&gt;app&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;run&lt;/span&gt;(main=main, argv=[sys.argv[0]] + unparsed)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;/home/experiment/huqiu/anaconda3/lib/python3.6/site-packages/tensorflow/python/platform/app.py&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;line&lt;/span&gt; 125, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;run&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _sys.&lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt;(main(argv))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;trainer.py&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;line&lt;/span&gt; 70, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    num_classes=num_classes)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;trainer.py&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;line&lt;/span&gt; 138, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; parameter_server&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sess.&lt;span class=&quot;keyword&quot;&gt;run&lt;/span&gt;(tf.report_uninitialized_variables())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;/home/experiment/huqiu/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;line&lt;/span&gt; 929, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;run&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    run_metadata_ptr)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;/home/experiment/huqiu/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;line&lt;/span&gt; 1152, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; _run&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    feed_dict_tensor, options, run_metadata)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;/home/experiment/huqiu/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;line&lt;/span&gt; 1328, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; _do_run&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    run_metadata)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;/home/experiment/huqiu/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;line&lt;/span&gt; 1348, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; _do_call&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    raise &lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;e&lt;/span&gt;)(node_def, op, message)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorflow.python.framework.errors_impl.UnavailableError: OS &lt;span class=&quot;keyword&quot;&gt;Error&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如上所示，运行多机分布式 tensorflow 的 parameter server 进程时，出现这个错误。&lt;br&gt;&lt;a href=&quot;https://github.com/tensorflow/tensorflow/issues/17852#issuecomment-414470314&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;说道：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This has been troubling me for a while. I found out that the problem&lt;br&gt;is that GRPC uses the native “epoll” polling engine for communication.&lt;br&gt;Changing this to a portable polling engine solved this issue for me.&lt;br&gt;The way to do is to set the environment variable,&lt;br&gt;“GRPC_POLL_STRATEGY=poll” before running the tensorflow programs. This&lt;br&gt;solved this issue for me. For reference, see,&lt;br&gt;&lt;a href=&quot;https://github.com/grpc/grpc/blob/master/doc/environment_variables.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/grpc/grpc/blob/master/doc/environment_variables.md&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;按照其所属，在环境变量中新增一条：&lt;br&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;export&lt;/span&gt; GRPC_POLL_STRATEGY=&lt;span class=&quot;literal&quot;&gt;poll&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;成功解决问题。&lt;/p&gt;
&lt;h2 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;&gt;&lt;/a&gt;参考文献&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://bbs.huaweicloud.com/blogs/463145f7a1d111e89fc57ca23e93a89f&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;问题1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/shenqixiaojiang/distributeTensorflow/issues/2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;问题1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文记录笔者在Tensorflow使用上的一些错误的集锦，方便后来人迅速查阅解决问题。&lt;/p&gt;
&lt;p&gt;我是留白。&lt;/p&gt;
&lt;p&gt;我是留白。&lt;/p&gt;
&lt;h3 id=&quot;CreateSession-still-waiting-for-response-from-worker-jo
    
    </summary>
    
      <category term="大数据系统与技术 | Big Data" scheme="http://whatbeg.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B3%BB%E7%BB%9F%E4%B8%8E%E6%8A%80%E6%9C%AF-Big-Data/"/>
    
    
      <category term="大数据" scheme="http://whatbeg.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="深度学习" scheme="http://whatbeg.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="TensorFlow" scheme="http://whatbeg.com/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>远程访问二跳节点的Jupyter Notebook</title>
    <link href="http://whatbeg.com/2018/12/05/jupyternotebook-1.html"/>
    <id>http://whatbeg.com/2018/12/05/jupyternotebook-1.html</id>
    <published>2018-12-05T15:13:49.000Z</published>
    <updated>2018-12-08T15:10:31.452Z</updated>
    
    <content type="html">&lt;p&gt;用 Jupyter Notebook 运行 Python 程序时，本机有些吃力，于是想转向集群的服务器来运行。&lt;/p&gt;
&lt;p&gt;可是本机和集群服务器之间还有一个跳板机，横加阻隔，较为麻烦，最终经过一段时间的摸索，决定采用两边各进一步的方法：服务端 jupyter notebook 远程访问 + 本机端端口转发。&lt;/p&gt;
&lt;p&gt;为便于说明，设本机为A，跳板机B，目标运行服务器C。我们的 notebook 将在C上运行。&lt;/p&gt;
&lt;p&gt;首先配置C上的notebook，使得可以被内网别的机器（如B）直接访问。&lt;/p&gt;
&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;. 登陆远程服务器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.生成配置文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;jupyter notebook --generate-config&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;. 修改默认配置文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;vim ~&lt;span class=&quot;regexp&quot;&gt;/.jupyter/jupyter&lt;/span&gt;_notebook_config.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;进行如下修改：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c.NotebookApp.ip = &lt;span class=&quot;string&quot;&gt;&#39;0.0.0.0&#39;&lt;/span&gt;      &lt;span class=&quot;comment&quot;&gt;# 支持其它IP访问，关键&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c.NotebookApp.port = &lt;span class=&quot;number&quot;&gt;8888&lt;/span&gt;         &lt;span class=&quot;comment&quot;&gt;# Jupyter Notebook 惯用端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;. 启动jupyter notebook：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;jupyter notebook&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;启动后如下图所示，&lt;br&gt;&lt;img src=&quot;https://gitee.com/whyseek/blogimages/raw/master/jupyter_notebook.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;记住图中的&lt;code&gt;http://0.0.0.0:8888/?token&lt;/code&gt;后面的token, 后面认证需要用。&lt;/p&gt;
&lt;p&gt;这样我们第一步就做完了，这时，在跳板机B上可以随便访问C的8888端口，即其jupyter notebook。&lt;/p&gt;
&lt;p&gt;第二部就是建立端口转发，使得我们在本地浏览器中输入&lt;code&gt;localhost:xxxx&lt;/code&gt;即可以经过跳板机访问&lt;code&gt;C:8888&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;通过ssh可以建立本地转发。&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh -f -NL &lt;span class=&quot;number&quot;&gt;16888&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&amp;lt;C_ip&amp;gt;&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;8888&lt;/span&gt; [username@]&amp;lt;B_ip&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样意味着我们访问&lt;code&gt;localhost:16888&lt;/code&gt;端口时可以通过B转发到&lt;c_ip&gt;:8888，也即我们可以访问C的notebook啦。&lt;/c_ip&gt;&lt;/p&gt;
&lt;p&gt;最开始的时候会让输入密码，在最下面输入刚说的token，然后设置新密码即可。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;用 Jupyter Notebook 运行 Python 程序时，本机有些吃力，于是想转向集群的服务器来运行。&lt;/p&gt;
&lt;p&gt;可是本机和集群服务器之间还有一个跳板机，横加阻隔，较为麻烦，最终经过一段时间的摸索，决定采用两边各进一步的方法：服务端 jupyter notebo
    
    </summary>
    
      <category term="大数据系统与技术 | Big Data" scheme="http://whatbeg.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B3%BB%E7%BB%9F%E4%B8%8E%E6%8A%80%E6%9C%AF-Big-Data/"/>
    
    
      <category term="工具使用" scheme="http://whatbeg.com/tags/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7 卸载CUDA 9.1 安装CUDA8.0 并安装Tensorflow GPU版</title>
    <link href="http://whatbeg.com/2018/03/17/cudainstall.html"/>
    <id>http://whatbeg.com/2018/03/17/cudainstall.html</id>
    <published>2018-03-17T08:46:42.000Z</published>
    <updated>2018-03-18T06:31:26.936Z</updated>
    
    <content type="html">&lt;p&gt;事前各软件版本：&lt;br&gt;NVIDIA驱动：390.25&lt;br&gt;CUDA: 9.1&lt;/p&gt;
&lt;p&gt;现在Tensorflow不支持CUDA 9.1，所以采用降级的办法来解决，将CUDA降为8.0，由于NVIDIA驱动可以向下兼容，所以不用卸载NVIDIA驱动。当然也可以不卸载9.1，但是安装目录下cuda软连接指向cuda-8.0即可。&lt;/p&gt;
&lt;h2 id=&quot;卸载CUDA-9-1-（可选）&quot;&gt;&lt;a href=&quot;#卸载CUDA-9-1-（可选）&quot; class=&quot;headerlink&quot; title=&quot;卸载CUDA 9.1 （可选）&quot;&gt;&lt;/a&gt;卸载CUDA 9.1 （可选）&lt;/h2&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;cd&lt;/span&gt; /usr/&lt;span class=&quot;keyword&quot;&gt;local&lt;/span&gt;/cuda-9.1/bin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ./uninstall_cuda_toolkit_9.1.&lt;span class=&quot;keyword&quot;&gt;pl&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;安装CUDA-8-0&quot;&gt;&lt;a href=&quot;#安装CUDA-8-0&quot; class=&quot;headerlink&quot; title=&quot;安装CUDA 8.0&quot;&gt;&lt;/a&gt;安装CUDA 8.0&lt;/h2&gt;&lt;p&gt;从官网下载&lt;a href=&quot;https://developer.nvidia.com/cuda-80-ga2-download-archive&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CUDA 8.0 ToolKit&lt;/a&gt;。&lt;br&gt;这里我下载的是&lt;code&gt;cuda_8.0.61_375.26_linux.run&lt;/code&gt;，并下载补丁&lt;code&gt;cuda_8.0.61.2_linux.run&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;进入root用户，将上述两个文件拷贝到&lt;code&gt;/root&lt;/code&gt;（或其他地方），直接用root用户较方便。&lt;/p&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;chmod +x cuda_8&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.61&lt;/span&gt;*  &lt;span class=&quot;comment&quot;&gt;# 加上执行权限&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./cuda_8&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.61&lt;/span&gt;_375&lt;span class=&quot;number&quot;&gt;.26&lt;/span&gt;_linux.&lt;span class=&quot;built_in&quot;&gt;run&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;第一个问题，是否安装NVIDIA驱动，选n（不安装）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;其他问题自己决定，默认装到/usr/&lt;span class=&quot;keyword&quot;&gt;local&lt;/span&gt;即可&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后可以到Samples目录，先make编译，然后到bin下找到&lt;code&gt;deviceQuery&lt;/code&gt;，执行&lt;code&gt;./deviceQuery&lt;/code&gt;，&lt;br&gt;如果安装成功应该会显示类似如下信息：&lt;br&gt;&lt;figure class=&quot;highlight nix&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...(省略)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deviceQuery, CUDA &lt;span class=&quot;attr&quot;&gt;Driver&lt;/span&gt; = CUDART, CUDA Driver &lt;span class=&quot;attr&quot;&gt;Version&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;9.1&lt;/span&gt;, CUDA Runtime &lt;span class=&quot;attr&quot;&gt;Version&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;8.0&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;NumDevs&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;Device0&lt;/span&gt; = Tesla K80, &lt;span class=&quot;attr&quot;&gt;Device0&lt;/span&gt; = Tesla K80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;Result&lt;/span&gt; = PASS&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装cuDNN&quot;&gt;&lt;a href=&quot;#安装cuDNN&quot; class=&quot;headerlink&quot; title=&quot;安装cuDNN&quot;&gt;&lt;/a&gt;安装cuDNN&lt;/h2&gt;&lt;p&gt;cuDNN是NVIDIA专为Deep Learning应用开发的支持库。&lt;br&gt;我们打算安装Tensorflow 1.4.0，该版本要求&lt;code&gt;libcudnn.so.6&lt;/code&gt;，所以下载v6版本的cuDNN。&lt;br&gt;到&lt;a href=&quot;https://developer.nvidia.com/rdp/cudnn-download&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里下载&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载：&lt;code&gt;cudnn-8.0-linux-x64-v6.0.tgz&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;将其传到&lt;code&gt;/usr/local&lt;/code&gt;目录下，然后解压即可：&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;-zxvf&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;cudnn-8&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.0-linux-x64-v6&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.tgz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样就成功安装了CUDA 8.0这一套，但是驱动仍然用的高版本驱动390.25，不过应该没关系的吧。&lt;/p&gt;
&lt;h2 id=&quot;添加环境变量&quot;&gt;&lt;a href=&quot;#添加环境变量&quot; class=&quot;headerlink&quot; title=&quot;添加环境变量&quot;&gt;&lt;/a&gt;添加环境变量&lt;/h2&gt;&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;添加：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export LD_LIBRARY_PATH=/usr/local/cuda-&lt;span class=&quot;number&quot;&gt;8.0&lt;/span&gt;/lib64:/usr/local/cuda-&lt;span class=&quot;number&quot;&gt;8.0&lt;/span&gt;/extras/CUPTI/lib64:$LD_LIBRARY_PATH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export CUDA_HOME=/usr/local/cuda-&lt;span class=&quot;number&quot;&gt;8.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export PATH=$CUDA_HOME/bin:$PATH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;source .bashrc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;安装Tensorflow&quot;&gt;&lt;a href=&quot;#安装Tensorflow&quot; class=&quot;headerlink&quot; title=&quot;安装Tensorflow&quot;&gt;&lt;/a&gt;安装Tensorflow&lt;/h2&gt;&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; tensorflow-gpu==&lt;span class=&quot;number&quot;&gt;1.4&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;试一把，import tensorflow成功即说明CUDA，cuDNN安装完成，且版本没问题。&lt;/p&gt;
&lt;p&gt;运行两个GPU的例子：&lt;br&gt;&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import tensorflow &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; tf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; d &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&#39;/device:GPU:0&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;/device:GPU:1&#39;&lt;/span&gt;]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; tf.device(d):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;a&lt;/span&gt; = tf.&lt;span class=&quot;built_in&quot;&gt;constant&lt;/span&gt;([&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6.0&lt;/span&gt;], shape=[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        b = tf.&lt;span class=&quot;built_in&quot;&gt;constant&lt;/span&gt;([&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5.0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6.0&lt;/span&gt;], shape=[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        c.append(tf.matmul(&lt;span class=&quot;keyword&quot;&gt;a&lt;/span&gt;, b))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; tf.device(&lt;span class=&quot;string&quot;&gt;&#39;/cpu:0&#39;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;sum&lt;/span&gt; = tf.add_n(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Creates a session with log_device_placement set to True.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sess = tf.Session(config=tf.ConfigProto(log_device_placement=True))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Runs the op.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(sess.run(&lt;span class=&quot;built_in&quot;&gt;sum&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输出：&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;MatMul_1:&lt;/span&gt; (MatMul): &lt;span class=&quot;regexp&quot;&gt;/job:localhost/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;replica:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/task:0/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;device:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;GPU:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;00.759031&lt;/span&gt;: I tensorflow&lt;span class=&quot;regexp&quot;&gt;/core/&lt;/span&gt;common_runtime&lt;span class=&quot;regexp&quot;&gt;/placer.cc:874] MatMul_1: (MatMul)/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;job:&lt;/span&gt;localhost&lt;span class=&quot;regexp&quot;&gt;/replica:0/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;task:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;/&lt;span class=&quot;string&quot;&gt;device:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;GPU:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;MatMul:&lt;/span&gt; (MatMul): &lt;span class=&quot;regexp&quot;&gt;/job:localhost/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;replica:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/task:0/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;device:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;GPU:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;00.759079&lt;/span&gt;: I tensorflow&lt;span class=&quot;regexp&quot;&gt;/core/&lt;/span&gt;common_runtime&lt;span class=&quot;regexp&quot;&gt;/placer.cc:874] MatMul: (MatMul)/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;job:&lt;/span&gt;localhost&lt;span class=&quot;regexp&quot;&gt;/replica:0/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;task:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;/&lt;span class=&quot;string&quot;&gt;device:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;GPU:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;AddN:&lt;/span&gt; (AddN): &lt;span class=&quot;regexp&quot;&gt;/job:localhost/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;replica:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/task:0/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;device:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;CPU:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;00.759100&lt;/span&gt;: I tensorflow&lt;span class=&quot;regexp&quot;&gt;/core/&lt;/span&gt;common_runtime&lt;span class=&quot;regexp&quot;&gt;/placer.cc:874] AddN: (AddN)/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;job:&lt;/span&gt;localhost&lt;span class=&quot;regexp&quot;&gt;/replica:0/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;task:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;/&lt;span class=&quot;string&quot;&gt;device:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;CPU:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;Const_3:&lt;/span&gt; (Const): &lt;span class=&quot;regexp&quot;&gt;/job:localhost/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;replica:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/task:0/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;device:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;GPU:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;00.759126&lt;/span&gt;: I tensorflow&lt;span class=&quot;regexp&quot;&gt;/core/&lt;/span&gt;common_runtime&lt;span class=&quot;regexp&quot;&gt;/placer.cc:874] Const_3: (Const)/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;job:&lt;/span&gt;localhost&lt;span class=&quot;regexp&quot;&gt;/replica:0/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;task:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;/&lt;span class=&quot;string&quot;&gt;device:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;GPU:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;Const_2:&lt;/span&gt; (Const): &lt;span class=&quot;regexp&quot;&gt;/job:localhost/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;replica:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/task:0/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;device:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;GPU:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;00.759145&lt;/span&gt;: I tensorflow&lt;span class=&quot;regexp&quot;&gt;/core/&lt;/span&gt;common_runtime&lt;span class=&quot;regexp&quot;&gt;/placer.cc:874] Const_2: (Const)/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;job:&lt;/span&gt;localhost&lt;span class=&quot;regexp&quot;&gt;/replica:0/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;task:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;/&lt;span class=&quot;string&quot;&gt;device:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;GPU:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;Const_1:&lt;/span&gt; (Const): &lt;span class=&quot;regexp&quot;&gt;/job:localhost/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;replica:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/task:0/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;device:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;GPU:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;00.759167&lt;/span&gt;: I tensorflow&lt;span class=&quot;regexp&quot;&gt;/core/&lt;/span&gt;common_runtime&lt;span class=&quot;regexp&quot;&gt;/placer.cc:874] Const_1: (Const)/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;job:&lt;/span&gt;localhost&lt;span class=&quot;regexp&quot;&gt;/replica:0/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;task:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;/&lt;span class=&quot;string&quot;&gt;device:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;GPU:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;Const:&lt;/span&gt; (Const): &lt;span class=&quot;regexp&quot;&gt;/job:localhost/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;replica:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/task:0/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;device:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;GPU:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-12&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;00.759185&lt;/span&gt;: I tensorflow&lt;span class=&quot;regexp&quot;&gt;/core/&lt;/span&gt;common_runtime&lt;span class=&quot;regexp&quot;&gt;/placer.cc:874] Const: (Const)/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;job:&lt;/span&gt;localhost&lt;span class=&quot;regexp&quot;&gt;/replica:0/&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;task:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;/&lt;span class=&quot;string&quot;&gt;device:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;GPU:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[ &lt;span class=&quot;number&quot;&gt;44.&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;56.&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [ &lt;span class=&quot;number&quot;&gt;98.&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;128.&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从输出结果看，确实使用了两块GPU，基本说明可以同时使用两块GPU。&lt;/p&gt;
&lt;h2 id=&quot;进一步的例子：CIFAR10多GPU训练&quot;&gt;&lt;a href=&quot;#进一步的例子：CIFAR10多GPU训练&quot; class=&quot;headerlink&quot; title=&quot;进一步的例子：CIFAR10多GPU训练&quot;&gt;&lt;/a&gt;进一步的例子：CIFAR10多GPU训练&lt;/h2&gt;&lt;p&gt;进一步地，我们采用Tensorflow的tutorial中的一个例子来验证多块GPU卡带来的加速效果。&lt;/p&gt;
&lt;p&gt;Tutorial地址见&lt;a href=&quot;https://www.tensorflow.org/tutorials/deep_cnn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;br&gt;具体model训练程序在&lt;a href=&quot;https://github.com/tensorflow/models/tree/master/tutorials/image/cifar10&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;运行cifar10多GPU训练，&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;python cifar10_multi_gpu_train&lt;span class=&quot;selector-class&quot;&gt;.py&lt;/span&gt; --num_gpus=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以用如下命令设置每隔一秒查看一下GPU状态：&lt;br&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;nvidia&lt;/span&gt;-&lt;span class=&quot;keyword&quot;&gt;smi &lt;/span&gt;-l &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;或者使用gpustat工具，更简洁的观察GPU动态状态变化：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; gpustat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;watch &lt;span class=&quot;comment&quot;&gt;--color -n1 gpustat -cpu&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可见在两块Tesla P100上，训练吞吐率大约为 34000 image/sec 左右，在单块 GPU 上，训练吞吐率大约最高为 19000 image/sec。从目前结果看来，虽然两块GPU能够大大加速训练，但是毕竟还是无法做到标准的线性的加速。&lt;/p&gt;
&lt;h2 id=&quot;本地查看远程服务器Tensorboard-Windows-Linux&quot;&gt;&lt;a href=&quot;#本地查看远程服务器Tensorboard-Windows-Linux&quot; class=&quot;headerlink&quot; title=&quot;本地查看远程服务器Tensorboard (Windows, Linux)&quot;&gt;&lt;/a&gt;本地查看远程服务器Tensorboard (Windows, Linux)&lt;/h2&gt;&lt;p&gt;核心思想是利用SSH的转发/隧道机制。Tensorboard起在远程服务器本地6006端口，我们本地用一个端口去访问比如16006，我们建立一个隧道，将我们对16006端口的访问转发到远程服务器的6006端口即可。&lt;/p&gt;
&lt;p&gt;一般本地和远程在一个局域网内，可以如下做：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在Lunux下:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;ssh&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;-L&lt;/span&gt; 16006&lt;span class=&quot;selector-pseudo&quot;&gt;:127.0.0.1&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:6006&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;user&lt;/span&gt;@&lt;span class=&quot;keyword&quot;&gt;server.address&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tensorboard –logdir=”tensorboard”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;在本地主机访问 http://&lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;16006&lt;/span&gt;/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;建立本地16006端口到服务器6006端口的正向转发&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows下：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Windows 10中除了一个开发者模式，内嵌一个linux系统，可以进入如上做。但是一般我们在Windows下还是用putty，Xshell，MobaXterm等远程登录软件为主，这里以Xshell为例。&lt;/p&gt;
&lt;p&gt;步骤为：&lt;br&gt;1、新建一个会话指向服务器，设置属性，点“隧道”，然后点中间的“添加”，添加的信息如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog-image-1256228880.cos.ap-beijing.myqcloud.com/xshell.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;X11转移那里打钩，也必须保证远程服务器允许X11转发，具体的，在&lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;中设置&lt;code&gt;X11forwarding&lt;/code&gt;为&lt;code&gt;yes&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;这样即建立了一个隧道。然后在服务器上启动Tensorboard，在本地浏览器打开&lt;code&gt;http://127.0.0.1:16006&lt;/code&gt;即可访问TensorBoard。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;客户端位于外网&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然还有一种情况就是客户端位于外网，无法直接建立隧道。&lt;/p&gt;
&lt;p&gt;此种情况下 [1]，服务器可以通过IP地址寻址客户端，所以在服务器端建立与客户端的反向链接。通过-N -f后台运行。具体命令为：&lt;/p&gt;
&lt;p&gt;在服务器主机上执行：&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh -f -NR &amp;lt;client_port&amp;gt;&lt;span class=&quot;symbol&quot;&gt;:localhost&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&amp;lt;server_port&amp;gt;&lt;/span&gt; [username@]&amp;lt;client_ip_address&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;除了本地查看Tensorboard，也可以启动服务器桌面来直接看Tensorboard。具体可以安装VNC Server和Viewer。&lt;/p&gt;
&lt;h2 id=&quot;安装VNC-Server-amp-Viewer&quot;&gt;&lt;a href=&quot;#安装VNC-Server-amp-Viewer&quot; class=&quot;headerlink&quot; title=&quot;安装VNC (Server &amp;amp; Viewer)&quot;&gt;&lt;/a&gt;安装VNC (Server &amp;amp; Viewer)&lt;/h2&gt;&lt;p&gt;1、服务器安装VNC Server: &lt;code&gt;yum -y install tigervnc-server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2、配置分辨率和用户登录信息&lt;br&gt;&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# vim &lt;span class=&quot;regexp&quot;&gt;/lib/&lt;/span&gt;systemd&lt;span class=&quot;regexp&quot;&gt;/system/&lt;/span&gt;vncserver@.service&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;写入&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;VNCSERVERS=&lt;span class=&quot;string&quot;&gt;&quot;2:root&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;VNCSERVERARGS[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]=&lt;span class=&quot;string&quot;&gt;&quot;-geometry 1024x768&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3、下载VNC Viewer，VNC Viewer连接，可能出现Timeout的问题，可能是服务器设置了防火墙，如下命令关闭：&lt;br&gt;&lt;figure class=&quot;highlight pf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;iptables -I INPUT -p tcp --dport &lt;span class=&quot;number&quot;&gt;5801&lt;/span&gt; -j ACCEPT  &lt;span class=&quot;comment&quot;&gt;# 浏览器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;iptables -I INPUT -p tcp --dport &lt;span class=&quot;number&quot;&gt;5901&lt;/span&gt; -j ACCEPT  &lt;span class=&quot;comment&quot;&gt;# VNC Viewer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;或者进入/etc/sysconfig/iptables添加一行：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-A INPUT -m &lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt; --state NEW -m tcp -p tcp --dport &lt;span class=&quot;number&quot;&gt;5900&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;5903&lt;/span&gt; -j ACCEPT&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;黑屏解决方案：&lt;br&gt;在&lt;code&gt;/root/.vnc/xtartup&lt;/code&gt;文件中：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# unset SESSION_MANAGER &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# exec /etc/X11/xinit/xinitrc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;注释掉以上两行，添加如下几行：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ -x /etc/.vnc/xstartup ] &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; /etc/.vnc/xstartup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ -r &lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/.Xresources ] &amp;amp;&amp;amp; xrdb &lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/.Xresources &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xsetroot -solid grey &lt;span class=&quot;comment&quot;&gt;#vncconfig -iconic &amp;amp; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xterm -geometry 80x24+10+10 -ls -title &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$VNCDESKTOP&lt;/span&gt; Desktop&quot;&lt;/span&gt; &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;twm &amp;amp; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gnome-session &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;本文主要讲述了CUDA 8.0的安装细节，TensorFlow的安装，多GPU训练实例，以及远程服务器TensorBoard查看，以及VNC（Virtual Network Console）的服务端和客户端的安装。&lt;br&gt;更多的一些错误及解决方案因为目前还解决不全，一律放到后面的&lt;a href=&quot;&quot;&gt;《TensorFlow, GPU错误及优化集锦》&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;References&quot;&gt;&lt;a href=&quot;#References&quot; class=&quot;headerlink&quot; title=&quot;References&quot;&gt;&lt;/a&gt;References&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/silent56_th/article/details/69367446&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[1] 远程使用内网服务器的tensorboard和jupyter notebook&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/-chaos/p/3378564.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[2] ssh -D -L -R 差异&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/31457591&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[3] 跑深度学习代码在linux服务器上的常用操作(ssh,screen,tensorboard,jupyter notebook)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.xshellcn.com/wenti/xsh-ssh.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[4] 如何在xshell中创建一个SSH隧道&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/31558973&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[5] 科普帖：深度学习中GPU和显存分析&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;事前各软件版本：&lt;br&gt;NVIDIA驱动：390.25&lt;br&gt;CUDA: 9.1&lt;/p&gt;
&lt;p&gt;现在Tensorflow不支持CUDA 9.1，所以采用降级的办法来解决，将CUDA降为8.0，由于NVIDIA驱动可以向下兼容，所以不用卸载NVIDIA驱动。当然也可以不卸载9
    
    </summary>
    
      <category term="错误解决与优化 | Err&Opt" scheme="http://whatbeg.com/categories/%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E4%B8%8E%E4%BC%98%E5%8C%96-Err-Opt/"/>
    
    
      <category term="Deep Learning" scheme="http://whatbeg.com/tags/Deep-Learning/"/>
    
      <category term="TensorFlow" scheme="http://whatbeg.com/tags/TensorFlow/"/>
    
      <category term="GPU" scheme="http://whatbeg.com/tags/GPU/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7.x 安装Caffe GPU版本全过程</title>
    <link href="http://whatbeg.com/2018/03/15/caffeinstall.html"/>
    <id>http://whatbeg.com/2018/03/15/caffeinstall.html</id>
    <published>2018-03-15T14:09:46.000Z</published>
    <updated>2018-03-20T13:33:28.955Z</updated>
    
    <content type="html">&lt;p&gt;本文假设已经安装好了CUDA 8.0，NVIDIA GPU驱动以及cuDNN且读者主机可以连接互联网。&lt;/p&gt;
&lt;p&gt;CUDA 8.0的安装也可见&lt;a href=&quot;http://whatbeg.com/2018/03/17/cudainstall.html&quot;&gt;《CentOS 7 卸载CUDA 9.1 安装CUDA8.0》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;建议先通读本文再决定安装步骤，直接按照本文一步一步来并不是最佳实践，因为本文踩过一些坑。&lt;/p&gt;
&lt;h2 id=&quot;安装一些通用的依赖：&quot;&gt;&lt;a href=&quot;#安装一些通用的依赖：&quot; class=&quot;headerlink&quot; title=&quot;安装一些通用的依赖：&quot;&gt;&lt;/a&gt;安装一些通用的依赖：&lt;/h2&gt;&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo yum &lt;span class=&quot;keyword&quot;&gt;install &lt;/span&gt;protobuf-devel leveldb-devel snappy-devel opencv-devel &lt;span class=&quot;keyword&quot;&gt;boost-devel &lt;/span&gt;hdf5-devel&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;~~&lt;/p&gt;
&lt;p&gt;我&lt;/p&gt;
&lt;p&gt;是&lt;/p&gt;
&lt;p&gt;空&lt;/p&gt;
&lt;p&gt;行&lt;/p&gt;
&lt;p&gt;~~&lt;/p&gt;
&lt;h2 id=&quot;安装cmake&quot;&gt;&lt;a href=&quot;#安装cmake&quot; class=&quot;headerlink&quot; title=&quot;安装cmake&quot;&gt;&lt;/a&gt;安装cmake&lt;/h2&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget https:&lt;span class=&quot;comment&quot;&gt;//cmake.org/files/v3.6/cmake-3.6.0.tar.gz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd cmake-&lt;span class=&quot;number&quot;&gt;3.6&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.tar&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.gz&lt;/span&gt;/ &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./bootstrap &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gmake&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gmake install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;安装glog-gflags-lmdb：&quot;&gt;&lt;a href=&quot;#安装glog-gflags-lmdb：&quot; class=&quot;headerlink&quot; title=&quot;安装glog, gflags, lmdb：&quot;&gt;&lt;/a&gt;安装glog, gflags, lmdb：&lt;/h2&gt;&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# glog&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//storage.googleapis.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;/google-code-archive-downloads/v2/code.google.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;/google-glog/glog-&lt;span class=&quot;number&quot;&gt;0.3&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar zxvf glog-&lt;span class=&quot;number&quot;&gt;0.3&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;cd&lt;/span&gt; glog-&lt;span class=&quot;number&quot;&gt;0.3&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;make&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;make&lt;/span&gt; install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# gflags&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//github.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;/schuhschuh/gflags/archive/master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unzip master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;cd&lt;/span&gt; gflags-master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;mkdir&lt;/span&gt; build &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;cd&lt;/span&gt; build&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export CXXFLAGS=&lt;span class=&quot;string&quot;&gt;&quot;-fPIC&quot;&lt;/span&gt; &amp;amp;&amp;amp; cmake .. &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;make&lt;/span&gt; VERBOSE=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;make&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;make&lt;/span&gt; install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# lmdb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git clone http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//github.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;/LMDB/lmdb.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;cd&lt;/span&gt; lmdb/libraries/liblmdb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;或&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//github.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;/LMDB/lmdb/archive/mdb.master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unzip mdb.master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;cd&lt;/span&gt; lmdb-mdb.master/libraries/liblmdb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;make&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;make&lt;/span&gt; install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;安装atlas&quot;&gt;&lt;a href=&quot;#安装atlas&quot; class=&quot;headerlink&quot; title=&quot;安装atlas&quot;&gt;&lt;/a&gt;安装atlas&lt;/h2&gt;&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; atlas-devel&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;安装NCCL&quot;&gt;&lt;a href=&quot;#安装NCCL&quot; class=&quot;headerlink&quot; title=&quot;安装NCCL&quot;&gt;&lt;/a&gt;安装NCCL&lt;/h2&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;clone&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;https&lt;/span&gt;://github.com/NVIDIA/nccl.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd nccl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;或&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget https://github.com/NVIDIA/nccl/archive/&lt;span class=&quot;literal&quot;&gt;master&lt;/span&gt;.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unzip &lt;span class=&quot;literal&quot;&gt;master&lt;/span&gt;.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd nccl-&lt;span class=&quot;keyword&quot;&gt;master&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;make&lt;/span&gt; install -j4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;安装Caffe&quot;&gt;&lt;a href=&quot;#安装Caffe&quot; class=&quot;headerlink&quot; title=&quot;安装Caffe&quot;&gt;&lt;/a&gt;安装Caffe&lt;/h2&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget https:&lt;span class=&quot;comment&quot;&gt;//github.com/BVLC/caffe/archive/1.0.tar.gz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar -zxvf &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.tar&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.gz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd caffe-&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp Makefile&lt;span class=&quot;selector-class&quot;&gt;.config&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.example&lt;/span&gt; Makefile&lt;span class=&quot;selector-class&quot;&gt;.config&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vim Makefile&lt;span class=&quot;selector-class&quot;&gt;.config&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)取消对行 USE_CUDNN := &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; 的注释。这可以启用 cuDNN 加速。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)取消对行 USE_NCCL := &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; 的注释。这可以启用在多个 GPU 上运行Caffe 所需的 NCCL。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)取消BLAS_LIB的注释，写上BLAS的路径（比如atlas安装在/usr/lib64/atlas下，那就写BLAS_LIB := /usr/lib64/atlas）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make all -j4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;HDF5没有装好，在-usr-include中无法找到，如果能找到但报错：&quot;&gt;&lt;a href=&quot;#HDF5没有装好，在-usr-include中无法找到，如果能找到但报错：&quot; class=&quot;headerlink&quot; title=&quot;HDF5没有装好，在/usr/include中无法找到，如果能找到但报错：&quot;&gt;&lt;/a&gt;HDF5没有装好，在&lt;code&gt;/usr/include&lt;/code&gt;中无法找到，如果能找到但报错：&lt;/h2&gt;&lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;src&lt;span class=&quot;meta-keyword&quot;&gt;/caffe/&lt;/span&gt;layers/hdf5_data_layer.cpp:&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;: fatal error: hdf5.h: No such file or                                                                 directory&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;hdf5.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  ^&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;compilation terminated.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;make:&lt;/span&gt; *** [.build_release&lt;span class=&quot;meta-keyword&quot;&gt;/src/&lt;/span&gt;caffe&lt;span class=&quot;meta-keyword&quot;&gt;/layers/&lt;/span&gt;hdf5_data_layer.o] Error &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;make:&lt;/span&gt; *** Waiting for unfinished jobs....&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;那就修改一下&lt;code&gt;Makefile.config&lt;/code&gt;如下：&lt;br&gt;&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/&lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LIBRARY_DIRS := $(PYTHON_LIB) /usr/local/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt; /&lt;span class=&quot;title&quot;&gt;usr&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/&lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt; /usr/&lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt;/hdf5/&lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt;/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LIBRARY_DIRS := $(PYTHON_LIB) /usr/local/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt; /&lt;span class=&quot;title&quot;&gt;usr&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt; /&lt;span class=&quot;title&quot;&gt;usr&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;include&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;hdf5&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt;/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(具体路径需要看系统)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;重装HDF5&quot;&gt;&lt;a href=&quot;#重装HDF5&quot; class=&quot;headerlink&quot; title=&quot;重装HDF5&quot;&gt;&lt;/a&gt;重装HDF5&lt;/h2&gt;&lt;figure class=&quot;highlight smali&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget https://support.hdfgroup.org/ftp/HDF5/current18/src/hdf5-1.8.20.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar -zxvf hdf5-1.8.20.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;.&lt;/span&gt;/configure --prefix=/usr/include/hdf5  &lt;span class=&quot;comment&quot;&gt;#安装路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make&lt;span class=&quot;built_in&quot;&gt; check &lt;/span&gt;               &lt;span class=&quot;comment&quot;&gt;# run test suite.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make&lt;span class=&quot;built_in&quot;&gt; check-install &lt;/span&gt;       &lt;span class=&quot;comment&quot;&gt;# verify installation.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;第二个找不到的依赖：&quot;&gt;&lt;a href=&quot;#第二个找不到的依赖：&quot; class=&quot;headerlink&quot; title=&quot;第二个找不到的依赖：&quot;&gt;&lt;/a&gt;第二个找不到的依赖：&lt;/h2&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./&lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt;/caffe/util/db_leveldb.hpp:7:24: fatal &lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt;: leveldb/&lt;span class=&quot;keyword&quot;&gt;db&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;h&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;No&lt;/span&gt; such &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt; or directory&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; #&lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;leveldb/db.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        ^&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;compilation terminated.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过如下命令发现也没装上：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ yum &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; leveldb-devel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Loaded plugins: fastestmirror, langpacks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Loading mirror speeds &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; cached hostfile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * base: centos.ustc.edu.cn&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * extras: mirror.&lt;span class=&quot;built_in&quot;&gt;bit&lt;/span&gt;.edu.cn&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * updates: centos.ustc.edu.cn&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;No&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; leveldb-devel available.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Error&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;Nothing&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装leveldb&quot;&gt;&lt;a href=&quot;#安装leveldb&quot; class=&quot;headerlink&quot; title=&quot;安装leveldb&quot;&gt;&lt;/a&gt;安装leveldb&lt;/h2&gt;&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget &lt;span class=&quot;symbol&quot;&gt;https:&lt;/span&gt;/&lt;span class=&quot;regexp&quot;&gt;/github.com/google&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/leveldb/archive&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unzip master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd leveldb-master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp -r include/leveldb&lt;/span&gt; /usr/&lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp libleveldb.so.&lt;span class=&quot;number&quot;&gt;1.18&lt;/span&gt; /usr/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd /usr/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ln -s libleveldb.so.&lt;span class=&quot;number&quot;&gt;1.18&lt;/span&gt; libleveldb.so.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ln -s libleveldb.so.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; libleveldb.so&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ldconfig  &lt;span class=&quot;comment&quot;&gt;# 将动态链接库加到缓存中，这样系统才能真正使用这个动态链接库。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;网上的流程是上面这么说的，但是make完之后居然没有&lt;code&gt;libleveldb.so.1.18&lt;/code&gt;这个东西。&lt;/p&gt;
&lt;h2 id=&quot;修复yum没有hdf5-leveldb等package的问题&quot;&gt;&lt;a href=&quot;#修复yum没有hdf5-leveldb等package的问题&quot; class=&quot;headerlink&quot; title=&quot;修复yum没有hdf5, leveldb等package的问题&quot;&gt;&lt;/a&gt;修复yum没有hdf5, leveldb等package的问题&lt;/h2&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; epel-&lt;span class=&quot;keyword&quot;&gt;release&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;然后再安装leveldb-devel, hdf5-devel就可以了，简直神器&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;据说，leveldb 已经被 caffe 推荐不使用了，可以在 Makefile.config 中将 USE_LEVELDB := 0 注释掉，就不用安装了&lt;a href=&quot;http://blog.leanote.com/post/fishing_piggy/caffe-%E5%AE%89%E8%A3%85%EF%BC%88centos-7%EF%BC%89&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【1】&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;atlas有问题，MKL挺麻烦，换openblas&quot;&gt;&lt;a href=&quot;#atlas有问题，MKL挺麻烦，换openblas&quot; class=&quot;headerlink&quot; title=&quot;atlas有问题，MKL挺麻烦，换openblas&quot;&gt;&lt;/a&gt;atlas有问题，MKL挺麻烦，换openblas&lt;/h2&gt;&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//github.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;/xianyi/OpenBLAS/archive/v0.&lt;span class=&quot;number&quot;&gt;2.20&lt;/span&gt;.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar -zxvf v0.&lt;span class=&quot;number&quot;&gt;2.20&lt;/span&gt;.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;cd&lt;/span&gt; OpenBLAS-&lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;make&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;make&lt;/span&gt; PREFIX=/usr/local install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后在&lt;code&gt;Makefile.config&lt;/code&gt;中改为&lt;code&gt;BLAS := open&lt;/code&gt;即可。&lt;/p&gt;
&lt;h2 id=&quot;最后执行：&quot;&gt;&lt;a href=&quot;#最后执行：&quot; class=&quot;headerlink&quot; title=&quot;最后执行：&quot;&gt;&lt;/a&gt;最后执行：&lt;/h2&gt;&lt;figure class=&quot;highlight gauss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt; all -j4  &lt;span class=&quot;meta&quot;&gt;# 4线程同时编译，可调&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;检测编译是否成功：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt; test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt; runtest&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;运行make-runtest那步出现一些so文件找不到的问题，比如：&quot;&gt;&lt;a href=&quot;#运行make-runtest那步出现一些so文件找不到的问题，比如：&quot; class=&quot;headerlink&quot; title=&quot;运行make runtest那步出现一些so文件找不到的问题，比如：&quot;&gt;&lt;/a&gt;运行&lt;code&gt;make runtest&lt;/code&gt;那步出现一些so文件找不到的问题，比如：&lt;/h2&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.build_release/tools/caffe: &lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; loading shared libraries: libglog.&lt;span class=&quot;keyword&quot;&gt;so&lt;/span&gt;.0: cannot &lt;span class=&quot;keyword&quot;&gt;open&lt;/span&gt; shared object &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;No&lt;/span&gt; such &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt; or directory&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make: *** [&lt;span class=&quot;keyword&quot;&gt;runtest&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;Error&lt;/span&gt; 127&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以及libcudart找不到等。&lt;/p&gt;
&lt;p&gt;对于cuda相关的so文件找不到的问题，我们首先看环境变量是否添加了&lt;br&gt;安装CUDA必要添加环境变量的三行，如果有的话试试source一下。&lt;/p&gt;
&lt;p&gt;对于glog, gflags等依赖so文件缺失的问题，首先要检查环境变量，因为前面我们自己make编译安装的这些以来，好像默认为安装到&lt;code&gt;/usr/local/lib&lt;/code&gt;中，如果这个路径不在环境变量中或者不在&lt;code&gt;Makefild.config&lt;/code&gt;中，就有可能找不到so文件。奇怪的是，我的&lt;code&gt;Makefild.config&lt;/code&gt;中有LIBRARY路径&lt;code&gt;/usr/local/lib&lt;/code&gt;，却还是会报这些so文件找不到，很奇怪。那就在环境变量中添加吧。&lt;/p&gt;
&lt;h2 id=&quot;又提示没有libhdf5-hl-so-10这个文件&quot;&gt;&lt;a href=&quot;#又提示没有libhdf5-hl-so-10这个文件&quot; class=&quot;headerlink&quot; title=&quot;又提示没有libhdf5_hl.so.10这个文件&quot;&gt;&lt;/a&gt;又提示没有&lt;code&gt;libhdf5_hl.so.10&lt;/code&gt;这个文件&lt;/h2&gt;&lt;p&gt;直接yum再安装一下，发现还不行，原因是yum安装的是&lt;code&gt;libhdf5_hl.so.10&lt;/code&gt;，这个so在我们之前源码安装的时候是装在&lt;code&gt;/usr/include/hdf5/lib&lt;/code&gt;中的，所以加一条环境&lt;code&gt;LIBRARY_PATH&lt;/code&gt;到这个地址是比较简便的方法了。&lt;/p&gt;
&lt;h2 id=&quot;不临时的方法修改LIBRARY-PATH&quot;&gt;&lt;a href=&quot;#不临时的方法修改LIBRARY-PATH&quot; class=&quot;headerlink&quot; title=&quot;不临时的方法修改LIBRARY_PATH&quot;&gt;&lt;/a&gt;不临时的方法修改&lt;code&gt;LIBRARY_PATH&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;为了不总在环境变量里面加路径，可以有另外一个方法&lt;br&gt;&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;进入/etc/ld.so.conf.d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;新建一个conf文件：/etc/ld.so.conf.d/glog.conf，里面写：/usr/local/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;再新建一个conf文件：/etc/ld.so.conf.d/hdf5.conf，里面写：/usr/local/hdf5-&lt;span class=&quot;number&quot;&gt;1.8&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;最后执行：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/sbin/ldconfig -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;重新编译&quot;&gt;&lt;a href=&quot;#重新编译&quot; class=&quot;headerlink&quot; title=&quot;重新编译&quot;&gt;&lt;/a&gt;重新编译&lt;/h2&gt;&lt;figure class=&quot;highlight gauss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt; clean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt; all&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt; test &lt;span class=&quot;meta&quot;&gt;#4分钟&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt; runtest &lt;span class=&quot;meta&quot;&gt;#1分钟&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt; pycaffe &lt;span class=&quot;meta&quot;&gt;#40秒&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;make-runtest&quot;&gt;&lt;a href=&quot;#make-runtest&quot; class=&quot;headerlink&quot; title=&quot;make runtest&quot;&gt;&lt;/a&gt;make runtest&lt;/h2&gt;&lt;p&gt;最终，&lt;code&gt;make runtest&lt;/code&gt;语句终于能走通了。&lt;br&gt;&lt;figure class=&quot;highlight scheme&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;name&quot;&gt;----------&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; tests from EuclideanLossLayerTest/3, where TypeParam = caffe::GPUDevice&amp;lt;double&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ RUN      ] EuclideanLossLayerTest/3.TestGradient&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[       OK ] EuclideanLossLayerTest/3.TestGradient (&lt;span class=&quot;name&quot;&gt;23&lt;/span&gt; ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ RUN      ] EuclideanLossLayerTest/3.TestForward&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[       OK ] EuclideanLossLayerTest/3.TestForward (&lt;span class=&quot;name&quot;&gt;1&lt;/span&gt; ms)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;name&quot;&gt;----------&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; tests from EuclideanLossLayerTest/3 (&lt;span class=&quot;name&quot;&gt;24&lt;/span&gt; ms total)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;name&quot;&gt;----------&lt;/span&gt;] Global test environment tear-down&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;name&quot;&gt;==========&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;2101&lt;/span&gt; tests from &lt;span class=&quot;number&quot;&gt;277&lt;/span&gt; test cases ran. (&lt;span class=&quot;name&quot;&gt;614680&lt;/span&gt; ms total)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[  PASSED  ] &lt;span class=&quot;number&quot;&gt;2101&lt;/span&gt; tests.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;验证caffe是否正确安装，以MNIST为例&quot;&gt;&lt;a href=&quot;#验证caffe是否正确安装，以MNIST为例&quot; class=&quot;headerlink&quot; title=&quot;验证caffe是否正确安装，以MNIST为例&quot;&gt;&lt;/a&gt;验证caffe是否正确安装，以MNIST为例&lt;/h2&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo sh data&lt;span class=&quot;regexp&quot;&gt;/mnist/&lt;/span&gt;get_mnist.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;会下载如下数据到data&lt;span class=&quot;regexp&quot;&gt;/mnist/&lt;/span&gt;目录：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;train-images-idx3-&lt;span class=&quot;string&quot;&gt;ubyte:&lt;/span&gt;  训练集样本 (&lt;span class=&quot;number&quot;&gt;9912422&lt;/span&gt; bytes) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;train-labels-idx1-&lt;span class=&quot;string&quot;&gt;ubyte:&lt;/span&gt;  训练集对应标注 (&lt;span class=&quot;number&quot;&gt;28881&lt;/span&gt; bytes) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t10k-images-idx3-&lt;span class=&quot;string&quot;&gt;ubyte:&lt;/span&gt;   测试集图片 (&lt;span class=&quot;number&quot;&gt;1648877&lt;/span&gt; bytes) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t10k-labels-idx1-&lt;span class=&quot;string&quot;&gt;ubyte:&lt;/span&gt;   测试集对应标注 (&lt;span class=&quot;number&quot;&gt;4542&lt;/span&gt; bytes)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这些数据不能在caffe中直接使用，需要转换成LMDB数据：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo sh examples&lt;span class=&quot;regexp&quot;&gt;/mnist/&lt;/span&gt;create_mnist.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;br&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sh examples/mnist/create_mnist.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Creating lmdb...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I&lt;span class=&quot;number&quot;&gt;0316 00:08&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;16.962158&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;8318&lt;/span&gt; db_lmdb.cpp:&lt;span class=&quot;number&quot;&gt;35&lt;/span&gt;] Opened lmdb examples/mnist/mnist_train_lmdb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I&lt;span class=&quot;number&quot;&gt;0316 00:08&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;16.963549&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;8318&lt;/span&gt; convert_mnist_data.cpp:&lt;span class=&quot;number&quot;&gt;88&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt; total of &lt;span class=&quot;number&quot;&gt;60000&lt;/span&gt; items.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I&lt;span class=&quot;number&quot;&gt;0316 00:08&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;16.963567&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;8318&lt;/span&gt; convert_mnist_data.cpp:&lt;span class=&quot;number&quot;&gt;89&lt;/span&gt;] Rows: &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt; Cols: &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I&lt;span class=&quot;number&quot;&gt;0316 00:08&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;20.275429&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;8318&lt;/span&gt; convert_mnist_data.cpp:&lt;span class=&quot;number&quot;&gt;108&lt;/span&gt;] Processed &lt;span class=&quot;number&quot;&gt;60000&lt;/span&gt; files.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I&lt;span class=&quot;number&quot;&gt;0316 00:08&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;23.038358&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;8341&lt;/span&gt; db_lmdb.cpp:&lt;span class=&quot;number&quot;&gt;35&lt;/span&gt;] Opened lmdb examples/mnist/mnist_test_lmdb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I&lt;span class=&quot;number&quot;&gt;0316 00:08&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;23.038920&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;8341&lt;/span&gt; convert_mnist_data.cpp:&lt;span class=&quot;number&quot;&gt;88&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt; total of &lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt; items.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I&lt;span class=&quot;number&quot;&gt;0316 00:08&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;23.038970&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;8341&lt;/span&gt; convert_mnist_data.cpp:&lt;span class=&quot;number&quot;&gt;89&lt;/span&gt;] Rows: &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt; Cols: &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I&lt;span class=&quot;number&quot;&gt;0316 00:08&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;23.549976&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;8341&lt;/span&gt; convert_mnist_data.cpp:&lt;span class=&quot;number&quot;&gt;108&lt;/span&gt;] Processed &lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt; files.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Done.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;【以下来自&lt;a href=&quot;https://www.cnblogs.com/denny402/p/5075490.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Caffe学习系列(9)：运行caffe自带的两个简单例子&lt;/a&gt;】&lt;br&gt;转换成功后，会在 &lt;code&gt;examples/mnist/&lt;/code&gt;目录下，生成两个文件夹，分别是&lt;code&gt;mnist_train_lmdb&lt;/code&gt;和&lt;code&gt;mnist_test_lmdb&lt;/code&gt;，里面存放的&lt;code&gt;data.mdb&lt;/code&gt;和&lt;code&gt;lock.mdb&lt;/code&gt;，就是我们需要的运行数据。&lt;/p&gt;
&lt;p&gt;接下来是修改配置文件，如果你有GPU且已经完全安装好，这一步可以省略，如果没有，则需要修改solver配置文件。&lt;/p&gt;
&lt;p&gt;需要的配置文件有两个，一个是&lt;code&gt;lenet_solver.prototxt&lt;/code&gt;，另一个是&lt;code&gt;train_lenet.prototxt&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;首先打开&lt;code&gt;lenet_solver_prototxt&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo vi examples&lt;span class=&quot;meta-keyword&quot;&gt;/mnist/&lt;/span&gt;lenet_solver.prototxt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;根据需要，在&lt;code&gt;max_iter&lt;/code&gt;处设置最大迭代次数，以及决定最后一行&lt;code&gt;solver_mode&lt;/code&gt;,是否要改成CPU。&lt;/p&gt;
&lt;p&gt;保存退出后，就可以运行这个例子了：&lt;/p&gt;
&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo time &lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt; examples/mnist/train_lenet.&lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;CPU运行时候大约13分钟，GPU运行时间大约4分钟，GPU+cudnn运行时候大约40秒，精度都为99%左右&lt;/p&gt;
&lt;p&gt;【以上就是&lt;a href=&quot;https://www.cnblogs.com/denny402/p/5075490.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Caffe学习系列(9)：运行caffe自带的两个简单例子&lt;/a&gt;】&lt;/p&gt;
&lt;h2 id=&quot;运行成功，最终结果部分如下：&quot;&gt;&lt;a href=&quot;#运行成功，最终结果部分如下：&quot; class=&quot;headerlink&quot; title=&quot;运行成功，最终结果部分如下：&quot;&gt;&lt;/a&gt;运行成功，最终结果部分如下：&lt;/h2&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I&lt;span class=&quot;number&quot;&gt;0316 00:10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;01.473722&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;8369&lt;/span&gt; solver.cpp:&lt;span class=&quot;number&quot;&gt;397&lt;/span&gt;]     Test net output #&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;: accuracy = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;9906&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I&lt;span class=&quot;number&quot;&gt;0316 00:10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;01.473759&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;8369&lt;/span&gt; solver.cpp:&lt;span class=&quot;number&quot;&gt;397&lt;/span&gt;]     Test net output #&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;: loss = &lt;span class=&quot;number&quot;&gt;0.029267&lt;/span&gt; (* &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0.029267&lt;/span&gt; loss)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I&lt;span class=&quot;number&quot;&gt;0316 00:10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;01.473793&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;8369&lt;/span&gt; solver.cpp:&lt;span class=&quot;number&quot;&gt;315&lt;/span&gt;] Optimization Done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I&lt;span class=&quot;number&quot;&gt;0316 00:10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;01.473810&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;8369&lt;/span&gt; caffe.cpp:&lt;span class=&quot;number&quot;&gt;259&lt;/span&gt;] Optimization Done.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;real    &lt;span class=&quot;number&quot;&gt;0m&lt;/span&gt;43.&lt;span class=&quot;number&quot;&gt;368&lt;/span&gt;s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;user    &lt;span class=&quot;number&quot;&gt;0m&lt;/span&gt;34.&lt;span class=&quot;number&quot;&gt;830&lt;/span&gt;s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sys     &lt;span class=&quot;number&quot;&gt;0m&lt;/span&gt;8.&lt;span class=&quot;number&quot;&gt;584&lt;/span&gt;s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;花费40s左右。精度99.06%，其实不高。&lt;/p&gt;
&lt;h2 id=&quot;CIFAR10-例子&quot;&gt;&lt;a href=&quot;#CIFAR10-例子&quot; class=&quot;headerlink&quot; title=&quot;CIFAR10 例子&quot;&gt;&lt;/a&gt;CIFAR10 例子&lt;/h2&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt; data/cifar10/get_cifar10.&lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt; examples/cifar10/create_cifar10.&lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;time &lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt; examples/cifar10/train_quick.&lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;到此，Caffe的安装告完结。&lt;/p&gt;
&lt;h2 id=&quot;编译pycaffe&quot;&gt;&lt;a href=&quot;#编译pycaffe&quot; class=&quot;headerlink&quot; title=&quot;编译pycaffe&quot;&gt;&lt;/a&gt;编译pycaffe&lt;/h2&gt;&lt;p&gt;编译python的caffe接口需要安装boost依赖：&lt;br&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;yum&lt;/span&gt; install &lt;span class=&quot;keyword&quot;&gt;boost-devel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;或者&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;wget&lt;/span&gt; http://dl.&lt;span class=&quot;keyword&quot;&gt;bintray.com/boostorg/release/1.65.0/source/boost_1_65_0.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;tar&lt;/span&gt; -zxvf &lt;span class=&quot;keyword&quot;&gt;boost_1_65_0.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boost_1_65_0/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;./&lt;span class=&quot;keyword&quot;&gt;bootstrap.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;./&lt;span class=&quot;keyword&quot;&gt;b2 &lt;/span&gt;cxxflags=&lt;span class=&quot;string&quot;&gt;&quot;-I /home/hadoop/anaconda3/include/python3.6m/&quot;&lt;/span&gt;                              # python3如此编译&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;sudo&lt;/span&gt; ./&lt;span class=&quot;keyword&quot;&gt;b2 &lt;/span&gt;install --prefix=/usr cxxflags=&lt;span class=&quot;string&quot;&gt;&quot;-I /home/hadoop/anaconda3/include/python3.6m/&quot;&lt;/span&gt;   # python3如此安装&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;因为我们想在python中直接&lt;code&gt;import caffe&lt;/code&gt;，在环境变量中加上：&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;export PYTHONPATH=&lt;span class=&quot;variable&quot;&gt;$PYTHONPATH&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:/home/hadoop/caffe-&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;/python&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;后来发现编译pycaffe还需要安装protobuf依赖，原来anaconda装的不行。&lt;/p&gt;
&lt;p&gt;安装protobuf，&lt;a href=&quot;https://github.com/google/protobuf/releases&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tar -zxvf protobuf-cpp-&lt;span class=&quot;number&quot;&gt;3.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;cd&lt;/span&gt; protobuf-&lt;span class=&quot;number&quot;&gt;3.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;make&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;make&lt;/span&gt; check&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;make&lt;/span&gt; install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ldconfig&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar -zxvf protobuf-&lt;span class=&quot;keyword&quot;&gt;python&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;3.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;python&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;python&lt;/span&gt; setup.&lt;span class=&quot;keyword&quot;&gt;py&lt;/span&gt; build&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;python&lt;/span&gt; setup.&lt;span class=&quot;keyword&quot;&gt;py&lt;/span&gt; test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;python&lt;/span&gt; setup.&lt;span class=&quot;keyword&quot;&gt;py&lt;/span&gt; install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Matlab安装及Caffe编译。&quot;&gt;&lt;a href=&quot;#Matlab安装及Caffe编译。&quot; class=&quot;headerlink&quot; title=&quot;Matlab安装及Caffe编译。&quot;&gt;&lt;/a&gt;Matlab安装及Caffe编译。&lt;/h2&gt;&lt;p&gt;安装默认读者具有三个文件：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;R2017a_glnxa64_dvd1&lt;span class=&quot;selector-class&quot;&gt;.iso&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;R2017a_glnxa64_dvd2&lt;span class=&quot;selector-class&quot;&gt;.iso&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Matlab+&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;a+Linux64+Crack目录，由rar解压而来&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;安装步骤：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir -p /data/matlab/&lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt;       # 新建目录以供挂载&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo &lt;span class=&quot;keyword&quot;&gt;mount&lt;/span&gt; -o &lt;span class=&quot;keyword&quot;&gt;loop&lt;/span&gt; R2017a_glnxa64_dvd1.iso /&lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt;/matlab/&lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt;  # 挂载DVD1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt;/matlab/&lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt;/&lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; -destinationFolder /&lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt;/matlab/Matlab2017a/ -fileInstallationKey &lt;span class=&quot;number&quot;&gt;09806&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07443&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-53955&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-64350&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-21751&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-41297&lt;/span&gt; -agreeToLicense yes -outputFile /&lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt;/matlab/Matlab2017a/matworks.&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt; -&lt;span class=&quot;keyword&quot;&gt;mode&lt;/span&gt; silent -activationPropertiesFile /home/hadoop/Matlab+&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;a+Linux64+Crack/license_standalone.lic  # 正式安装&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DVD1安装完成后会一直提示 eject dvd1 &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;insert&lt;/span&gt; dvd2 &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; continue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;开另一个Shell：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo umount -l /&lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt;/matlab/&lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt;  # 取消之前的挂载&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo &lt;span class=&quot;keyword&quot;&gt;mount&lt;/span&gt; -o &lt;span class=&quot;keyword&quot;&gt;loop&lt;/span&gt; R2017a_glnxa64_dvd2.iso /&lt;span class=&quot;keyword&quot;&gt;data&lt;/span&gt;/matlab/&lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt;  # 挂载DVD2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;第一台shell会自动开始安装&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;等待安装完成&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo cp Matlab+&lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt;a+Linux64+Crack/R2017a/&lt;span class=&quot;keyword&quot;&gt;bin&lt;/span&gt;/glnxa64&lt;span class=&quot;comment&quot;&gt;/* /data/matlab/Matlab2017a/bin/glnxa64/  # 拷贝&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo cp Matlab+2017a+Linux64+Crack/license_standalone.lic /data/matlab/Matlab2017a/licenses/   # 拷贝&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo umount -l /data/matlab/install  # 解挂&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd /data/matlab/Matlab2017a/bin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./matlab                             # 运行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后编译Matcaffe：&lt;br&gt;&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# make matcaffe -j16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MEX matlab/+caffe/&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;/caffe_.cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Building &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;g++&#39;&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MEX completed successfully.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;所以总结一下，能够联网的CentOS服务器上安装Caffe的步骤如下(root用户)：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;yum install epel-release&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yum install protobuf-devel leveldb-devel snappy-devel opencv-devel boost-devel hdf5-devel&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yum install gflags-devel glog-devel lmdb-devel&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;NCCL安装&lt;/li&gt;
&lt;li&gt;OpenBLAS安装&lt;/li&gt;
&lt;li&gt;Caffe安装&lt;/li&gt;
&lt;li&gt;进入&lt;code&gt;/etc/ld.so.conf.d&lt;/code&gt;新建&lt;code&gt;nccl.conf&lt;/code&gt;，填写&lt;code&gt;/usr/local/lib&lt;/code&gt;，然后&lt;code&gt;ldconfig -v&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;make test, make runtest测试Caffe安装是否成功&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;涉及的命令本文以上部分都有。&lt;/p&gt;
&lt;p&gt;感谢网上众多资料的作者提供经验，特列出参考文献如下聊表感激：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://caffe.berkeleyvision.org/install_yum.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Caffe. RHEL / Fedora / CentOS Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.nvidia.cn/object/caffe-installation-cn.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何在 NVIDIA GPU 上下载并安装Caffe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/sinat_35188997/article/details/73530434&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;呕心沥血一个月之caffe安装与配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/denny402/p/5075490.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Caffe学习系列(9)：运行caffe自带的两个简单例子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zybuluo.com/hanxiaoyang/note/364680&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;linux(CentOS)下的caffe编译安装简易手册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/u011713358/article/details/69659265&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在Ubuntu 16.04下安装Matlab 2017a&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.jianshu.com/p/1d338f1c6bce&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ubuntu16.04配置caffe（with cuda8.0）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/zziahgf/article/details/72900948&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Caffe - Ubuntu 安装及问题解决&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000011147642&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Elam的caffe笔记之配置篇（六）：Centos6.5下编译caffe及caffe的python3.6接口&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/fariver/p/7455433.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linux下的GPU版Caffe安装方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;等等。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文假设已经安装好了CUDA 8.0，NVIDIA GPU驱动以及cuDNN且读者主机可以连接互联网。&lt;/p&gt;
&lt;p&gt;CUDA 8.0的安装也可见&lt;a href=&quot;http://whatbeg.com/2018/03/17/cudainstall.html&quot;&gt;《CentOS
    
    </summary>
    
      <category term="错误解决与优化 | Err&Opt" scheme="http://whatbeg.com/categories/%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E4%B8%8E%E4%BC%98%E5%8C%96-Err-Opt/"/>
    
    
      <category term="Deep Learning" scheme="http://whatbeg.com/tags/Deep-Learning/"/>
    
      <category term="深度学习" scheme="http://whatbeg.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Linux" scheme="http://whatbeg.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Ray 论文解读</title>
    <link href="http://whatbeg.com/2018/03/15/ray-paper.html"/>
    <id>http://whatbeg.com/2018/03/15/ray-paper.html</id>
    <published>2018-03-15T06:26:53.000Z</published>
    <updated>2018-03-18T07:59:51.303Z</updated>
    
    <content type="html">&lt;p&gt;Ray是UC.Berkerly去年（2017）提出来的一个分布式执行引擎。Ray主要面向未来交互式的AI，如强化学习，提供任务并行和高速的任务调度。用户可以借助Ray迅速的进行任务并行来加速模型训练和推理。本文对Ray论文进行解读，以进一步地剖析了解Ray的运作原理，灵感来源，优缺点，在分布式机器学习框架中所处的位置，以及论文的写作，阐述过程等等。希望能给大家带来一些启发和思考。&lt;/p&gt;
&lt;h2 id=&quot;摘要（Abstract）&quot;&gt;&lt;a href=&quot;#摘要（Abstract）&quot; class=&quot;headerlink&quot; title=&quot;摘要（Abstract）&quot;&gt;&lt;/a&gt;摘要（Abstract）&lt;/h2&gt;&lt;p&gt;摘要部分简洁明了。首先说下一代的AI应用会持续地与环境进行交互，即走向交互式学习，在交互中学习，故而对支持AI的底层系统提出了新要求。论文阐述了这些要求（如性能，灵活性方面的要求），并提出Ray这一框架来满足这些要求。Ray实现了动态任务图计算（dynamic task graph computation），支持任务并行（task-parallel）和Actor编程模型。&lt;/p&gt;
&lt;p&gt;为了满足性能（Performance）要求，Ray提出了一种逻辑中心控制状态板的概念，采用分片的分布式存储系统（Redis）来实现，以及提供了一种新颖的自底向上的分布式调度器。&lt;/p&gt;
&lt;p&gt;实验表明，Ray可以实现次毫秒级的任务调度延迟，任务吞吐量大，在很多challenging的benchmark上得到了加速，并且自然且高效地适配新兴的一类强化学习应用与算法。&lt;/p&gt;
&lt;p&gt;摘要部分的逻辑非常清晰，首先说明问题，问题提出的新要求，为了解决问题，满足要求，我们提出xx，xx具有…的性质，提出了…idea，实验表明，xx具有良好的效果。简单来说就是：&lt;strong&gt;问题-方法-效果&lt;/strong&gt;三大块，看起来很舒服。&lt;/p&gt;
&lt;h2 id=&quot;介绍（Introduction）&quot;&gt;&lt;a href=&quot;#介绍（Introduction）&quot; class=&quot;headerlink&quot; title=&quot;介绍（Introduction）&quot;&gt;&lt;/a&gt;介绍（Introduction）&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;(Situation)&lt;/strong&gt; AI目前风生水起，应用广泛。过去主要集中在监督学习上，离线训练在线部署，如今领域(AI,ML)逐渐成熟，呈现新需求：AI系统需要在动态环境中不断响应变化，与环境交互来学习。这种模式天生与强化学习契合。强化学习应用也取得了一些很好的效果。&lt;/p&gt;
&lt;p&gt;强化学习与监督学习有三点不同：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;强化学习依赖大量的模拟动作&lt;/li&gt;
&lt;li&gt;强化学习的计算图是异构的，动态演化的，每部分的计算时间可能差别很大&lt;/li&gt;
&lt;li&gt;需要快速作出响应&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;(Question)&lt;/strong&gt; 总的来说，我们需要这样一个计算框架：支持异构的、动态的计算图，每秒处理百万级任务数，且只有毫秒级的延迟。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(Conflict)&lt;/strong&gt; 已有的集群计算框架无法充分满足这些要求。&lt;/p&gt;
&lt;p&gt;MapReduce, Spark, Dryad, Dask, CIEL 既不能提供强化学习应用需要的吞吐量，也不能达到其要求的延迟。&lt;/p&gt;
&lt;p&gt;Tensorflow, Naiad, MPI, Canary 通常假设计算图是静态的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(Answer)&lt;/strong&gt; 本文提出Ray，一个新的满足这些条件的集群计算框架。&lt;/p&gt;
&lt;p&gt;为了满足：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;条件1：异构动态工作流 =&amp;gt; Ray实现了动态任务图计算模型，类似于CIEL，并在CIEL的任务并行之上提供了一个actor编程模型，actor抽象使得Ray能够支持有状态组件，封装第三方服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;【什么是actor抽象？】actor可以理解为一个第三方服务的代理，或者一个类，类中包含了成员变量和方法，成员方法可以调用某些第三方服务，故而actor相当于对第三方服务的一个封装和一个抽象，真正的实现可以是各种第三方服务。在编程语言中的实现就是像类一样实现，只不过在类定义前加一个&lt;code&gt;@ray.remote&lt;/code&gt;而已。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;条件2：高性能 =&amp;gt; 采用一种新的分布式架构，可以实现良好的水平扩展。主要基于两个idea：&lt;br&gt;1）中央控制板，系统的所有控制状态都属中央控制，各个组件可以实现无状态，从而实现良好的水平扩展和容错。&lt;br&gt;2）自底向上的分布式调度器。即有一个全局调度器(global scheduler)，每个节点有本地调度器(local scheduler)，本地调度器可以选择本地调度，也可以将任务转发给global scheduler，让global scheduler来进行调度。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;【问题一】看到这里，读者可能会问，何时决定选择本地调度还是往上层转发呢？采何种标准决定到底是本地调度还是往上层转发呢？这是后续需要回答的问题。&lt;/p&gt;
&lt;p&gt;可以看到，介绍部分的基本逻辑清晰，我们采用SCQA/SQCA分析法来分析，首先介绍现在的处境(Situation)，然后提出问题（我们需要xxx）(Question)，然后是冲突(Conflict)，即现在没有满足这些条件的框架，最后是答案(Answer)，即我们提出Ray…。这种写法可以叫SQCA法，也可以调一下顺序，按SCQA的顺序来写。&lt;/p&gt;
&lt;p&gt;论文有如下贡献：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提出当前AI系统的一些要求&lt;/li&gt;
&lt;li&gt;提出了actor抽象&lt;/li&gt;
&lt;li&gt;提出具有高度水平扩展性的一种架构，并构建Ray来实现。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;【问题二】水平扩展的方式，能否支撑大数据？&lt;/p&gt;
&lt;p&gt;Ray的架构：&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th colspan=&quot;3&quot;&gt;&lt;center&gt;Application Layer&lt;/center&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;center&gt;global control state&lt;/center&gt;&lt;/td&gt;&lt;td&gt;&lt;center&gt;distributed scheduler&lt;/center&gt;&lt;/td&gt;&lt;td&gt;&lt;center&gt;distributed object store&lt;/center&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h2 id=&quot;Motivation-and-Requirements&quot;&gt;&lt;a href=&quot;#Motivation-and-Requirements&quot; class=&quot;headerlink&quot; title=&quot;Motivation and Requirements&quot;&gt;&lt;/a&gt;Motivation and Requirements&lt;/h2&gt;&lt;p&gt;强化学习工作流是Ray设计的主要动机，也是本文重点。&lt;br&gt;以强化学习为例，本文将新型系统的要求分为三大类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Flexibility&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Flexibility又分为几个方面：&lt;br&gt;一个是并发任务的异构性，有以下三种，功能不同，时长不同以及资源类型不同。如视频的处理和文本的处理就不是同一个功能，在一个时长，执行的计算也不一样。资源类型指的是GPU或者CPU等。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog-image-1256228880.cos.ap-beijing.myqcloud.com/ray-01.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;另一个是执行图的通用性和动态性。&lt;/p&gt;
&lt;p&gt;上面这些要求，BSP的模型（如Hadoop MapReduce, Apache Spark）是无法满足的。&lt;br&gt;在BSP模型中，每个Stage执行的计算通常是相同的，故而计算所需的时间也相似。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Performance&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;机器人与环境交互的场景中，需要在ms级别采取反应给出action，所以调度最好在1ms内完成，否则会成为一块拖累。鉴于集群中核数达几百几千甚为常见，调度吞吐量应该要很大。&lt;/p&gt;
&lt;p&gt;所以其实Ray对任务的快速调度做得比较好，能够做到非常快速的调度，因为就是针对这个需求设计的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ease of Deployment&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;写并行程序本来就不容易。简化开发对于一个系统的成功来说是至关重要的。&lt;br&gt;易用性包括几个方面：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;确定型的重放以及容错机制。&lt;/li&gt;
&lt;li&gt;已有算法易并行。包括对Python语言的支持，以及提供第三方服务的紧密集成，这方面采用actor抽象来封装第三方服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;编程模型和计算模型（Programming-and-Computation-Model）&quot;&gt;&lt;a href=&quot;#编程模型和计算模型（Programming-and-Computation-Model）&quot; class=&quot;headerlink&quot; title=&quot;编程模型和计算模型（Programming and Computation Model）&quot;&gt;&lt;/a&gt;编程模型和计算模型（Programming and Computation Model）&lt;/h2&gt;&lt;p&gt;不同于其他系统，Ray提供了actor和task-parallel两重编程抽象。&lt;br&gt;不像CIEL，只提供任务并行抽象，或Orleans，只提供actor抽象。&lt;/p&gt;
&lt;h3 id=&quot;编程模型&quot;&gt;&lt;a href=&quot;#编程模型&quot; class=&quot;headerlink&quot; title=&quot;编程模型&quot;&gt;&lt;/a&gt;编程模型&lt;/h3&gt;&lt;p&gt;当一个带有&lt;code&gt;@remote&lt;/code&gt;注解的remote函数被调用，会立即返回一个&lt;code&gt;future&lt;/code&gt;对象，然后调用&lt;code&gt;ray.get&lt;/code&gt;即可得到结果。&lt;/p&gt;
&lt;p&gt;比如说&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; ray&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ray.init()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@ray.remote&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    time.sleep(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Execute f in parallel.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;object_ids = [f.remote() &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;results = ray.get(object_ids)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;f.remote()&lt;/code&gt;调用运行时，将返回一个&lt;code&gt;future&lt;/code&gt;对象，存储在&lt;code&gt;object_ids&lt;/code&gt;中，调用&lt;code&gt;ray.get(object_ids)&lt;/code&gt;可以得到返回值的列表。&lt;/p&gt;
&lt;p&gt;remote函数操作的数据是不可变的对象，remote函数是无状态，无副作用的，使得幂等性得以保证，从而简化了容错的处理。&lt;/p&gt;
&lt;p&gt;为了满足一些条件，Ray所提出了的编程模型如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;处理不同时长的任务，采用了&lt;code&gt;ray.wait()&lt;/code&gt;，这个调用的意思是，运行很多的task后，可以设定等待的个数，当一定个数的任务执行完成时，其他不再执行，整个调用也结束，返回“等待的”一些&lt;code&gt;future&lt;/code&gt;的子集。思想类似于Spark的backup机制，即运行同样的多个任务，哪个先完成就用哪个的结果，其他的马上停止，不再考虑。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为了解决资源异构任务，在Ray中，开发者可以自己制定remote函数所需的资源量，资源种类有CPU，GPU（官方支持），以及自定义的resources。同样地，Actor也可以制定资源，但是目前Ray在调度Actor的时候，只根据GPU资源来调度。&lt;a href=&quot;http://ray.readthedocs.io/en/latest/resources.html#current-limitations&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;见这里&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为了提升flexibility，在Ray中，remote函数可以相互嵌套，即在remote函数中可以调用remote函数，这样可以充分提高可扩展性，同样提高灵活性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为了容易部署和保证高效性，Ray中涉及了Actor抽象，可以用来封装第三方服务。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;计算模型&quot;&gt;&lt;a href=&quot;#计算模型&quot; class=&quot;headerlink&quot; title=&quot;计算模型&quot;&gt;&lt;/a&gt;计算模型&lt;/h3&gt;&lt;p&gt;Ray采用了动态计算图机制，即一旦输入准备好了，就自动触发remote函数或者actor方法执行。&lt;/p&gt;
&lt;p&gt;那么Ray是如何将一个用户程序转换成计算图的呢？&lt;/p&gt;
&lt;p&gt;不考虑actor的情况下，整个计算图的节点只包含两种类型的对象，数据对象和remote函数调用，或者称为task。&lt;/p&gt;
&lt;p&gt;计算图有两种类型的边，数据边(data edge)和控制边(control edge)。&lt;/p&gt;
&lt;p&gt;具体如下：&lt;br&gt;数据对象用D表示，task用T表示。&lt;br&gt;如果任务T产生输出D，那么T-&amp;gt;D建一条边&lt;br&gt;如果D是T的输入，那么D-&amp;gt;T有一条边&lt;br&gt;如果T1中调用了T2，那么T1-&amp;gt;T2有一条边&lt;/p&gt;
&lt;p&gt;考虑actor的情况下，增加一种数据对象即actor的方法(Method)，增加一种边，叫做有状态边(stateful edge)，表示一种执行的先后顺序。&lt;br&gt;因为同一个actor中，方法的执行是顺序的，无法并行，Mi-&amp;gt;Mj的边即表示先执行方法Mi，再执行方法Mj。&lt;/p&gt;
&lt;p&gt;有状态边有两种好处，一是使得我们可以把actor嵌入到无状态的任务图中，因为actor维护着自己的一个调用链和状态。二是，有状态边可以用来维护世系(lineage)信息，世系可以帮助Ray重建数据对象，包括remote function创建的或是actor method创建的。&lt;/p&gt;
&lt;h2 id=&quot;架构（Architecture）&quot;&gt;&lt;a href=&quot;#架构（Architecture）&quot; class=&quot;headerlink&quot; title=&quot;架构（Architecture）&quot;&gt;&lt;/a&gt;架构（Architecture）&lt;/h2&gt;&lt;p&gt;架构包括两层，应用层(Application Layer)和系统层(System Layer)。&lt;/p&gt;
&lt;h3 id=&quot;应用层&quot;&gt;&lt;a href=&quot;#应用层&quot; class=&quot;headerlink&quot; title=&quot;应用层&quot;&gt;&lt;/a&gt;应用层&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://blog-image-1256228880.cos.ap-beijing.myqcloud.com/ray-02.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;应用层包含三种进程，Driver，Worker，Actor。&lt;/p&gt;
&lt;p&gt;Driver用来执行用户程序，即&lt;code&gt;python xx.py&lt;/code&gt;产生的进程。&lt;/p&gt;
&lt;p&gt;Worker用来执行task，task（remote function）可以由driver或者是其他worker调用，每个机器上运行&lt;code&gt;ray start&lt;/code&gt;后会启动0个或多个Worker【待详述】。Worker是无状态的，由系统层指配task。&lt;br&gt;当一个remote函数声明的时候，函数会自动发布到所有worker。【待详述】&lt;/p&gt;
&lt;p&gt;Actor是一个有状态的进程，当其方法被调用时执行，Actor一经启动在某个节点上，则负责执行所有该actor的方法调用。&lt;br&gt;Actor是有driver或者worker显式地初始化得到的，即采用&lt;code&gt;actor_name.remote()&lt;/code&gt;的方式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://blog-image-1256228880.cos.ap-beijing.myqcloud.com/ray-03.jpg&quot; alt=&quot;Ray架构与自底向上调度器示意图&quot;&gt;&lt;/p&gt;
&lt;p&gt;系统层而言，提供了三个组件，每个组件都具有水平可扩展性以及容错机制，来保证前述性能目标和容错目标。&lt;/p&gt;
&lt;p&gt;三个组件分别是：全局控制状态(global control state)，分布式自底向上调度器(distributed bottom-up scheduler)，分布式对象存储(distributed object store)。&lt;/p&gt;
&lt;h3 id=&quot;系统层-Global-Control-State&quot;&gt;&lt;a href=&quot;#系统层-Global-Control-State&quot; class=&quot;headerlink&quot; title=&quot;系统层-Global Control State&quot;&gt;&lt;/a&gt;系统层-Global Control State&lt;/h3&gt;&lt;p&gt;全局控制状态（GCS）是一个中心化的存储，使用Redis实现，负责存储task描述，remote方法代码，计算图，对象的位置，以及每个调度事件。&lt;br&gt;将所用控制状态集中存储，有这么几个好处：&lt;br&gt;1）使得集群中其他组件、节点可以无状态。这样的话可以大大提升水平扩展的能力。&lt;br&gt;2）简化了容错。&lt;br&gt;3）方便对程序debug，profile。&lt;/p&gt;
&lt;p&gt;当然，集中式存储带来的隐忧就是瓶颈问题，基于Redis，可以做分片(sharding)来缓解单点瓶颈。并且为每个分片提供热副本(hot replica)【是什么？】来容错。&lt;br&gt;鉴于在Ray中，每个task, object, method等都有一个唯一的伪随机ID与其一一对应，使得分片间能够更好地负载均衡。&lt;/p&gt;
&lt;h3 id=&quot;系统层-Distributed-Bottom-Up-Scheduler&quot;&gt;&lt;a href=&quot;#系统层-Distributed-Bottom-Up-Scheduler&quot; class=&quot;headerlink&quot; title=&quot;系统层-Distributed Bottom-Up Scheduler&quot;&gt;&lt;/a&gt;系统层-Distributed Bottom-Up Scheduler&lt;/h3&gt;&lt;p&gt;分布式自底向上调度器（distributed bottom-up scheduler），负责任务的调度。Ray启动时，会启动一个全局的调度器global scheduler，实现上是一个redis server，会在每个从节点上启动一个local scheduler，每个节点上提交的task率先提交给各自的local scheduler进行调度，如果local scheduler调度不了，则上推给global scheduler，进行集群全局范围的调度。&lt;br&gt;Ray这样设计的目标是调度可扩展性以及快速，低延迟的调度。这样设计带来的好处就是Ray调度任务非常之快。&lt;/p&gt;
&lt;p&gt;那么Ray这样设计的灵感来自于哪里呢？&lt;/p&gt;
&lt;p&gt;通常的分布式集群计算框架实现的都是中心化，集中式的调度，如Hadoop, Spark, CIEL, Dryad等。这种方式虽然简化了设计，但是扩展性不好。&lt;/p&gt;
&lt;p&gt;提升调度扩展性有几种方式：&lt;br&gt;1）批量调度。调度器批量提交任务给worker节点，以摊销提交任务带来的固定开销。Drizzle框架实现的就是这种。&lt;br&gt;2）层次调度。即全局调度器(global scheduler)将任务图划分到各个节点的本地调度器(local scheduler)。Canary框架实现了这种调度。&lt;br&gt;3）并行调度。多个全局调度器同时进行任务调度。这是Sparrow框架所做的。&lt;/p&gt;
&lt;p&gt;但是他们都有各自的缺陷。&lt;br&gt;批量调度仍然需要一个全局调度器来处理所有任务。&lt;br&gt;层次调度假设任务图是已知的，即假设任务图是静态的。&lt;br&gt;并行调度假设每个全局调度器调度独立的作业。&lt;/p&gt;
&lt;p&gt;Ray希望做到的是高可扩展性，处理动态任务图，并且可能处理来自同一个作业的任务。&lt;/p&gt;
&lt;p&gt;Ray的自底向上调度器类似层次调度，不同的是，一个节点生成的task首先提交到各自的local scheduler，由local scheduler进行调度。除非本地节点过载了，或者本地节点不能满足task的资源需求，或者task的输入不在本地节点等因素出现，否则本地节点可以完成调度。&lt;/p&gt;
&lt;p&gt;其实最后一条，task的输入不再本地，仍有方式在本地调度，因为object store可以实现快速的数据对象转运。&lt;/p&gt;
&lt;p&gt;看到这里，读者可能想问，Ray的local scheduler是怎样判断是否该调度到本地节点还是上推到global scheduler呢？&lt;/p&gt;
&lt;p&gt;Ray是这样处理的，local scheduler会维护一个任务队列（task queue），每次调度任务时它会检查当前任务队列的长度，如果超过一定的阈值，那么认为本机过载了，不在调度当前任务而是将其转给上层全局调度器。&lt;/p&gt;
&lt;p&gt;这个阈值为0，则调度为集中式的调度，全靠global scheduler负责。&lt;br&gt;这个阈值为无穷大，则调度为去中心化的分布式调度，所有任务都有本地节点负责。&lt;/p&gt;
&lt;p&gt;在框架设计上，local scheduler每隔一段时间会发送心跳包给GCS，注意不是直接发送给global scheduler，心跳包中会包含local scheduler的负载信息，GCS收到以后记录此信息，转发给global scheduler。&lt;br&gt;当收到local scheduler转发来的任务时，global scheduler使用最新的负载信息，以及人物的输入数据对象的位置和大小，来决定将task分发到哪个节点去运行。&lt;/p&gt;
&lt;p&gt;如果global scheduler成为了瓶颈，那么采用多个副本，local scheduler随机选择一个global scheduler去转发任务。&lt;/p&gt;
&lt;h3 id=&quot;系统层-Distributed-Object-Store&quot;&gt;&lt;a href=&quot;#系统层-Distributed-Object-Store&quot; class=&quot;headerlink&quot; title=&quot;系统层-Distributed Object Store&quot;&gt;&lt;/a&gt;系统层-Distributed Object Store&lt;/h3&gt;&lt;p&gt;remote函数（task）的输入和输出数据都存储在Distributed Object Store中。&lt;br&gt;调用一个函数时，其输入首先被隐式执行&lt;code&gt;ray.put&lt;/code&gt;，存储object store中，其输出也会被放入object store中，函数返回一个object id为该输出数据的唯一id，调用&lt;code&gt;ray.get(object_id)&lt;/code&gt;才可获得任务返回的实际数据。&lt;/p&gt;
&lt;p&gt;同一个节点上使用共享内存(shared memory)来实现object store，这使得两个不同的worker进程或者driver和worker之间能够零拷贝(zero copy)地访问共同的数据。具体实现采用了Apache Arrow中的plasma store。&lt;a href=&quot;http://arrow.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Apache Arrow&lt;/a&gt;是一种跨平台的内存数据交换格式。可参看介绍&lt;a href=&quot;https://www.cnblogs.com/smartloli/p/6367719.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;/a&gt;，&lt;a href=&quot;http://www.infoq.com/cn/articles/apache-arrow/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;/a&gt;等。&lt;/p&gt;
&lt;p&gt;如果一个task，其输入不在本地，那么object store会把数据从所在地拷贝到本地，这样可以避免热数据带来的瓶颈，同时可以加快程序执行速度，因为直接在本地内存中操作。当然，数据的传送开销也是免不了的。这也将提升计算受限工作流的吞吐量，计算受限是许多AI应用共有的特征。&lt;/p&gt;
&lt;p&gt;为了简化系统设计，简化容错，Ray像其它内存计算系统如Spark, Dryad一样，其操作的数据是不可变的(immutable)，即存储在object store中的数据不能改变，如RDD一般。&lt;/p&gt;
&lt;p&gt;Ray同时也不支持分布式对象，如分布式大矩阵，当然可以通过在应用层自行实现（通过一系列的futures）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对象重建&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;像Spark，CIEL一样，Ray根据世系来重建对象。除此之外，Ray还支持有状态操作算子(Actor)的重建。&lt;/p&gt;
&lt;p&gt;要注意的是，如果世系中包含有状态边，则可能涉及到Actor的重新初始化，并且可能涉及到很长一条世系链的重放。对于某些应用，Ray为了减少Actor的重建时间，加入了checkpoint机制，从checkpoint进行恢复。&lt;/p&gt;
&lt;p&gt;为了保证低延迟，如果plasma store满了以后，会通过LRU机制剔除陈旧的对象到磁盘。【到磁盘哪里？】&lt;br&gt;在Ray中，plasma store即object store挂载在Linux属于tmpfs文件系统的&lt;code&gt;/dev/shm&lt;/code&gt;目录上，该目录不在磁盘上，而在内存里。已经存入&lt;code&gt;/dev/shm&lt;/code&gt;中的对象不能被其他应用程序使用，但是&lt;code&gt;/dev/shm&lt;/code&gt;没被使用的部分可被其他应用程序使用。&lt;br&gt;&lt;code&gt;/dev/shm&lt;/code&gt;区域的大小一般是总内存的1/2。即如果你的机器是64G内存，那么此区域只有32G可用，Ray会再保留一点余量，大概用于object store的空间只有26-27GB左右，也就是说，如果Ray处理的数据过大，大到object store都装不下或者在运行时需要频繁evict甚至evict掉其他必要数据的时候，往往程序就会崩溃。&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;https://blog-image-1256228880.cos.ap-beijing.myqcloud.com/ray-04.jpg&quot; alt=&quot;Ray执行任务示意简图1&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://blog-image-1256228880.cos.ap-beijing.myqcloud.com/ray-05.jpg&quot; alt=&quot;Ray执行任务示意简图2&quot;&gt;&lt;br&gt;&lt;/center&gt;

&lt;h2 id=&quot;相关工作&quot;&gt;&lt;a href=&quot;#相关工作&quot; class=&quot;headerlink&quot; title=&quot;相关工作&quot;&gt;&lt;/a&gt;相关工作&lt;/h2&gt;&lt;p&gt;下表对相关工作与Ray的相似点与不同点做一总结。&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;&lt;/th&gt;&lt;th&gt;比较的系统框架&lt;/th&gt;&lt;th&gt;相似点&lt;/th&gt;&lt;th&gt;不同点&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th rowspan=&quot;2&quot;&gt;动态任务图&lt;/th&gt;&lt;td&gt;CIEL&lt;/td&gt;&lt;td&gt;动态任务图机制，futures抽象，通过世系容错&lt;/td&gt;&lt;td&gt;Ray还提供Actor抽象，并实现了全局控制面板，自底向上调度器和采用了内存对象存储而不是文件存储，扩展到Python语言&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Dask&lt;/td&gt;&lt;td&gt;支持动态任务图，wait原语，futures抽象，Python语言&lt;/td&gt;&lt;td&gt;Dask是中心化调度方式，不提供actor抽象，不提供容错&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th rowspan=&quot;3&quot;&gt;数据流系统&lt;/th&gt;&lt;td&gt;Hadoop/Spark&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Hadoop/Spark计算模型更加限定，实现了BSP执行模型，假设同一阶段的task执行同样的计算，并有着相似的执行时间。Ray还提供Actor抽象，并实现了全局控制面板和调度器。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Dryad&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Dryad放松了Spark的假设，但是也没有实现动态计算图。Ray还提供Actor抽象，并实现了全局控制面板和调度器。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Naiad&lt;/td&gt;&lt;td&gt;对于一些工作流提升了可扩展性。&lt;/td&gt;&lt;td&gt;只支持静态计算图。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th rowspan=&quot;3&quot;&gt;Actor系统&lt;/th&gt;&lt;td&gt;Orleans&lt;/td&gt;&lt;td&gt;提供虚拟actor-based抽象。&lt;/td&gt;&lt;td&gt;Orleans可以使actor的多个实例同时运行。需要显式checkpoint，提供at-least-once语义。而Ray提供exactly-once语义。[注]&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Erlang&lt;/td&gt;&lt;td&gt;Actor抽象。&lt;/td&gt;&lt;td&gt;需显式处理容错。Erlang的全局状态存储不适合共享大对象。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;C++ Actor Framework&lt;/td&gt;&lt;td&gt;Actor抽象。&lt;/td&gt;&lt;td&gt;需显式处理容错。不支持数据共享。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th rowspan=&quot;7&quot;&gt;全局控制状态和调度&lt;/th&gt;&lt;td&gt;SDN&lt;/td&gt;&lt;td&gt;全局控制状态&lt;/td&gt;&lt;td&gt;Ray解耦了状态信息存储和逻辑实现（调度器），存储与计算可以独立扩展&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Distributed File System，如GFS&lt;/td&gt;&lt;td&gt;全局控制状态&lt;/td&gt;&lt;td&gt;Ray解耦了状态信息存储和逻辑实现（调度器），存储与计算可以独立扩展&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Distributed Frameworks (如MapReduce, BOOM)&lt;/td&gt;&lt;td&gt;全局控制状态&lt;/td&gt;&lt;td&gt;与BOOM相比，Ray解耦了状态信息存储和逻辑实现（调度器），存储与计算可以独立扩展&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Resource Management (Omega)&lt;/td&gt;&lt;td&gt;全局共享状态&lt;/td&gt;&lt;td&gt;Ray增加了两层调度器来均衡负载，面向毫秒级别的任务调度&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Sparrow&lt;/td&gt;&lt;td&gt;去中心化调度&lt;/td&gt;&lt;td&gt;各调度器自行其是，独立决策&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Mesos&lt;/td&gt;&lt;td&gt;两级层次调度&lt;/td&gt;&lt;td&gt;顶层调度器可能成为瓶颈&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Canary&lt;/td&gt;&lt;td&gt;去中心化调度&lt;/td&gt;&lt;td&gt;Canary每个调度器负责计算图的一部分，但不支持动态计算图&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th rowspan=&quot;3&quot;&gt;机器学习框架&lt;/th&gt;&lt;td&gt;Tensorflow&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;面向深度学习，对CPU、GPU资源利用很好，不支持更通用的计算工作流，Tensorflow Fold提供对动态计算图的一些支持，但仍无法全部支持执行时对任务执行进度，任务完成时间和错误的响应而编辑DAG图。支持底层消息传输和同步原语，但是过于底层使得用起来有点像MPI。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;MXNet&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;同Tensorflow&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;OpenMPI&lt;/td&gt;&lt;td&gt;高性能&lt;/td&gt;&lt;td&gt;很难编程，需要显式处理异构和动态任务图，需要程序员显式处理容错&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;[注] 实时计算/流式计算的三种语义：&lt;br&gt;At-most-once：每条记录最多只能被处理一次&lt;br&gt;At-least-once：每条记录最少要被处理一次&lt;br&gt;Exactly-once：每条记录有且仅被处理一次&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;蓬勃发展的AI应用对计算框架提出了一些挑战性的需求，为了应对这些需求，本文提出了Ray，实现了全局控制存储和自底向上的调度器，且实现了动态任务图。支持Actor编程和任务并行。这种编程灵活性对于强化学习RL应用尤其重要，因其具有诸多方面的异构性，如执行时间，资源等。Ray提供了一个灵活高性能且易于使用的框架来应对未来的AI应用。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Ray是UC.Berkerly去年（2017）提出来的一个分布式执行引擎。Ray主要面向未来交互式的AI，如强化学习，提供任务并行和高速的任务调度。用户可以借助Ray迅速的进行任务并行来加速模型训练和推理。本文对Ray论文进行解读，以进一步地剖析了解Ray的运作原理，灵感来
    
    </summary>
    
      <category term="大数据系统与技术 | Big Data" scheme="http://whatbeg.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B3%BB%E7%BB%9F%E4%B8%8E%E6%8A%80%E6%9C%AF-Big-Data/"/>
    
    
      <category term="机器学习" scheme="http://whatbeg.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Deep Learning" scheme="http://whatbeg.com/tags/Deep-Learning/"/>
    
      <category term="论文阅读" scheme="http://whatbeg.com/tags/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/"/>
    
      <category term="系统" scheme="http://whatbeg.com/tags/%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>神经网络一阶优化算法手记</title>
    <link href="http://whatbeg.com/2018/03/11/optimizationAlgos.html"/>
    <id>http://whatbeg.com/2018/03/11/optimizationAlgos.html</id>
    <published>2018-03-11T09:03:38.000Z</published>
    <updated>2018-03-18T06:21:21.212Z</updated>
    
    <content type="html">&lt;p&gt;关于神经网络一阶优化算法，网上已经有很多资料了，本文为笔者很久之前做的一份梳理，整理了一下一些popular的一阶优化算法及他们的逻辑线，优缺点等。读者自行甄别，自取所需，大神直接过即可。&lt;/p&gt;
&lt;h2 id=&quot;Notations&quot;&gt;&lt;a href=&quot;#Notations&quot; class=&quot;headerlink&quot; title=&quot;Notations&quot;&gt;&lt;/a&gt;Notations&lt;/h2&gt;&lt;p&gt;$\theta$ : parameters&lt;/p&gt;
&lt;p&gt;$J$ : objective function&lt;/p&gt;
&lt;p&gt;$\nabla J(\theta) = J’$ w.r.t parameter&lt;/p&gt;
&lt;p&gt;$\eta$ : learning rate&lt;/p&gt;
&lt;h2 id=&quot;从SGD说起&quot;&gt;&lt;a href=&quot;#从SGD说起&quot; class=&quot;headerlink&quot; title=&quot;从SGD说起&quot;&gt;&lt;/a&gt;从SGD说起&lt;/h2&gt;&lt;p&gt;SGD(Stochastic Gradient Descent)是目前最流行的机器学习，深度学习优化算法之一，现在通常所说的SGD指的是Mini-batch gradient descent，更新规则如下，&lt;/p&gt;
&lt;p&gt;$$\theta_{t+1} = \theta_{t} - \eta \nabla J(\theta_{t}; x_{i:i+m}; y_{i:i+m})$$&lt;/p&gt;
&lt;p&gt;每次采用一小批数据计算梯度来更新paramter，既能够缓解每次单个样本的SGD带来的剧烈波动问题，又能够加快训练速度，所以受到了machine learning和neural network训练的喜爱。&lt;/p&gt;
&lt;p&gt;但是SGD有如下几个不足[1]：&lt;br&gt;1）learning rate很难选取&lt;br&gt;2）schedule策略需要预先选定，无法自适应&lt;br&gt;3）参数的每一维使用相同的学习率&lt;br&gt;4）SGD在鞍点或者pleatu区域容易陷入困境，难以逃离&lt;/p&gt;
&lt;p&gt;根据这些不足，人们设计了许多SGD的改进算法。&lt;/p&gt;
&lt;h2 id=&quot;Momentum&quot;&gt;&lt;a href=&quot;#Momentum&quot; class=&quot;headerlink&quot; title=&quot;Momentum&quot;&gt;&lt;/a&gt;Momentum&lt;/h2&gt;&lt;p&gt;为了加速SGD的训练，以及改善面对“峡谷”型目标函数的鲁棒性，人们将物理学中的Momentum概念加入优化中。实验证明，Momentum SGD[2]能够有效地抑制函数值震荡的现象。&lt;br&gt;Momentum的更新公式如下：&lt;/p&gt;
&lt;p&gt;$v_t = \rho v_{t-1} + \eta \nabla J(\theta)$&lt;/p&gt;
&lt;p&gt;$\theta = \theta - v_t$&lt;/p&gt;
&lt;p&gt;where $\rho$ 控制着前面诸参数更新的衰减率。&lt;br&gt;有了Momentum，SGD能够收敛的更快，并且震荡会减弱。&lt;/p&gt;
&lt;h2 id=&quot;Nesterov-Accelerated-Gradient-NAG&quot;&gt;&lt;a href=&quot;#Nesterov-Accelerated-Gradient-NAG&quot; class=&quot;headerlink&quot; title=&quot;Nesterov Accelerated Gradient(NAG)&quot;&gt;&lt;/a&gt;Nesterov Accelerated Gradient(NAG)&lt;/h2&gt;&lt;p&gt;接着，Nesterov提出了一种无约束凸优化方法，称为Nesterov accelerated gradient(NAG)[3]，这种方法预先估计下一个位置，然后看看该位置的梯度，根据对该“未来”梯度的判断，来调整自己的预期步长，使得更加智能的往局部最优点走去。NAG的更新式与Momentum只有一丝细微的差别：&lt;/p&gt;
&lt;p&gt;$v_t = \rho v_{t-1} + \eta \nabla J(\theta-\rho v_{t-1})$&lt;/p&gt;
&lt;p&gt;$\theta = \theta - v_t$&lt;/p&gt;
&lt;h2 id=&quot;Adagrad&quot;&gt;&lt;a href=&quot;#Adagrad&quot; class=&quot;headerlink&quot; title=&quot;Adagrad&quot;&gt;&lt;/a&gt;Adagrad&lt;/h2&gt;&lt;p&gt;虽然我们对SGD进行了加速，并且非常智能地调整好了方向，我们的参数向量各个维度更新幅度仍然是一样的，（在有些时候，尤其是稀疏场景中，对于出现极少次数的特征维，我们不会想只更新一个很小的幅度，这样会使得这个维度学习很差。）&lt;/p&gt;
&lt;p&gt;另一种思路是使得参数向量$\theta$的各个维以不同步调来差异化地调整。&lt;br&gt;Adagrad就是其中一种，由Duchi et. al[4]在2011年提出。Ada means Adaptive，代表着它能够自适应地为参数调整学习率，非常适合稀疏数据，这种方法将梯度平方的累积值加入梯度更新中，更新方式如下：&lt;/p&gt;
&lt;p&gt;$g_{t,i} = \nabla J(\theta_i)$&lt;/p&gt;
&lt;p&gt;$\theta_{t+1, i} = \theta_{t, i} - \frac {\eta} {\sqrt{G_{t,ii} + \epsilon}} \cdot g_{t,i}$&lt;/p&gt;
&lt;p&gt;$G_t \in {\mathbb R}^{d \times d}$ is a diagonal matrix that each diagonal element is sum of the squares of the gradient w.r.t $w_i$ up to time step t [4].&lt;br&gt;$\epsilon$ is just a smoothing term avoiding division by zero, usually 1e-8.&lt;br&gt;我们也可以写成向量形式：&lt;br&gt;$$\theta_{t+1} = \theta_{t} - \frac {\eta} {\sqrt{G_{t} + \epsilon}} \odot g_{t}$$&lt;br&gt;$\odot$ means element-wise matrix-vector multiplication.&lt;/p&gt;
&lt;h2 id=&quot;RMSprop&quot;&gt;&lt;a href=&quot;#RMSprop&quot; class=&quot;headerlink&quot; title=&quot;RMSprop&quot;&gt;&lt;/a&gt;RMSprop&lt;/h2&gt;&lt;p&gt;随着梯度平方的累积，Adagrad会自适应地降低频繁更新的参数的学习率，使得你无需去手动指定learning rate schedule策略来调试学习率，但是Adagrad的一大缺点就是它的学习率会随着训练中不断增长的累计梯度平方和而单调下降到任意小，甚至导致学习的停滞。&lt;/p&gt;
&lt;p&gt;RMSprop[5]和Adadelta[6]是提出来解决上述Adagrad学习率降到任意小问题的，RMSprop的基本思想是，instead of 除以所有梯度平方的累积，RMSprop将学习率除以梯度平方的指数衰减平均$E[g^2]$，梯度平方的指数衰减平均$E[g^2]$可以表示前w个平方梯度的累积，又避免了直接存储前w个平方梯度的存储开销，这样能够有效防止无限小的，单调下降的，diminishing的learning rate问题，RMSprop更新规则如下：&lt;br&gt;$g_t$代表time step t时刻的梯度向量。&lt;/p&gt;
&lt;p&gt;$E[g^2]_t = \rho E[g^2]_{t-1} + (1-\rho)g_t^2 $&lt;/p&gt;
&lt;p&gt;$\theta_{t+1} = \theta_t - \frac {\eta} {\sqrt{E[g^2]_t + \epsilon}} \cdot g_{t,i} = \theta_t - \frac {\eta} {RMS[g]_t} \cdot g_{t,i}$&lt;/p&gt;
&lt;h2 id=&quot;Adadelta&quot;&gt;&lt;a href=&quot;#Adadelta&quot; class=&quot;headerlink&quot; title=&quot;Adadelta&quot;&gt;&lt;/a&gt;Adadelta&lt;/h2&gt;&lt;p&gt;Adadelta[6]为与RMSprop几乎同一时间提出来的，可以看做在RMSprop的基础上做了进一步的改进的版本。其与RMSprop的关键区别就在于Adadelta统一了$\Delta \theta$与$\theta$的单位(unit)。&lt;br&gt;作者指出，在原来的$$\Delta \theta = - \frac {\eta} {\sqrt{E[g^2]_t + \epsilon}} \cdot g_{t,i}$$中，$\Delta \theta$的单位与$\theta$是不匹配的，在SGD，Momentum或者Adagrad中也是如此，所以Adadelta通过引入$\Delta \theta^2$的指数衰减平均，来使得单位统一。故Adadelta的更新式为：&lt;br&gt;$E[g^2]_t = \rho E[g^2]_{t-1} + (1-\rho)g_t^2$&lt;/p&gt;
&lt;p&gt;$\theta_{t+1} = \theta_t - \frac {\sqrt {E[\Delta \theta^2]_{t-1} + \epsilon}} {\sqrt{E[g^2]_t + \epsilon}} \cdot g_t$&lt;/p&gt;
&lt;p&gt;$E[\Delta \theta^2]_t = \rho E[\Delta \theta^2]_{t-1} + (1-\rho)\Delta \theta_t^2$&lt;/p&gt;
&lt;p&gt;where $\rho$ 是类似于Momentum中的衰减率常数。&lt;br&gt;Adadelta有两个重要的优点，1) 解决了学习率随着训练持续减小的问题 2) 无需预先设置学习率超参&lt;br&gt;[6]指出，在MNIST数据集上，Adadelta的参数敏感性好于SGD,Momentum和Adagrad等算法。&lt;/p&gt;
&lt;h2 id=&quot;Adam&quot;&gt;&lt;a href=&quot;#Adam&quot; class=&quot;headerlink&quot; title=&quot;Adam&quot;&gt;&lt;/a&gt;Adam&lt;/h2&gt;&lt;p&gt;另一个现在用的较多的自适应学习率方法是Adam(Adaptive Moment Estimation)[7]，Adam结合了RMSprop和Momentum的思想，不过Adam不仅维护过去一阶梯度的指数衰减平均$m_t$(exponentially decaying average of past gradients)，而且还维护二阶梯度的指数衰减平均$v_t$，并且加入了bias-correction步骤，以纠正$m_t, v_t$初始化为0带来的偏差(bias)，由是可得到Adam的更新规则如下：&lt;/p&gt;
&lt;p&gt;$m_t = \beta_1 m_{t-1} + (1-\beta_1)g_t $&lt;/p&gt;
&lt;p&gt;$v_t = \beta_2 v_{t-1} + (1-\beta_2)g_t^2 $&lt;/p&gt;
&lt;p&gt;$\hat{m}_t = \frac {m_t} {1-\beta_1^t} $&lt;/p&gt;
&lt;p&gt;$\hat{v}_t = \frac {v_t} {1-\beta_2^t}$&lt;/p&gt;
&lt;p&gt;$\theta_{t+1} = \theta_t - \frac {\eta} {\sqrt{\hat{v}_t} + \epsilon} \cdot \hat{m}_t $&lt;/p&gt;
&lt;p&gt;where $\beta_1, \beta_2$ is exponential decay rates of moment estimates.&lt;br&gt;[7]中推荐参数设置为$\eta = 0.001, \beta_1 = 0.9, \beta_2 = 0.999 \&lt;br&gt; and \ \epsilon = 1e-8$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Actually, Adam algorithm works well in practice, not only in acedemia but industry. Empirical results show that Adam consistantly outperforms other methods for a variety of models and datasets, and it’s a versatile algorithm that scales to large-scale high-dimensional machine learning problems.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Optimization-Algorithms-Relationship&quot;&gt;&lt;a href=&quot;#Optimization-Algorithms-Relationship&quot; class=&quot;headerlink&quot; title=&quot;Optimization Algorithms Relationship&quot;&gt;&lt;/a&gt;Optimization Algorithms Relationship&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://blog-image-1256228880.cos.ap-beijing.myqcloud.com/optimization.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;References&quot;&gt;&lt;a href=&quot;#References&quot; class=&quot;headerlink&quot; title=&quot;References&quot;&gt;&lt;/a&gt;References&lt;/h2&gt;&lt;p&gt;[1] &lt;a href=&quot;https://arxiv.org/pdf/1609.04747.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sebastian Ruder. An overview of gradient descent optimization algorithms&lt;/a&gt;&lt;br&gt;[2] &lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.57.5612&amp;amp;rep=rep1&amp;amp;type=pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ning Qian. On the Momentum Term in Gradient Descent Learning Algorithms&lt;/a&gt;&lt;br&gt;[3] &lt;a href=&quot;https://scholar.google.com/citations?user=DJ8Ep8YAAAAJ&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Y. Nestrov. A method of solving a convex programming problem with convergence rate O (1/k2)&lt;/a&gt;&lt;br&gt;[4] &lt;a href=&quot;http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;John Duchi et.al. Adaptive Subgradient Methods for Online Learning and Stochastic Optimization&lt;/a&gt;&lt;br&gt;[5] &lt;a href=&quot;http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Geoffrey Hinton et.al Lecture 6. RMSprop&lt;/a&gt;&lt;br&gt;[6] &lt;a href=&quot;http://www.matthewzeiler.com/pubs/googleTR2012/googleTR2012.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Matthew D. Zeiler. ADADELTA: AN ADAPTIVE LEARNING RATE METHOD&lt;/a&gt;&lt;br&gt;[7] &lt;a href=&quot;https://arxiv.org/pdf/1412.6980.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Diederik P. Kingma et.al. ADAM: A METHOD FOR STOCHASTIC OPTIMIZATION&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;关于神经网络一阶优化算法，网上已经有很多资料了，本文为笔者很久之前做的一份梳理，整理了一下一些popular的一阶优化算法及他们的逻辑线，优缺点等。读者自行甄别，自取所需，大神直接过即可。&lt;/p&gt;
&lt;h2 id=&quot;Notations&quot;&gt;&lt;a href=&quot;#Notations
    
    </summary>
    
      <category term="机器学习 | Mac.Learning" scheme="http://whatbeg.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-Mac-Learning/"/>
    
    
      <category term="Deep Learning" scheme="http://whatbeg.com/tags/Deep-Learning/"/>
    
      <category term="优化" scheme="http://whatbeg.com/tags/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Deep Learning读书笔记（6）--【卷积神经网络】</title>
    <link href="http://whatbeg.com/2018/03/07/deeplearningbook-06.html"/>
    <id>http://whatbeg.com/2018/03/07/deeplearningbook-06.html</id>
    <published>2018-03-07T08:36:20.000Z</published>
    <updated>2018-03-07T08:37:21.022Z</updated>
    
    <content type="html">&lt;p&gt;本章写卷积神经网络，本文摘其中的要点稍作梳理。&lt;/p&gt;
&lt;p&gt;个人觉得，看完本章应该获得如下的take home message：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;卷积和卷积神经网络的基本概念&lt;/li&gt;
&lt;li&gt;卷积网络背后的三个重要概念：稀疏交互，参数共享，等变表示&lt;/li&gt;
&lt;li&gt;池化及其背后的idea和意义&lt;/li&gt;
&lt;li&gt;随机/无监督特征&lt;/li&gt;
&lt;li&gt;神经科学基础与卷积网络的密切关系&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;卷积和卷积神经网络的基本概念&quot;&gt;&lt;a href=&quot;#卷积和卷积神经网络的基本概念&quot; class=&quot;headerlink&quot; title=&quot;卷积和卷积神经网络的基本概念&quot;&gt;&lt;/a&gt;卷积和卷积神经网络的基本概念&lt;/h2&gt;&lt;p&gt;卷积网络的基本概念默认本文读者已知。&lt;br&gt;“卷积”这个词笔者第一次听到是在《信号与系统》课程中，在计算机领域主要是离散的卷积。&lt;br&gt;卷积网络的工作过程网上已经讲的很多了，众多资料中又数July写的&lt;a href=&quot;http://blog.csdn.net/v_july_v/article/details/51812459&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《通俗理解卷积神经网络（cs231n与5月dl班课程笔记）》&lt;/a&gt;尤为通俗易懂，推荐阅读。&lt;br&gt;总的来说，卷积网络尤其适合处理具有类似网格结构的数据，如具有序列结构的时间序列数据，就可以看做一维网格，具有空间结构的图像数据等即可看做二维网格。&lt;/p&gt;
&lt;h2 id=&quot;卷积网络背后的三个重要概念：稀疏交互，参数共享，等变表示&quot;&gt;&lt;a href=&quot;#卷积网络背后的三个重要概念：稀疏交互，参数共享，等变表示&quot; class=&quot;headerlink&quot; title=&quot;卷积网络背后的三个重要概念：稀疏交互，参数共享，等变表示&quot;&gt;&lt;/a&gt;卷积网络背后的三个重要概念：稀疏交互，参数共享，等变表示&lt;/h2&gt;&lt;p&gt;重点在于此节。此节的三种重要概念是卷积网络能够发挥现在如此大作用的内在原因。&lt;br&gt;讲述以图片数据为例。&lt;/p&gt;
&lt;p&gt;稀疏交互，指的是在处理图像时，卷积网络上层每个神经元的状态并不取决于整张图片，而是取决于一个局部感受野（如一张人脸图片，某个神经元的状态取决于下巴的那一小块区域），对局部感受野进行提取的小矩阵称为卷积核。&lt;br&gt;原来对图片进行处理，通常是通过稠密矩阵相乘等方法来做，即图像矩阵乘以一个权重矩阵，然后预测，训练此权重矩阵，这样的方式和全连接相差无几，效率不高，且分类预测效果不佳。&lt;br&gt;所以，“稀疏”是指相对于全连接来说，用比原来小得多的卷积核矩阵来代替全连接矩阵，相当于除卷积核之外的连接权重全为0.&lt;br&gt;通过卷积核可以对一些小的特征进行提取，比如检测图像边缘信息。通过多个卷积核可以提取多种图像特征信息。&lt;br&gt;稀疏的交互大大减小了存储开销，提高计算效率，从而也推进了算法的研究，使得卷积网络可以往更深层次走。&lt;/p&gt;
&lt;p&gt;参数共享，指的是，比如对于100x100的图像，一个大小10x10的卷积核，固定具有10x10=100个参数，不管这个卷积核在与图像的哪一部分进行卷积，这些参数都是相对一致的。不同于全连接，会有100x100=10000个参数，整个神经网络的参数量瞬间缩减了100倍。当然这也导致了一个卷积核只能提取一种特征，为了提取多种特征，我们需要采用多个卷积核，这多个卷积核的参数就通常不会相同了。参数共享，也使得存储开销，计算效率提高，硬件压力越小，从而推进算法研究。&lt;/p&gt;
&lt;p&gt;等变表示，指的是，图像中某一元素/成分的移动，在上层神经元中也表现为一定的移动。这是由参数共享直接带来的，因为移动过程中卷积核的参数不变。这种等变表示使得图像的平移不会对分类预测结果产生太大的影响，使得学习算法能够对相同内容不同位置的图像较为准确的识别。&lt;/p&gt;
&lt;h2 id=&quot;池化及其背后的idea和意义&quot;&gt;&lt;a href=&quot;#池化及其背后的idea和意义&quot; class=&quot;headerlink&quot; title=&quot;池化及其背后的idea和意义&quot;&gt;&lt;/a&gt;池化及其背后的idea和意义&lt;/h2&gt;&lt;p&gt;池化函数使用某一位置的相邻输出的总体统计特征来代替网络在该位置的输出。&lt;br&gt;池化操作有点类似于降低图像分辨率，最大池化用最突出的像素表示该像素周围一小块像素区域的总体。除此之外还有平均池化。&lt;br&gt;在生活中，池化类似于通常的“代表”，通常话语权细化到每个人会非常的繁琐，低效，从而从一个群体中选取一个“代表”来为整个群体说话就成为意见很自然的事情。&lt;br&gt;池化具有局部平移不变性，由于最后局部的像素会聚集，所以图像微小的平移有时并不会对池化的结果产生影响。通常当我们只关心某些特征是否出现而不关心其出现在何位置时池化显得非常有用。因为池化过后存储需求又进一步降低了，计算效率再次提升。&lt;/p&gt;
&lt;p&gt;卷积和池化可以理解为两个无限强的先验。&lt;br&gt;卷积是这样的先验：该层应该学得的函数只包含局部连接关系且对平移具有等变性。&lt;br&gt;池化则是这样的先验：每一个单元都具有对少量平移的不变性。&lt;/p&gt;
&lt;h2 id=&quot;随机-无监督特征&quot;&gt;&lt;a href=&quot;#随机-无监督特征&quot; class=&quot;headerlink&quot; title=&quot;随机/无监督特征&quot;&gt;&lt;/a&gt;随机/无监督特征&lt;/h2&gt;&lt;p&gt;卷积核的确定有几种方式，一种是随机确定，一种是手动指定，另一种是采用无监督的标准来学习到一个卷积核。&lt;br&gt;通常允许底层的特征确定和上层的分类相分离，即底层采用无监督方法来学习特征，构造供高层使用的训练集，然后高层采用一个分类算法（可非神经网络）来进行分类。&lt;/p&gt;
&lt;h2 id=&quot;神经科学基础与卷积网络的密切关系&quot;&gt;&lt;a href=&quot;#神经科学基础与卷积网络的密切关系&quot; class=&quot;headerlink&quot; title=&quot;神经科学基础与卷积网络的密切关系&quot;&gt;&lt;/a&gt;神经科学基础与卷积网络的密切关系&lt;/h2&gt;&lt;p&gt;卷积网络是受神经科学启发，成功应用于机器学习领域一个范例。&lt;br&gt;卷积网络有其神经科学的基础在。&lt;br&gt;比如卷积即使模拟初级视觉皮层的简单细胞，其活动可概括为在一个小的空间位置感受野内的图像的线性函数。&lt;br&gt;池化则启发自初级视觉皮层的复杂细胞，其对特征位置的微小偏移具有不变性。&lt;/p&gt;
&lt;p&gt;类似从神经科学中启发出来的还有注意力机制，目前在NLP领域应用比较成功，在视觉领域则未见大成。卷积网络目前仍然主要集中于视觉。&lt;/p&gt;
&lt;p&gt;Hinton在1988年提出了基于反向传播的时延神经网络(time delay neural network, TDNN)，主要用于一维的时间序列分析，此后LeCun在1998年左右将反向传播应用到二维图像的识别，成功发明了LeNet并开启了现代卷积网络的大门。&lt;/p&gt;
&lt;p&gt;卷积网络也是第一批能使用反向传播进行有效训练的深度网络之一。&lt;br&gt;一般的反向传播网络被认为是失败的，但是卷积网络加上反向传播奇迹般的发挥了很好的效果。&lt;br&gt;本书作者认为，可能是卷积网络的计算效率更高，能够快速运行实验并进行调参的原因。。&lt;/p&gt;
&lt;p&gt;总的来说，卷积网络是神经网络的一种特化，这种特化在具有空间/序列等网格结构拓扑上表现良好，实际上，卷积网络的杀手级应用还是在二维图像方面。一维的序列处理（时间序列，文本序列等）主要被另一种神经网络的特化–循环神经网络所占领。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本章写卷积神经网络，本文摘其中的要点稍作梳理。&lt;/p&gt;
&lt;p&gt;个人觉得，看完本章应该获得如下的take home message：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;卷积和卷积神经网络的基本概念&lt;/li&gt;
&lt;li&gt;卷积网络背后的三个重要概念：稀疏交互，参数共享，等变表示&lt;/li&gt;

    
    </summary>
    
      <category term="深度学习 | Deep Learning" scheme="http://whatbeg.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-Deep-Learning/"/>
    
    
      <category term="机器学习" scheme="http://whatbeg.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="深度学习" scheme="http://whatbeg.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
</feed>
