<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Whatbeg&#39;s blog</title>
  <subtitle>当你的才华撑不起你的野心时，就应该静下心来好好学习。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://whatbeg.com/"/>
  <updated>2017-06-07T08:41:23.120Z</updated>
  <id>http://whatbeg.com/</id>
  
  <author>
    <name>whatbeg</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>读《科学研究的艺术》</title>
    <link href="http://whatbeg.com/2017/06/07/artofresearch.html"/>
    <id>http://whatbeg.com/2017/06/07/artofresearch.html</id>
    <published>2017-06-07T08:39:44.000Z</published>
    <updated>2017-06-07T08:41:23.120Z</updated>
    
    <content type="html">&lt;p&gt;陈校长的悦读经典计划开出了一个非常不错的书单，包括了各个学科的经典书籍，经史子集，诸咸皆备，感觉可以看上两三年的了。这次抓到一本《科学研究的艺术》，看名字挺6的，于是借来看了看，有一些启发，可以与读者分享。&lt;/p&gt;
&lt;p&gt;本书的作者是剑桥大学的一个动物病理学教授，名叫贝弗里奇，所以说本书几乎所有的具体例子和一些论述都是关于生物学，病理学的，作为非此专业的我们来说，只需要理解其基本思想即可。&lt;/p&gt;
&lt;p&gt;书中论述的几章包括，准备工作，实验，机遇，假说，想象力，直觉，推理，观察，困难，战略战术，以及科学家本身。&lt;/p&gt;
&lt;p&gt;下面将扼要描述下每章的重要思想。&lt;/p&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;过多的阅读可能会损害创造力，旧的成见对于新的见解的产生可能有妨碍作用。原因可能如下，当满载丰富知识的头脑思考问题时，会不自觉的偏向于相应的知识，如果这些知识能够解决问题，那么很好，如果无法解决，那么可能会这些知识可能会使得头脑很难想象出一条新颖独创的路。拜伦写道，“要有独到之间必须多思少读，但这是不可能的，因为在学会思考之前势必先已阅读.”。（窃以为，完全不阅读也是不可能的，否则无法产生思考的方向，也不知道问题的进展，缺乏一些必要的基础知识等都会使得问题的解决走一些弯路，甚至无法开展。）&lt;br&gt;解决这个问题的一个办法即为批判式阅读，用阅读来启发思想，而不是填满思想。尽信书不如无书。&lt;br&gt;成功的科学家往往兴趣广泛，因为他们更容易将有关联的观点联系起来。&lt;br&gt;对于普遍规律具有清晰的概念，而不是把它们当成一成不变的法则，对于创造性思维来说，见森林比见树木来得更为重要。&lt;br&gt;略读。文章的索引卡片。&lt;br&gt;阅读一些科学伟人的生平著作，参加科学会议是很有帮助的。&lt;/p&gt;
&lt;p&gt;着手研究问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;决定研究的题目。最好在实验室的研究范围内选择题目，就能够得益于老师同学的指导和关注。初学研究工作的人最好选择一个很可能出成果的题目，而又不超出其技术能力。&lt;/li&gt;
&lt;li&gt;明确这方面已经做过哪些研究。表现为对有关文献的充分研究，即所谓的“调研”阶段。（这里有作者在书中反复提到的一句话：“把人们观察到的现象同人们对这些现象的解释分开”。）&lt;br&gt;整理资料，弄清资料之间的相互关系并试图规定课题等做法在这一阶段都是有益的。&lt;/li&gt;
&lt;li&gt;形式化。这一阶段，研究人员可以将课题分割成若干公式化的问题，即所谓的形式化，并开始从实验入手。准备工作阶段，应注意寻找现有知识上的空档，不同作者报告中的差别，一些矛盾和线索等。&lt;/li&gt;
&lt;li&gt;实验。实验的成功与否主要取决于准备工作的细致程度。一流科学家一般实现对课题加以周密思考，并将课题分成若干关键问题，然后精心设计为这些问题提供答案的实验。（我对这点深有同感，以前跑实验经常会过于随意，想着反正有机器，有时间，一旦实验结果不满意，变换一下实验设置又会马上重新跑一下，直到遇到比较好的结果，这种毫无头绪的搞法无形中浪费了许多时间，实际上实验应该是用来验证某些猜想，回答某些问题的，过多盲目的跑实验那是数据竞赛做的事。在一定程度上，设计实验也是一门艺术。）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;实验&quot;&gt;&lt;a href=&quot;#实验&quot; class=&quot;headerlink&quot; title=&quot;实验&quot;&gt;&lt;/a&gt;实验&lt;/h2&gt;&lt;p&gt;应该尽可能地在研究工作的开头做一项简单的关键性试验，以判断所考虑的主要假说是否成立。&lt;br&gt;一次成功的实验，最基本的条件就是能够重现。&lt;br&gt;做实验时，在技术要点上采取极其审慎的态度是非常值得的。&lt;br&gt;对实验工作的全部细节进行详尽的记录是一条基本而重要的原则。&lt;br&gt;实验有时也会给人以十分错误的印象，最常见的原因是因为技术上的错误，所以实验人员应该对自己的技术规程掌握透彻并极端熟练，才能够真正信赖实验结果。&lt;/p&gt;
&lt;h2 id=&quot;机遇&quot;&gt;&lt;a href=&quot;#机遇&quot; class=&quot;headerlink&quot; title=&quot;机遇&quot;&gt;&lt;/a&gt;机遇&lt;/h2&gt;&lt;p&gt;这一章主要论述机遇在科学发现中的作用，并且举了许多机遇导致重大科学发现的例子（主要是生物学），具体例子不再细说，只是我们可以提取的信息是，在实验出现异常情况的时候，不要让异常结果从我们的眼皮底下溜过去，因为有时候异常情况往往催生了新的发现。由于以重要线索为形式的机会并不多见，所以需要做好准备，保持敏锐的观察力，保持警觉。如何解释线索也很重要。&lt;/p&gt;
&lt;p&gt;光有上面这些还不够，很有可能对于某个发现，我们不能对其做深入研究，比如弗莱明早在1929年就发现了青霉素的粗制剂，但是没有能够制成一种治疗用的药物，知道后来弗洛里才将青霉素发展成药物，从而挽救了众多的生命。&lt;br&gt;缺乏应用，遭到冷淡和反对，这些都是一个新发现可能会遇到的阻碍。&lt;br&gt;总的来说，保持想象力，鉴赏力和对一切未经解释的观察和现象进行思考的习惯裨益甚多。&lt;/p&gt;
&lt;h2 id=&quot;假说&quot;&gt;&lt;a href=&quot;#假说&quot; class=&quot;headerlink&quot; title=&quot;假说&quot;&gt;&lt;/a&gt;假说&lt;/h2&gt;&lt;p&gt;假说是研究工作者最关键的一种思想方法，许许多多的实验与观测都是针对验证假设来的。&lt;br&gt;当第一次实验或观测的结果符合预期的结果时，实验人员还需进一步地确认，从实验中搜寻证明，方能够确信自己的设想。（这可能是因为，实验的步骤中，可能会出现各种各样大的或者小的错误，还有可能假说只在特定的实验条件下才会成立的缘故。）&lt;br&gt;当第一次实验或观测的结果不符合预期结果时，有时可以用一种起澄清作用的补充性假说来适应矛盾，即增加条件。&lt;br&gt;须知：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不要抱住已证明无用的设想不放。&lt;/li&gt;
&lt;li&gt;在实验或者观察时，需要保持客观态度，保持使自己的意见和愿望服从客观事实，客观证据的习惯。&lt;/li&gt;
&lt;li&gt;对设想进行批判的审查。&lt;/li&gt;
&lt;li&gt;对错误的观念应避之三舍，因为一旦相信了某种错误的设想之后，即使观察到了矛盾的事实，你也不会放弃它，知道提出了更符合新事实的假说才会被丢弃。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;想象力&quot;&gt;&lt;a href=&quot;#想象力&quot; class=&quot;headerlink&quot; title=&quot;想象力&quot;&gt;&lt;/a&gt;想象力&lt;/h2&gt;&lt;p&gt;也许，一个训练有素的思想家的主要特点在于，他不在佐证不足的情况下轻易做出结论。&lt;br&gt;反复思考某一个问题，给予有步骤的和连贯的考虑，这可能比让其任意在脑海中自由运行更有效率，当然，自由地运行也有其作用，也是必不可少的。&lt;br&gt;如果具有有关学科甚至远缘学科的广博学识，那么产生独创见解的可能性就越大，这是因为，独创性常常在于发现两个或以上研究对象或者设想之间的联系或者相似之处，而原来以为这些对象或设想彼此没有联系。（学科的交叉常常能有意想不到的收获，比如统计物理学与优化理论的结合，产生了模拟退火算法，生物学与优化理论的结合，产生了遗传算法等等，相应的，在同一学科中也常常可以实现这种交叉，比如，常常首先出现两种解决方法，双方的优劣都很明显并且互补，这时，将二者统合，取长补短，又能够形成一种新的解决办法，从而使得效果提升或者效率提升，从而领域又得以推进）&lt;br&gt;其实，不管其起源如何，绝大多数的假说都被证明是错误的。但是不能因为怕犯错误就不去发现，谨小慎微的科学家既不犯错误，也不会又发现。&lt;br&gt;科学家的好奇心，通常表现为探索对他所注意到的，但尚无令人满意解释的事物或其相互关系的认识。科学家有一种强烈的愿望，就是寻求其间并无明显联系的大量资料背后的那些原理。&lt;br&gt;认识到困难或难题的存在，能够激励设想的产生。&lt;br&gt;学术讨论在以下三个方面对创造性思维活动有着促进作用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;别人可能提出有益的建议&lt;/li&gt;
&lt;li&gt;一个新设想可能有两三个人集中他们的知识或设想而产生&lt;/li&gt;
&lt;li&gt;讨论也是揭露谬误的有效方法&lt;/li&gt;
&lt;li&gt;给人激励与鼓舞，是认真做&lt;/li&gt;
&lt;li&gt;帮助人们摆脱已经形成的，事实证明无成效的思想习惯，即摆脱条件限制的思考&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;与实验室同仁们三五成群共进午餐能够获得大量机会进行一些非正式的讨论，也可以交流各自的兴趣与问题，热情是富有感染力的。&lt;/p&gt;
&lt;p&gt;有时对一个问题思考过久，有可能重复同样的思路，或者钻入牛角尖。这时，我们可以采用两种方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;把问题暂时搁置 （有时候对一个问题百思不得其解，可以适当地先放一放，等到过一段时间再来接触时，往往有新的进展或发现）&lt;/li&gt;
&lt;li&gt;同别人讨论，或是向领域外的人讲述你的工作&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;直觉&quot;&gt;&lt;a href=&quot;#直觉&quot; class=&quot;headerlink&quot; title=&quot;直觉&quot;&gt;&lt;/a&gt;直觉&lt;/h2&gt;&lt;p&gt;作者列出了一些有利于产生直觉的条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对问题持续自觉思考以作思想上的准备&lt;/li&gt;
&lt;li&gt;防止注意力分散，多数人必须不受中断与干扰&lt;/li&gt;
&lt;li&gt;直觉经常出现在不研究问题的时候&lt;/li&gt;
&lt;li&gt;通过诸如讨论，批判阅读和写作等与他人的思想接触，对直觉有所促进&lt;/li&gt;
&lt;li&gt;直觉来去无踪，最好用笔记记下来&lt;/li&gt;
&lt;li&gt;不利影响还有：脑力和体力的疲劳，对问题工作过度，琐事刺激和噪音&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在科学研究中，我们的思维和行动常常受限于我们的科学鉴赏力，即常常不得不受以鉴赏力为依据的个人判断的指导。&lt;/p&gt;
&lt;h2 id=&quot;推理&quot;&gt;&lt;a href=&quot;#推理&quot; class=&quot;headerlink&quot; title=&quot;推理&quot;&gt;&lt;/a&gt;推理&lt;/h2&gt;&lt;p&gt;作者认为，推理不能产生新发现，但是作者应该指的是纯粹的推理不能产生新的发现，而在事实或者实验，观测基础上做一定的推理则有可能产生新的发现。而且推理在科学研究中也起到了巨大的作用，为此，作者在后面单独叙述了一节。&lt;br&gt;少使用未经证实的假定。&lt;br&gt;人们很容易抗拒那些不符合自己看法的观点。科学家绝不能容许自己的思想固定不变，不仅见解不能固定不变，而且对待当时流行观点的态度也不能一成不变。&lt;br&gt;任何公认的观念或“确立的原则”，一旦不符合观察到的现象，都不能视为毋庸置疑。&lt;br&gt;类比法很多时候作用很大， 但是也常使人误入迷途。&lt;/p&gt;
&lt;h2 id=&quot;观察&quot;&gt;&lt;a href=&quot;#观察&quot; class=&quot;headerlink&quot; title=&quot;观察&quot;&gt;&lt;/a&gt;观察&lt;/h2&gt;&lt;p&gt;“知识来源于对周围事件中相似处和重现情况的注意” – 特罗特&lt;br&gt;观察者往往不自觉地产生谬误。&lt;br&gt;有效的观察是指注意到某个事物，并通过将它和某个注意到的或已知的事物联系起来，赋予其意义。&lt;br&gt;观察到一切是不可能的，所以选定范围很重要，但是不代表我们需要忽略其他现象，尤其是特殊现象。&lt;/p&gt;
&lt;h2 id=&quot;困难&quot;&gt;&lt;a href=&quot;#困难&quot; class=&quot;headerlink&quot; title=&quot;困难&quot;&gt;&lt;/a&gt;困难&lt;/h2&gt;&lt;p&gt;批判的思想方法和怀疑态度之间是泾渭分明的。我们所追求的是正直，客观的判断佐证，尽可能摆脱成见，尤其是没有事实支撑的成见，佐证不足时不宜轻易下结论。&lt;br&gt;研究的愉快比在于研究本身，因为其它方面的利益收获都是靠不住的。&lt;br&gt;人们对新设想有抗拒心理。&lt;/p&gt;
&lt;h2 id=&quot;战略与战术&quot;&gt;&lt;a href=&quot;#战略与战术&quot; class=&quot;headerlink&quot; title=&quot;战略与战术&quot;&gt;&lt;/a&gt;战略与战术&lt;/h2&gt;&lt;p&gt;关于应用研究和纯理论研究各有什么价值，引起了一些争论。&lt;br&gt;战略与战术针对的是研究计划而言，第一种是研究工作的实际处理，比如跑一两个实验，这相当于战争中的战术，第二种是时间较长，规模较大的计划，称之为战略。第三种则是研究方针的计划，主要由一些委员会来管。&lt;br&gt;在决定了研究方向以后，也不应埋头苦干像一匹拉车的马，只见脚下的路而不见路旁的景色。也不应只见树木，而要常常见见森林，在全局上有一些把握。&lt;/p&gt;
&lt;p&gt;关于纯理论研究和应用研究，作者认为这种分类较主观，不太严谨。通常所谓应用研究指的是，对具有实际意义的问题进行有目的的研究，而纯理论研究则完全是为了取得知识而取得知识。&lt;br&gt;在应用研究上，人们支持的是项目，而纯理论研究中，人们支持的是人。&lt;br&gt;许多新发现自应用研究而来。通常应用研究比纯理论研究更难出成果，因为研究人员必须坚持解决既定任务而不能随意追踪可能出现的、有希望的线索。并且，在应用研究方面，大多数的领域已被人探索过，很多简单的，显而易见的问题已被解决。&lt;br&gt;要解决实际问题，仅仅应用现有知识是不够的，我们经常会发现知识中需要填补的空白点。在应用研究中如果只限于解决现有问题而不去努力理解其内部原理，那么这种解决方法可能缺乏普遍意义，只能解决局部问题。&lt;br&gt;总的来说，我们既需要纯理论研究，又需要应用研究，二者是相辅相成的，互相促进的。&lt;br&gt;科学研究又分为探索性研究和发展性研究，相信我不说读者也能理解它们的意思。前者比较自由，富于冒险，有时重大发现，有时一无所得。而后者通常由按部就班，一丝不苟的科学家来做，他们安于巩固已有进展，在已开辟的领域取得小的进展，并通过付诸应用来充分利用已取得的成果，又称为“安全第一”的研究。不过，据我观察，大多数的研究应该算是后者，真正有成本，有人力去发展基础研究的机构相比于广大的发展性研究者来说显得有些小。&lt;/p&gt;
&lt;p&gt;“边缘”研究指的是在两门学科交接领域内进行的研究，科学家如果有广泛的科学基础，能够运用并联系两种学科中的知识，则很容易出成果。甲学科中一项普通的事实，原理或技术应用到乙学科时，可能非常新奇而有效。&lt;/p&gt;
&lt;p&gt;一切科学上的进展都是以先前的知识为基础的。&lt;br&gt;有的时候，决定一项研究的基本思想是来自应用或移植其它领域发现的新原理或新技术，这种取得进展的方法称为“移植法”。其有效，简便，在应用研究中用的最多。利用其他学科中采用的新技术是移植法的一种重要形式，所以说我们不应该对研究领域之外的至少是重大发展的技术毫无了解。&lt;br&gt;对于一个复杂过程，有时把这个过程分解成若干组成部分，分别加以考虑，这种方法常常很有帮助。&lt;br&gt;进行科学研究并无一定规律可循，研究人员应发挥自己的聪明才智，创新精神和判断能力，利用一切有用的方法。&lt;br&gt;经验给我们证明，充分理解了问题，就几乎一定能发现有用的事实。&lt;br&gt;当人们处于绝境时，另一个可以尝试的方法是：从头开始，从不同的角度看问题，找出新的途径。或者是与人讨论。&lt;br&gt;一般说来，研究一经开始，研究人员就应竭尽全力去完成，不宜频繁改变自己的任务，那样往往一事无成。&lt;br&gt;对研究的问题最好能定期回顾。但是，未获重要成果的研究工作则不宜发表，也不宜发表未得明确结论的研究工作，它使得科学期刊质量降低，并影响作者在有识之士心目中的声誉。&lt;br&gt;科学研究的一般战略是，研究时具有明确的目标，但同时保持警觉，注意发现并捕捉意外的时机。&lt;/p&gt;
&lt;h2 id=&quot;科学家&quot;&gt;&lt;a href=&quot;#科学家&quot; class=&quot;headerlink&quot; title=&quot;科学家&quot;&gt;&lt;/a&gt;科学家&lt;/h2&gt;&lt;p&gt;对于科学家来说，两条最基本的品格是对科学的热爱和难以满足的好奇心，但是光有这些还不够，聪明的资质，内在的干劲，勤奋的工作态度和坚韧不拔的精神都是必不可少的要素。&lt;br&gt;普通的考试并不足以判断研究能力的强弱。&lt;br&gt;人大体分为两类，一类人惯于对外界的影响起强烈的反应，不轻易接受现成的思想，习惯对别人教给自己的一切提出疑问；第二类人则习惯接受正规教育所传授的知识，更容易适应生活，他们头脑里充满了公认的观点和固定的看法，凡接收知识首先默认他们是对的，作者认为，这类人或者接近这种被动型的人不适于从事研究工作。&lt;br&gt;并不是所有人都能从事研究工作而有所成就的，在科研上没有成就不代表在其他方面的智力与能力上有所缺陷，科研仅仅是职业的一种而已。&lt;br&gt;米斯认为，实用的科学发现和技术有三种不同的研究方法，（1）理论的综合 （2）观察和实验 （3）发明。&lt;br&gt;根据科学家的思想方法，可以分为两类，一种是推测型，他们利用想象和直觉来得到解决方法，然后凭借实验与观察，对自己的假说加以检验。另一种是条理型的，他们一步步谨慎推理，进展缓慢，收集了大部分资料后才得出解决方法。&lt;br&gt;巴甫洛夫对有志于科学的青年的忠告：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;循序渐进&lt;/li&gt;
&lt;li&gt;谦虚&lt;/li&gt;
&lt;li&gt;热情&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;和年轻人接触有助于保持观点的敏锐新鲜。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;终于把这本13万字的作品用5000多字总了出来，之所以摘下这么多书中的句子，是因为本书提供了整个科学研究的方法论上的一些启发，相信对研究工作者和整个献身于科学工作或者工程工作的人们有所裨益。但是，书中只是给了一些要点和建议，并非对研究工作者提的要求，所以我们需要根据自己的情况来选择性的吸收，甚至完全撇开本书，仍然不妨碍研究工作者做出出色的成绩。所以，各取所需即可，希望能对迷惑的科研工作者或科研新手甚至广大工程人员有一定的启发，若如此，也不负本文了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;陈校长的悦读经典计划开出了一个非常不错的书单，包括了各个学科的经典书籍，经史子集，诸咸皆备，感觉可以看上两三年的了。这次抓到一本《科学研究的艺术》，看名字挺6的，于是借来看了看，有一些启发，可以与读者分享。&lt;/p&gt;
&lt;p&gt;本书的作者是剑桥大学的一个动物病理学教授，名叫贝弗里
    
    </summary>
    
      <category term="读书 | Reading" scheme="http://whatbeg.com/categories/%E8%AF%BB%E4%B9%A6-Reading/"/>
    
    
      <category term="读书" scheme="http://whatbeg.com/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>Deep Learning读书笔记（2）【深度学习的数学基础摘要】(未竟稿)</title>
    <link href="http://whatbeg.com/2017/05/28/deeplearningbook-02.html"/>
    <id>http://whatbeg.com/2017/05/28/deeplearningbook-02.html</id>
    <published>2017-05-28T03:12:46.000Z</published>
    <updated>2017-05-29T02:59:16.824Z</updated>
    
    <content type="html">&lt;p&gt;深度学习需要的数学基础同机器学习所需的数学基础类似，包括三大块：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;线性代数&lt;/li&gt;
&lt;li&gt;概率论与数理统计&lt;/li&gt;
&lt;li&gt;信息论基础&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;分三部分摘要如下，&lt;/p&gt;
&lt;h2 id=&quot;线性代数&quot;&gt;&lt;a href=&quot;#线性代数&quot; class=&quot;headerlink&quot; title=&quot;线性代数&quot;&gt;&lt;/a&gt;线性代数&lt;/h2&gt;&lt;h3 id=&quot;Scalar-Vectors-Matrices-Tensors的概念&quot;&gt;&lt;a href=&quot;#Scalar-Vectors-Matrices-Tensors的概念&quot; class=&quot;headerlink&quot; title=&quot;Scalar, Vectors, Matrices, Tensors的概念&quot;&gt;&lt;/a&gt;Scalar, Vectors, Matrices, Tensors的概念&lt;/h3&gt;&lt;p&gt;Scalar: 标量，可以看成一个数&lt;br&gt;Vector: 向量，可以看成一个一维数组&lt;br&gt;Matrix: 矩阵，可以看成二维数组&lt;br&gt;Tensor: 张量，三维或三维以上的数组的统称，维度不定&lt;/p&gt;
&lt;p&gt;很多时候我们处理的都是超过2维的数组，这时候叫矩阵(Matrix)又不太合适，因为一般提到矩阵都会想到二维的矩阵，所以采用Tensor来统一表示不定维的数组。这也是几乎所有深度学习框架的基本数据结构。”Tensorflow”名字中就包含了”Tensor”，于是向量可以称为1-D Tensor，一维张量，矩阵可以称为二维张量。&lt;/p&gt;
&lt;p&gt;这样，深度学习中包括数据，梯度，权重等等都可以用某维度的Tensor来表示了，底层数据结构的统一为上层编程带来了极大的方便。&lt;/p&gt;
&lt;h3 id=&quot;矩阵的基本操作&quot;&gt;&lt;a href=&quot;#矩阵的基本操作&quot; class=&quot;headerlink&quot; title=&quot;矩阵的基本操作&quot;&gt;&lt;/a&gt;矩阵的基本操作&lt;/h3&gt;&lt;p&gt;矩阵转置，相乘，矩阵与向量相乘&lt;br&gt;单位矩阵与逆矩阵&lt;br&gt;线性相关性&lt;br&gt;展开(Span)，一个向量集的展开定义为向量集中通过向量的线性组合能够得到的点&lt;/p&gt;
&lt;h3 id=&quot;奇异-Singular-矩阵和非奇异矩阵&quot;&gt;&lt;a href=&quot;#奇异-Singular-矩阵和非奇异矩阵&quot; class=&quot;headerlink&quot; title=&quot;奇异(Singular)矩阵和非奇异矩阵&quot;&gt;&lt;/a&gt;奇异(Singular)矩阵和非奇异矩阵&lt;/h3&gt;&lt;p&gt;奇异矩阵：存在线性相关的列的方阵或者行列式为0的方阵称为奇异矩阵&lt;br&gt;奇异矩阵不可逆&lt;br&gt;若n阶方阵A的行列式不为零，即$|A|≠0$，则称A为非奇异矩阵或满秩矩阵，存在逆矩阵&lt;/p&gt;
&lt;p&gt;要注意的是，即使A不是方阵或者A是方阵但是奇异，也是有可能解方程$Ax=b$的，只是不能通过求逆矩阵$A^{-1}$从而$x=A^{-1}b$来解而已。&lt;br&gt;线性方程组$Ax=b$有解的充分必要条件是: 增广矩阵的秩等于系数矩阵的秩，即$r(A,b) = r(A)$&lt;/p&gt;
&lt;h3 id=&quot;范数-Norm&quot;&gt;&lt;a href=&quot;#范数-Norm&quot; class=&quot;headerlink&quot; title=&quot;范数(Norm)&quot;&gt;&lt;/a&gt;范数(Norm)&lt;/h3&gt;&lt;p&gt;范数的作用是度量向量的大小，将向量映射为非负实数&lt;br&gt;$L^p$范数定义为：&lt;br&gt;$$||x||_p=(\Sigma_i {|x_i|^p})^{\frac 1 p}$$&lt;/p&gt;
&lt;p&gt;在正则化中常常用到范数，主要用到1-范数和2-范数。&lt;/p&gt;
&lt;p&gt;$x^{\top}x=||x||_2^2$&lt;/p&gt;
&lt;p&gt;Frobenius Norms:  $||A||_{F}=\sqrt{\Sigma_{i,j}A_{i,j}^2}$&lt;/p&gt;
&lt;p&gt;向量点积： $x^{\top}y=||x||_2||y||_2cos\theta$&lt;/p&gt;
&lt;h3 id=&quot;特殊矩阵&quot;&gt;&lt;a href=&quot;#特殊矩阵&quot; class=&quot;headerlink&quot; title=&quot;特殊矩阵&quot;&gt;&lt;/a&gt;特殊矩阵&lt;/h3&gt;&lt;p&gt;对角矩阵&lt;br&gt;实对称矩阵及其性质：&lt;br&gt;（1）A的特征值为实数，且其特征向量为实向量&lt;br&gt;（2）A的不同特征值对应的特征向量必定正交&lt;br&gt;（3）A一定有n个线性无关的特征向量，从而A相似于对角矩阵&lt;br&gt;正交矩阵的性质： $A^{-1}=A^{\top}$&lt;/p&gt;
&lt;h3 id=&quot;特征值分解&quot;&gt;&lt;a href=&quot;#特征值分解&quot; class=&quot;headerlink&quot; title=&quot;特征值分解&quot;&gt;&lt;/a&gt;特征值分解&lt;/h3&gt;&lt;p&gt;特征值分解的思想类似于因式分解的思想，对于一个数，我们想要分析它的性质，可能直接看看不出什么来，但是可以把它因式分解一下，再来分析。比如180，$180 = 2 \times 2 \times 3 \times 3 \times 5=2^2 \times 3^2 \times 5^1$，这样我们可以知道，180是2,3,5的倍数，也是6的倍数，15的倍数，等等，进而分析其它性质。&lt;br&gt;矩阵分解也是如此，面对一个复杂的矩阵，我们可能毫无头绪，但是将其分解为两个或者多个矩阵的乘积，我们可能就能收获很多的性质。&lt;br&gt;特征值分解 $A=Q \Lambda Q^{\top}$，将矩阵分解为特征值和特征向量，Q是由A的特征向量组成的正交矩阵，而$\Lambda$则为特征值组成的对角矩阵，$\Lambda_{i,i}$ 对应着 $Q_{:,i}$。&lt;/p&gt;
&lt;h3 id=&quot;奇异值分解-Singular-Value-Decomposition&quot;&gt;&lt;a href=&quot;#奇异值分解-Singular-Value-Decomposition&quot; class=&quot;headerlink&quot; title=&quot;奇异值分解(Singular Value Decomposition)&quot;&gt;&lt;/a&gt;奇异值分解(Singular Value Decomposition)&lt;/h3&gt;&lt;p&gt;$A=UDV^{-1}$，U称为左奇异向量，为$AA^{\top}$的特征向量，V称为右奇异向量，为$A^{\top}A$的特征向量。&lt;br&gt;非0奇异值是$A^{\top}A$的特征值的开根号&lt;/p&gt;
&lt;h3 id=&quot;Moore-Penrose-Pseudoinverse&quot;&gt;&lt;a href=&quot;#Moore-Penrose-Pseudoinverse&quot; class=&quot;headerlink&quot; title=&quot;Moore-Penrose Pseudoinverse&quot;&gt;&lt;/a&gt;Moore-Penrose Pseudoinverse&lt;/h3&gt;&lt;p&gt;通常意义上的逆矩阵只有在当A为n阶方阵，并且行列式不为0时才存在，但是有时候这个条件显得太苛刻了，于是人们将条件做一些放松，使得能够推广到不可逆的矩阵或者长方的矩阵上，Penrose给出了四个矩阵方程，即放松后的条件，满足所有或者部分这些条件的逆矩阵称之为广义逆矩阵。满足所有者四个条件的称之为Moore-Penrose伪逆。&lt;br&gt;四个方程分别为：&lt;br&gt;(1) $AXA = A$&lt;br&gt;(2) $XAX = X$&lt;br&gt;(3) $(AH)^H = AX$&lt;br&gt;(4) $(XA)^H = XA$&lt;br&gt;（$A^H$为共轭转置，即$\bar{A} ^ T$）&lt;br&gt;对于$A \in C^{m \times n}$，如果有$X \in C^{n \times m}$满足这四个方程的某几个或者全部，那么X就称为A的广义逆。&lt;br&gt;满足这四个方程则称为M-P伪逆。&lt;/p&gt;
&lt;h3 id=&quot;迹运算符-Trace&quot;&gt;&lt;a href=&quot;#迹运算符-Trace&quot; class=&quot;headerlink&quot; title=&quot;迹运算符(Trace)&quot;&gt;&lt;/a&gt;迹运算符(Trace)&lt;/h3&gt;&lt;p&gt;$ Tr(A) = {\Sigma}_i A_{i,i} $&lt;br&gt;迹运算符有许多性质，比如循环不变性等等&lt;/p&gt;
&lt;h3 id=&quot;行列式&quot;&gt;&lt;a href=&quot;#行列式&quot; class=&quot;headerlink&quot; title=&quot;行列式&quot;&gt;&lt;/a&gt;行列式&lt;/h3&gt;&lt;p&gt;行列式的绝对值度量了矩阵扩展或者空间收缩所包含的操作多少的度量。&lt;/p&gt;
&lt;h2 id=&quot;概率论&quot;&gt;&lt;a href=&quot;#概率论&quot; class=&quot;headerlink&quot; title=&quot;概率论&quot;&gt;&lt;/a&gt;概率论&lt;/h2&gt;&lt;p&gt;概率论也是很多领域包括计算机科学尤其是机器学习这块的基础学科。一般的计算机程序或者问题的求解是没有随机性的，按照一个确定的算法来即可。但是在机器学习中，经常会遇到不确定的量，比如说数据的采集，可能是随机采集的，或者说数据中包含随机噪声等等，而概率论则是量化各种不确定性的手段。&lt;br&gt;可以说，几乎所有的活动都要求参与者具有分析不确定性的出现的一些能力。&lt;br&gt;不确定性有三种可能的来源：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统固有的随机性&lt;br&gt;比如说打牌的游戏，我们都会假设洗牌确实是能够将牌的顺序变的随机。&lt;/li&gt;
&lt;li&gt;不完备的观察&lt;br&gt;即使是一个确定的系统，当我们不能够观察到系统中所有驱动系统行为的变量时，也是会呈现出随机性的。&lt;/li&gt;
&lt;li&gt;不完备的建模&lt;br&gt;我们有时候建模时无法完美地使用所有信息，从而必须丢弃一些观察到的信息，丢弃的信息就会造成模型预测的不确定性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在概率论领域，有两种学派，一种是频率学派，一种是贝叶斯学派。关于这两个学派的观点，可以参看&lt;a href=&quot;https://www.zhihu.com/question/20587681&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;贝叶斯学派与频率学派有何不同？&lt;/a&gt;等。&lt;/p&gt;
&lt;h3 id=&quot;随机变量&quot;&gt;&lt;a href=&quot;#随机变量&quot; class=&quot;headerlink&quot; title=&quot;随机变量&quot;&gt;&lt;/a&gt;随机变量&lt;/h3&gt;&lt;p&gt;简单来说，随机变量就是&lt;strong&gt;能够随机的取不同值的变量&lt;/strong&gt;，又分为连续随机变量和离散随机变量，离散随机变量包含有限个或者可数无穷个状态，状态不必是整数。而连续随机变量则与一个实值相关联。&lt;/p&gt;
&lt;h3 id=&quot;概率分布&quot;&gt;&lt;a href=&quot;#概率分布&quot; class=&quot;headerlink&quot; title=&quot;概率分布&quot;&gt;&lt;/a&gt;概率分布&lt;/h3&gt;&lt;p&gt;一个或一组随机变量取到每个可能状态的可能性的描述即为概率分布。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;离散随机变量的概率分布称为概率质量函数(PMF, Probablity Mass Function)&lt;/li&gt;
&lt;li&gt;连续随机变量的概率分布称为概率密度函数(PDF, Probablity Density Function)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;边缘概率&quot;&gt;&lt;a href=&quot;#边缘概率&quot; class=&quot;headerlink&quot; title=&quot;边缘概率&quot;&gt;&lt;/a&gt;边缘概率&lt;/h3&gt;&lt;p&gt;原来变量集合的一个子集上的概率分布。&lt;/p&gt;
&lt;h3 id=&quot;条件概率及其链式法则&quot;&gt;&lt;a href=&quot;#条件概率及其链式法则&quot; class=&quot;headerlink&quot; title=&quot;条件概率及其链式法则&quot;&gt;&lt;/a&gt;条件概率及其链式法则&lt;/h3&gt;&lt;h3 id=&quot;独立和条件独立&quot;&gt;&lt;a href=&quot;#独立和条件独立&quot; class=&quot;headerlink&quot; title=&quot;独立和条件独立&quot;&gt;&lt;/a&gt;独立和条件独立&lt;/h3&gt;&lt;h3 id=&quot;期望，方差与协方差&quot;&gt;&lt;a href=&quot;#期望，方差与协方差&quot; class=&quot;headerlink&quot; title=&quot;期望，方差与协方差&quot;&gt;&lt;/a&gt;期望，方差与协方差&lt;/h3&gt;&lt;h3 id=&quot;常用概率分布&quot;&gt;&lt;a href=&quot;#常用概率分布&quot; class=&quot;headerlink&quot; title=&quot;常用概率分布&quot;&gt;&lt;/a&gt;常用概率分布&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;贝努利分布&lt;/li&gt;
&lt;li&gt;多贝努利分布/多类分布&lt;/li&gt;
&lt;li&gt;高斯分布&lt;/li&gt;
&lt;li&gt;指数分布&lt;/li&gt;
&lt;li&gt;拉普拉斯分布&lt;/li&gt;
&lt;li&gt;狄拉克分布(Dirac)与经验分布&lt;/li&gt;
&lt;li&gt;混合分布&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;一些有用的性质和通用函数&quot;&gt;&lt;a href=&quot;#一些有用的性质和通用函数&quot; class=&quot;headerlink&quot; title=&quot;一些有用的性质和通用函数&quot;&gt;&lt;/a&gt;一些有用的性质和通用函数&lt;/h3&gt;&lt;h3 id=&quot;贝叶斯规则&quot;&gt;&lt;a href=&quot;#贝叶斯规则&quot; class=&quot;headerlink&quot; title=&quot;贝叶斯规则&quot;&gt;&lt;/a&gt;贝叶斯规则&lt;/h3&gt;&lt;h3 id=&quot;连续变量的一些技术细节&quot;&gt;&lt;a href=&quot;#连续变量的一些技术细节&quot; class=&quot;headerlink&quot; title=&quot;连续变量的一些技术细节&quot;&gt;&lt;/a&gt;连续变量的一些技术细节&lt;/h3&gt;&lt;h2 id=&quot;信息论&quot;&gt;&lt;a href=&quot;#信息论&quot; class=&quot;headerlink&quot; title=&quot;信息论&quot;&gt;&lt;/a&gt;信息论&lt;/h2&gt;&lt;h2 id=&quot;结构化概率模型&quot;&gt;&lt;a href=&quot;#结构化概率模型&quot; class=&quot;headerlink&quot; title=&quot;结构化概率模型&quot;&gt;&lt;/a&gt;结构化概率模型&lt;/h2&gt;&lt;h2 id=&quot;References&quot;&gt;&lt;a href=&quot;#References&quot; class=&quot;headerlink&quot; title=&quot;References&quot;&gt;&lt;/a&gt;References&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ogbh7uglm.bkt.clouddn.com/MatrixCookBook.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Matrix Cook Book&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;深度学习需要的数学基础同机器学习所需的数学基础类似，包括三大块：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;线性代数&lt;/li&gt;
&lt;li&gt;概率论与数理统计&lt;/li&gt;
&lt;li&gt;信息论基础&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;分三部分摘要如下，&lt;/p&gt;
&lt;h2 id=&quot;线性代数&quot;&gt;&lt;a href=&quot;#线
    
    </summary>
    
      <category term="深度学习 | Deep Learning" scheme="http://whatbeg.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-Deep-Learning/"/>
    
    
      <category term="Deep Learning" scheme="http://whatbeg.com/tags/Deep-Learning/"/>
    
      <category term="深度学习" scheme="http://whatbeg.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Spark一些问题集锦【持续更新】</title>
    <link href="http://whatbeg.com/2017/05/28/sparkerror.html"/>
    <id>http://whatbeg.com/2017/05/28/sparkerror.html</id>
    <published>2017-05-28T02:04:35.000Z</published>
    <updated>2017-06-19T11:42:07.881Z</updated>
    
    <content type="html">&lt;p&gt;最近常跑Spark程序，主要是分布式机器学习和分布式深度学习这块，因为模型经常很大，比如VGG等，集群空余节点又不是很多，跑起来有时候会吃力，也遇到很多问题，积累一下以备后查。&lt;/p&gt;
&lt;h2 id=&quot;错误集锦&quot;&gt;&lt;a href=&quot;#错误集锦&quot; class=&quot;headerlink&quot; title=&quot;错误集锦&quot;&gt;&lt;/a&gt;错误集锦&lt;/h2&gt;&lt;h3 id=&quot;ClosedChannelException&quot;&gt;&lt;a href=&quot;#ClosedChannelException&quot; class=&quot;headerlink&quot; title=&quot;ClosedChannelException&quot;&gt;&lt;/a&gt;ClosedChannelException&lt;/h3&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ERROR YarnClientSchedulerBackend:&lt;span class=&quot;number&quot;&gt;70&lt;/span&gt; - Yarn application has already exited with state FINISHED!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; ERROR SparkContext:&lt;span class=&quot;number&quot;&gt;91&lt;/span&gt; - Error initializing SparkContext.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;java&lt;span class=&quot;selector-class&quot;&gt;.lang&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.IllegalStateException&lt;/span&gt;: Spark context stopped while waiting &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; backend&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; ERROR TransportClient:&lt;span class=&quot;number&quot;&gt;245&lt;/span&gt; - Failed to send RPC &lt;span class=&quot;number&quot;&gt;7202466410763583466&lt;/span&gt; to /xx&lt;span class=&quot;selector-class&quot;&gt;.xx&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.xx&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.xx&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;54864&lt;/span&gt;: java&lt;span class=&quot;selector-class&quot;&gt;.nio&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.channels&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.ClosedChannelException&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; ERROR YarnSchedulerBackend&lt;span class=&quot;variable&quot;&gt;$YarnSchedulerEndpoint&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;91&lt;/span&gt; - Sending RequestExecutors(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,Map()) to AM was unsuccessful&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面这几个错误通常一起爆出。&lt;br&gt;【原因分析】&lt;br&gt;可能是分配给node的内存太小，Spark默认启动两个executor，使用每个executor的内存为1G，而数据太大，导致yarn直接Kill掉了executor，IO也一并关闭，所以出现了&lt;code&gt;ClosedChannelException&lt;/code&gt;异常。&lt;br&gt;&lt;a href=&quot;http://stackoverflow.com/questions/27792839/spark-fail-when-running-pi-py-example-with-yarn-client-mode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里的错误&lt;/a&gt;分析[错误1]也有可能是由于Java 8的excessive memory allocation strategy&lt;br&gt;【解决方案】&lt;br&gt;根据&lt;a href=&quot;http://demo.aosustudio.com/12FAFEE6E5BE1F55356029F01C3AEEE1.AHtml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇文章&lt;/a&gt;在&lt;code&gt;yarn-site.xml&lt;/code&gt;中添加如下配置：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.nodemanager.pmem-check-enabled&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;false&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.nodemanager.vmem-check-enabled&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;false&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;或者在执行命令时附带参数： &lt;code&gt;--driver-memory 5g --executor-memory 5g&lt;/code&gt;，将Job可用内存显式地增大。&lt;br&gt;或者在&lt;code&gt;spark/conf/spark-defaults.conf&lt;/code&gt;添加如下Poperty：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;spark&lt;span class=&quot;selector-class&quot;&gt;.driver&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.memory&lt;/span&gt;              &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spark&lt;span class=&quot;selector-class&quot;&gt;.executor&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.memory&lt;/span&gt;            &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;甚至可以继续添加如下Property：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;spark&lt;span class=&quot;selector-class&quot;&gt;.yarn&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.executor&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.memoryOverhead&lt;/span&gt;          &lt;span class=&quot;number&quot;&gt;4096&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spark&lt;span class=&quot;selector-class&quot;&gt;.yarn&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.driver&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.memoryOverhead&lt;/span&gt;            &lt;span class=&quot;number&quot;&gt;8192&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;spark&lt;span class=&quot;selector-class&quot;&gt;.akka&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.frameSize&lt;/span&gt;                        &lt;span class=&quot;number&quot;&gt;700&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;Lost-Executors-et-al&quot;&gt;&lt;a href=&quot;#Lost-Executors-et-al&quot; class=&quot;headerlink&quot; title=&quot;Lost Executors et. al.&quot;&gt;&lt;/a&gt;Lost Executors et. al.&lt;/h3&gt;&lt;figure class=&quot;highlight qml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;5.&lt;/span&gt; ERROR &lt;span class=&quot;attribute&quot;&gt;YarnScheduler&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;70&lt;/span&gt; - Lost executor &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;simple23&lt;/span&gt;: Container marked &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;failed&lt;/span&gt;: container_1490797147995_0000004 &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;host&lt;/span&gt;: simple23. Exit &lt;span class=&quot;attribute&quot;&gt;status&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;143.&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;Diagnostics&lt;/span&gt;: Container killed &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; request. Exit code is &lt;span class=&quot;number&quot;&gt;143&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Container exited &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; a non-zero exit code &lt;span class=&quot;number&quot;&gt;143&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Killed by external &lt;span class=&quot;keyword&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[Stage &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;:===========================================&amp;gt;              (&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) / &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;6.&lt;/span&gt; ERROR &lt;span class=&quot;attribute&quot;&gt;TaskSetManager&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;70&lt;/span&gt; - Task stage &lt;span class=&quot;number&quot;&gt;17.2&lt;/span&gt; failed &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; times; aborting job&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;7.&lt;/span&gt; ERROR DistriOptimizer$:&lt;span class=&quot;number&quot;&gt;655&lt;/span&gt; - &lt;span class=&quot;attribute&quot;&gt;Error&lt;/span&gt;: &lt;span class=&quot;attribute&quot;&gt;org.apache.spark.SparkException&lt;/span&gt;: Job aborted due to stage &lt;span class=&quot;attribute&quot;&gt;failure&lt;/span&gt;: Task age &lt;span class=&quot;number&quot;&gt;17.2&lt;/span&gt; failed &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; times, most recent &lt;span class=&quot;attribute&quot;&gt;failure&lt;/span&gt;: Lost task &lt;span class=&quot;number&quot;&gt;0.3&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; stage &lt;span class=&quot;number&quot;&gt;17.2&lt;/span&gt; (TID &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;, simple21, executor &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;): &lt;span class=&quot;attribute&quot;&gt;java.util.concurrent.EnException&lt;/span&gt;: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[Stage &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;:&amp;gt;                                                         (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;) / &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;8.&lt;/span&gt; ERROR &lt;span class=&quot;attribute&quot;&gt;YarnScheduler&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;70&lt;/span&gt; - Lost executor &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;simple21&lt;/span&gt;: Container marked &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;failed&lt;/span&gt;: container_1490797147995_0004_01_000005 &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;host&lt;/span&gt;: simple21. Exit &lt;span class=&quot;attribute&quot;&gt;status&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;143.&lt;/span&gt; Diagn Container killed &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; request. Exit code is &lt;span class=&quot;number&quot;&gt;143&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Container exited &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; a non-zero exit code &lt;span class=&quot;number&quot;&gt;143&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Killed by external &lt;span class=&quot;keyword&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[Stage &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;:&amp;gt;                                                         (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;) / &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;9.&lt;/span&gt; ERROR TransportResponseHandl- Still have &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; requests outstanding when connection from /&lt;span class=&quot;attribute&quot;&gt;xx.xx.xx.22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;51442&lt;/span&gt; is closed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;【原因分析】&lt;br&gt;由报错信息可以看出，yarn丢失了executor，极有可能还是因为executor被关闭了，所以还是要检查一下自己的driver-memory和executor-memory是不是够大。&lt;br&gt;【解决方案】&lt;br&gt;如上一个&lt;/p&gt;
&lt;h3 id=&quot;运行自带例子SparkPi时，NumberException&quot;&gt;&lt;a href=&quot;#运行自带例子SparkPi时，NumberException&quot; class=&quot;headerlink&quot; title=&quot;运行自带例子SparkPi时，NumberException&quot;&gt;&lt;/a&gt;运行自带例子SparkPi时，NumberException&lt;/h3&gt;&lt;p&gt;在Spark下运行自带SparkPi例子时，按如下运行：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./bin/run-example org&lt;span class=&quot;selector-class&quot;&gt;.apache&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.Spark&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.examples&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.SparkPi&lt;/span&gt; spark:&lt;span class=&quot;comment&quot;&gt;//10.39.2.31:7077&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;出现错误：&lt;code&gt;Exception in thread &amp;quot;main&amp;quot; Java.lang.NumberFormatException: For input string: &amp;quot;spark://10.39.2.31:7077&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;【原因分析】&lt;br&gt;原因是SparkPi的参数错误，运行时第一个参数要么为核数，要么不加参数。&lt;br&gt;【解决方案】&lt;br&gt;按如下方式运行：&lt;br&gt;&lt;figure class=&quot;highlight autoit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./bin/&lt;span class=&quot;built_in&quot;&gt;run&lt;/span&gt;-example org.apache.Spark.examples.SparkPi &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; spark://&lt;span class=&quot;number&quot;&gt;10.39&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.31&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;7077&lt;/span&gt;     &lt;span class=&quot;meta&quot;&gt;# Standalone运行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./bin/&lt;span class=&quot;built_in&quot;&gt;run&lt;/span&gt;-example org.apache.Spark.examples.SparkPi &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;local&lt;/span&gt;                       &lt;span class=&quot;meta&quot;&gt;# 本地运行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;或&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./bin/run-example org&lt;span class=&quot;selector-class&quot;&gt;.apache&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.Spark&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.examples&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.SparkPi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;References&quot;&gt;&lt;a href=&quot;#References&quot; class=&quot;headerlink&quot; title=&quot;References&quot;&gt;&lt;/a&gt;References&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/a0c38dc46b89&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;搭建Spark所遇过的坑&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jeyke.iteye.com/blog/2074345?utm_source=tuicool&amp;amp;utm_medium=referral&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;YARN内存使用优化配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.cloudera.com/blog/2015/03/how-to-tune-your-apache-spark-jobs-part-2/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How-to: Tune Your Apache Spark Jobs (Part 2)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近常跑Spark程序，主要是分布式机器学习和分布式深度学习这块，因为模型经常很大，比如VGG等，集群空余节点又不是很多，跑起来有时候会吃力，也遇到很多问题，积累一下以备后查。&lt;/p&gt;
&lt;h2 id=&quot;错误集锦&quot;&gt;&lt;a href=&quot;#错误集锦&quot; class=&quot;headerl
    
    </summary>
    
      <category term="大数据系统与技术 | Big Data" scheme="http://whatbeg.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B3%BB%E7%BB%9F%E4%B8%8E%E6%8A%80%E6%9C%AF-Big-Data/"/>
    
    
      <category term="Spark" scheme="http://whatbeg.com/tags/Spark/"/>
    
      <category term="大数据" scheme="http://whatbeg.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>在服务器集群上搭建BigDL环境</title>
    <link href="http://whatbeg.com/2017/04/17/bigdlclusterbuild.html"/>
    <id>http://whatbeg.com/2017/04/17/bigdlclusterbuild.html</id>
    <published>2017-04-17T14:42:38.000Z</published>
    <updated>2017-04-17T14:50:07.562Z</updated>
    
    <content type="html">&lt;p&gt;本文简要记述一下搭建BigDL运行环境的过程和一些需要注意的地方。&lt;br&gt;BigDL是Intel推出的一个基于Spark的深度学习框架，目前发布到0.1.0版本。&lt;br&gt;&lt;a href=&quot;https://github.com/intel-analytics/BigDL&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github BigDL&lt;/a&gt;&lt;br&gt;BigDL提供了丰富的深度学习的支持，并且在Intel CPU（Xeon）上的性能表现优异，在单节点Xeon CPU上的性能能够媲美CPU，这也一定程度上归因于Intel针对BigDL的底层运算做了很多优化工作，我们都知道，一个GPU的价钱可以购买一台多Xeon CPU的服务器了，而且GPU服务器的用途相对单一，而买一台CPU服务器还能够干很多别的事情，其实对于很多中小公司来说，对GPU的需求并不是那么旺盛，所以在CPU上实现高性能的深度学习应用也显得非常重要。并且BigDL是基于Spark的，用户完全可以将其跑在已有的Spark集群上，部署成本很低。&lt;br&gt;更详细的介绍可以参考Github主页。&lt;/p&gt;
&lt;h2 id=&quot;dependencies-安装&quot;&gt;&lt;a href=&quot;#dependencies-安装&quot; class=&quot;headerlink&quot; title=&quot;dependencies 安装&quot;&gt;&lt;/a&gt;dependencies 安装&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Java 1.8.0_121&lt;/li&gt;
&lt;li&gt;Hadoop 2.7.2&lt;/li&gt;
&lt;li&gt;Spark 2.1.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://registrationcenter.intel.com/en/forms/?productid=2558&amp;amp;licensetype=2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;底层运算库MKL 2017.2.174&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;apache-maven 3.3.9&lt;/li&gt;
&lt;li&gt;Scala 2.10.4&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;配置步骤&quot;&gt;&lt;a href=&quot;#配置步骤&quot; class=&quot;headerlink&quot; title=&quot;配置步骤&quot;&gt;&lt;/a&gt;配置步骤&lt;/h2&gt;&lt;h3 id=&quot;MAVEN调用本地库&quot;&gt;&lt;a href=&quot;#MAVEN调用本地库&quot; class=&quot;headerlink&quot; title=&quot;MAVEN调用本地库&quot;&gt;&lt;/a&gt;MAVEN调用本地库&lt;/h3&gt;&lt;p&gt;考虑到服务器一般不能联网的原因，MAVEN无法到远程库获取依赖包，可以将已经下好的包传到Server，然后设置调用本地依赖包。过程如下，将自己Desktop最新的maven库文件（一般位于~/.m2）打包上传到Server，最好也命名为~/.m2，然后编辑&lt;code&gt;$MAVEN_HOME/conf/settings.xml&lt;/code&gt;, 在注释掉的localRepository那里加上下面一行：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;localRepository&lt;/span&gt;&amp;gt;&lt;/span&gt;~/.m2/repository&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;localRepository&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;即可。&lt;/p&gt;
&lt;h3 id=&quot;配置Hadoop&quot;&gt;&lt;a href=&quot;#配置Hadoop&quot; class=&quot;headerlink&quot; title=&quot;配置Hadoop&quot;&gt;&lt;/a&gt;配置Hadoop&lt;/h3&gt;&lt;p&gt;如果已经配置过hadoop或者以前用过hadoop了，也可以不重新设置。&lt;br&gt;如果没有的话，那么按如下方法设置即可。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;编辑core-site.xml，可进行如下配置&lt;/p&gt;
&lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;fs.defaultFS&lt;span class=&quot;params&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;hdfs:&lt;span class=&quot;comment&quot;&gt;//xx.xx.xx.xx:9100&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;hadoop.tmp.dir&lt;span class=&quot;params&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;file:&lt;span class=&quot;meta-keyword&quot;&gt;/path/&lt;/span&gt;to&lt;span class=&quot;meta-keyword&quot;&gt;/hadoop/&lt;/span&gt;hadoop&lt;span class=&quot;number&quot;&gt;-2.7&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;/tmp&lt;span class=&quot;params&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;io.file.buffer.size&lt;span class=&quot;params&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;131072&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;hadoop.native.lib&amp;gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;true&lt;span class=&quot;params&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Should native hadoop libraries,if present,be used&lt;span class=&quot;params&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编辑hdfs-site.xml&lt;/p&gt;
&lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;dfs.namenode.name.dir&lt;span class=&quot;params&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;file:hadooppath/hadoop&lt;span class=&quot;number&quot;&gt;-2.7&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;meta-keyword&quot;&gt;/hdfs/&lt;/span&gt;name&lt;span class=&quot;params&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;dfs.datanode.data.dir&lt;span class=&quot;params&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;file:hadooppath/hadoop&lt;span class=&quot;number&quot;&gt;-2.7&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;meta-keyword&quot;&gt;/hdfs/&lt;/span&gt;data&lt;span class=&quot;params&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;dfs.replication&lt;span class=&quot;params&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;dfs.namenode.secondary.http-address&lt;span class=&quot;params&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;masterIP:&lt;span class=&quot;number&quot;&gt;9001&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;dfs.namenode.servicerpc-address&lt;span class=&quot;params&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;masterIP:&lt;span class=&quot;number&quot;&gt;10001&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;dfs.webhdfs.enabled&lt;span class=&quot;params&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;true&lt;span class=&quot;params&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;params&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;dfs.datanode.address&lt;span class=&quot;params&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;params&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;50011&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;params&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       默认为&lt;span class=&quot;number&quot;&gt;50010&lt;/span&gt;, 是datanode的监听端口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;params&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;params&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;dfs.datanode.http.address&lt;span class=&quot;params&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;params&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;50076&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;params&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         默认为&lt;span class=&quot;number&quot;&gt;50075&lt;/span&gt;，为datanode的http server端口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;params&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;params&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;params&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;dfs.datanode.ipc.address&lt;span class=&quot;params&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;params&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;50021&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;params&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        默认为&lt;span class=&quot;number&quot;&gt;50020&lt;/span&gt;, 为datanode的ipc server端口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;params&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;params&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编辑mapred-site.xml&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;mapred.job.tracker&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;master:9101&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        job tracker运行的位置和端口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;mapred.task.tracker.http.address&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;0.0.0.0:50061&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       默认为50061, 是task tracker的http server端口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;description&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;mapreduce.framework.name&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;mapreduce.jobhistory.address&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;masterIP:10020&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;mapreduce.jobhistory.webapp.address&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;masterIP:19888&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编辑yarn-site.xml&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.nodemanager.aux-services&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;mapreduce_shuffle&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.nodemanager.auxservices.mapreduce.shuffle.class&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;org.apache.hadoop.mapred.ShuffleHandler&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.resourcemanager.address&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;masterIP:8032&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.resourcemanager.scheduler.address&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;masterIP:8030&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.resourcemanager.resource-tracker.address&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;masterIP:8031&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.resourcemanager.admin.address&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;masterIP:8033&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.resourcemanager.webapp.address&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;masterIP:8088&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.nodemanager.resource.memory-mb&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;22528&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.scheduler.minimum-allocation-mb&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;1500&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.nodemanager.pmem-check-enabled&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;false&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.scheduler.maximum-allocation-mb&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;16384&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;discription&lt;/span&gt;&amp;gt;&lt;/span&gt;单个任务可申请最大内存，默认8192MB&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;discription&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.nodemanager.vmem-check-enabled&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;false&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编辑&lt;code&gt;$HADOOP_HOME/etc/hadoop/slaves&lt;/code&gt;，依次添加slaves的IP&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;配置Spark&quot;&gt;&lt;a href=&quot;#配置Spark&quot; class=&quot;headerlink&quot; title=&quot;配置Spark&quot;&gt;&lt;/a&gt;配置Spark&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;编辑 &lt;code&gt;$SPARK_HOME/conf/slaves&lt;/code&gt;，依次添加slaves的IP&lt;/li&gt;
&lt;li&gt;编辑 &lt;code&gt;$SPARK_HOME/conf/spark-env.sh&lt;/code&gt;, 在尾部添加&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;export SPARK_DIST_CLASSPATH=$($HADOOP_HOME/bin/hadoop classpath)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;分发环境&quot;&gt;&lt;a href=&quot;#分发环境&quot; class=&quot;headerlink&quot; title=&quot;分发环境&quot;&gt;&lt;/a&gt;分发环境&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;将上述安装过程在Slaves上都安装一遍，由于手动安装过程繁琐，没有技术含量，可以使用脚本安装。如果有需要可以提供笔者的脚本供参考。其中hadoop和Spark目录可以直接拷贝过去，就无需重新配置了。尽量保持Master和Slaves环境变量的一致，能够更快地部署。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;启动集群&quot;&gt;&lt;a href=&quot;#启动集群&quot; class=&quot;headerlink&quot; title=&quot;启动集群&quot;&gt;&lt;/a&gt;启动集群&lt;/h3&gt;&lt;p&gt;格式化namenode，然后启动所有datanode, namenode, resourcemanager, nodemanager等，即可运行BigDL程序了。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;hadoop namenode –format&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$SPARK_HOME/sbin/start-all.sh, $HADOOP_HOME/sbin/start-all.sh&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;编译打包BigDL的jar包&quot;&gt;&lt;a href=&quot;#编译打包BigDL的jar包&quot; class=&quot;headerlink&quot; title=&quot;编译打包BigDL的jar包&quot;&gt;&lt;/a&gt;编译打包BigDL的jar包&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;bash make-dist.sh -P spark_2.0&lt;/code&gt;，具体可参看&lt;a href=&quot;https://github.com/intel-analytics/BigDL/wiki/Build-Page&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Build Page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chmod +x dist/bin/bigdl.sh&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;示例程序&quot;&gt;&lt;a href=&quot;#示例程序&quot; class=&quot;headerlink&quot; title=&quot;示例程序&quot;&gt;&lt;/a&gt;示例程序&lt;/h3&gt;&lt;p&gt;在BigDL-0.1.0上，基于CIFAR-10数据集运行RESNET20的示例运行命令如下：&lt;br&gt;&lt;figure class=&quot;highlight brainfuck&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;dist/bin/bigdl&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;spark&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;submit&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;master&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;yarn&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;memory&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;6g&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;executor&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;memory&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;6g&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;executors&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;executor&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;cores&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;intel&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;analytics&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;bigdl&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;resnet&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;Train&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;dist/lib/bigdl&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;jar&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;dependencies&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;jar&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;cifar&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;10/&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;batchSize&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;480&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;optnet&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;depth&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;classes&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;shortcutType&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;nEpochs&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;156&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;learningRate&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;cache&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;model&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后等待训练完成即可。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://ook6epb86.bkt.clouddn.com/bigdl_install.sh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文简要记述一下搭建BigDL运行环境的过程和一些需要注意的地方。&lt;br&gt;BigDL是Intel推出的一个基于Spark的深度学习框架，目前发布到0.1.0版本。&lt;br&gt;&lt;a href=&quot;https://github.com/intel-analytics/BigDL&quot; t
    
    </summary>
    
      <category term="大数据系统与技术 | Big Data" scheme="http://whatbeg.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B3%BB%E7%BB%9F%E4%B8%8E%E6%8A%80%E6%9C%AF-Big-Data/"/>
    
    
      <category term="Deep Learning" scheme="http://whatbeg.com/tags/Deep-Learning/"/>
    
      <category term="深度学习" scheme="http://whatbeg.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="大数据" scheme="http://whatbeg.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>SVM推导过程中的三个疑问</title>
    <link href="http://whatbeg.com/2017/04/13/svmlearning.html"/>
    <id>http://whatbeg.com/2017/04/13/svmlearning.html</id>
    <published>2017-04-13T13:10:06.000Z</published>
    <updated>2017-04-14T11:48:40.996Z</updated>
    
    <content type="html">&lt;p&gt;在形式化推导硬间隔（不允许分错）SVM分类器的时候，会做一些简化和转换，初看时并不那么好懂。最近又接触到SVM，所以从头到尾又学习了一遍。写下关于几个以前不太懂的疑问以及疑问的回答。&lt;/p&gt;
&lt;h2 id=&quot;为何令间隔为1？&quot;&gt;&lt;a href=&quot;#为何令间隔为1？&quot; class=&quot;headerlink&quot; title=&quot;为何令间隔为1？&quot;&gt;&lt;/a&gt;为何令间隔为1？&lt;/h2&gt;&lt;p&gt;在SVM中是以最大化分类间隔为目标的，间隔又分函数间隔和几何间隔。&lt;br&gt;函数间隔为： $\hat\gamma=y_if(x_i)=y_i(w^Tx_i+b)$&lt;br&gt;几何间隔为： $\gamma=\frac {y_if(x_i)} {||w||}$&lt;br&gt;函数间隔可以表征样本被分到某一类的置信度，比如说$y_i=+1$时，如果$w^Tx_i+b &amp;gt; 0$且很大，说明离分类边界越远，越有理由相信$x_i$真的是正类。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;成倍的增长$w,b$，分类超平面不变，几何间隔也不改变&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而我们优化通常是优化几何间隔，因为几何间隔在$w,b$成倍增长时，是不变的。&lt;br&gt;即优化问题转化为：$$max_{w,b} \frac {\hat\gamma} {||w||} \&lt;br&gt;s.t. y_i(w^Tx_i+b) = \hat\gamma_i \ge \hat\gamma$$&lt;/p&gt;
&lt;p&gt;设$\hat\gamma$为最小函数间隔,约束条件是任意给一个点，其函数间隔一定大于等于$\hat\gamma$，即最小函数间隔。&lt;br&gt;做一个变量替换$w’=w/{\hat\gamma}, b’=b/{\hat\gamma}$，代入原来的优化问题可得新的优化问题：&lt;br&gt;$$max_{w’,b’} \frac {1} {||w’||} \&lt;br&gt;s.t. y_i({w’}^Tx_i+b’) \ge 1$$&lt;br&gt;此时关于$w,b$的原问题等价成了新的$w’,b’$的新问题。能够这样转化的原因在于函数间隔的取值并不影响最优化问题的解。&lt;/p&gt;
&lt;h2 id=&quot;什么是拉格朗日对偶？&quot;&gt;&lt;a href=&quot;#什么是拉格朗日对偶？&quot; class=&quot;headerlink&quot; title=&quot;什么是拉格朗日对偶？&quot;&gt;&lt;/a&gt;什么是拉格朗日对偶？&lt;/h2&gt;&lt;p&gt;上述优化问题可以写为：&lt;br&gt;$$min \frac {1} {2}||w||^2 \&lt;br&gt;s.t. y_i({w’}^Tx_i+b’) \ge 1,i=1,2,..,m$$&lt;/p&gt;
&lt;p&gt;目标函数是二次的，约束是是线性的，这是一个凸二次规划问题，可以用QP求解。但是还可以通过拉格朗日对偶来解。&lt;br&gt;拉格朗日对偶解法即求解与原问题等价的对偶问题得到原问题的最优解。&lt;br&gt;采用拉格朗日乘子法，写出拉格朗日乘子式：&lt;br&gt;$$\mathcal{L}(w,b,\alpha)=\frac {1} {2}||w||^2 - \sum_{i=1}^n \alpha_i(y_i(w^Tx_i+b)-1)$$&lt;br&gt;令$$\theta(w)=max_{\alpha_i \ge 0}\mathcal{L}(w,b,\alpha)$$&lt;br&gt;可以看出，当$(y_i(w^Tx_i+b)-1)&amp;lt;0$时，即条件不满足时，由于$\alpha_i \ge 0$，所以后面一半（包括负号）是正的，当$\alpha_i$取得很大的时候，$\theta(w)$甚至可以取到无穷大；当条件满足时，后面一项是负的，所以$\theta(w)=max_{\alpha_i \ge 0}\mathcal{L}(w,b,\alpha)$最大就是$\frac {1} {2}||w||^2$。&lt;br&gt;所以做$\theta(w)$的目的就出来了，即&lt;br&gt;$\theta(w)=f(w) $ if w满足条件&lt;br&gt;$\theta(w)=\infty $ 否则&lt;br&gt;所以原问题$$min \frac {1} {2}||w||^2 \&lt;br&gt;s.t. y_i({w’}^Tx_i+b’) \ge 1,i=1,2,..,m$$&lt;br&gt;就可以通过拉格朗日乘子法换成无约束的等价的另一种表示&lt;br&gt;$$min_{w,b}\theta(w)=min_{w,b} max_{\alpha_i \ge 0}\mathcal{L}(w,b,\alpha)$$&lt;br&gt;设$p^\ast$为上述问题的最优解。&lt;br&gt;上述问题直接求解很难，所以交换一下min，max的顺序将其变成对偶问题&lt;br&gt;$$max_{\alpha_i \ge 0} min_{w,b} \mathcal{L}(w,b,\alpha)$$&lt;br&gt;最优解用$d^\ast$来表示。&lt;br&gt;转换为对偶问题后相对容易求解，要注意此时$d^\ast$并不一定等于$p^\ast$，(且&lt;br&gt;其实$d^\ast \le p^\ast$，直观的说就是“胖子里面最瘦的通常比瘦子里面最胖的要胖”，这也是有证明的)。即原问题的解并不一定等于对偶问题的解，如果等于，我们称之为强对偶(strong duality)，在满足一定条件的情况下，是可以达到强对偶的。&lt;br&gt;Slater条件： 存在严格满足约束条件的点。&lt;br&gt;如果原始问题是Convex的并且满足Slater条件的话，我们说它是强对偶的。Slater条件只是使强对偶成立的一种情况，事实上，非凸优化也可以是强对偶的。&lt;br&gt;通过强对偶成立时的一些性质，我们可以推出一些条件，比如&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/SVM5.png&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

&lt;h2 id=&quot;什么是KKT条件？&quot;&gt;&lt;a href=&quot;#什么是KKT条件？&quot; class=&quot;headerlink&quot; title=&quot;什么是KKT条件？&quot;&gt;&lt;/a&gt;什么是KKT条件？&lt;/h2&gt;&lt;p&gt;上述这些就是所谓的KKT条件。&lt;br&gt;任何强对偶问题都满足KKT条件。&lt;br&gt;当原始问题可微且是凸优化问题时，KKT条件升级成充分必要条件。&lt;br&gt;前两条说明达到最优解时，拉格朗日函数对w,b求偏导为0&lt;br&gt;第三条称为complementary slackness（互补松弛），即我们的&lt;br&gt;$$\alpha_i(y_i(w^Tx_i+b)-1)=0$$&lt;br&gt;那么为什么呢？做下列推导，假设$x^\ast,\alpha^\ast$分别为原问题和对偶问题的极值点：&lt;/p&gt;
&lt;p&gt;$$f_0(x^\ast)=min_{w,b} \mathcal{L}(w,b,\alpha) \&lt;br&gt;=min_x (f_0(x) - \sum_{i=1}^n \alpha_i(y_i(w^Tx_i+b)-1)) \&lt;br&gt;\le f_0(x^\ast)-\sum_{i=1}^n \alpha_i^\ast(y_i(w^Tx^\ast_i+b)-1) \&lt;br&gt;\le f_0(x^\ast)$$&lt;/p&gt;
&lt;p&gt;由于等式两遍相等，所以可以换成等号，由于第三行，且$\sum_{i=1}^n \alpha_i^\ast(y_i(w^Tx^\ast_i+b)-1)$非负，所以推出$ \alpha_i^\ast(y_i(w^Tx^\ast_i+b)-1)=0, i=1,2,…,m$&lt;br&gt;即当$\alpha_i&amp;gt;0$时，$x_i$正在分类间隔上，称为支持向量，而不在分类间隔上的样本有$\alpha_i=0$&lt;br&gt;后两条为原来的约束条件。图中的$g_i(w^\ast)$即我们的$(1-y_i({w^\ast}^Tx_i+b^\ast))$。&lt;/p&gt;
&lt;p&gt;满足了KKT条件，就可以认为对偶问题的最优解就是原问题的最优解，这样我们就可以通过求解对偶问题来求解原来的优化问题。&lt;br&gt;By the way，SVM的对偶问题为：&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/SVM6.png&quot; alt=&quot;来自July&quot;&gt; &lt;/center&gt;

&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;所以总结一下，令几何间隔为1是为了保证优化问题等价的情况下，尽可能地简化问题。使用拉格朗日对偶是因为原问题不好解，所以转化成对偶问题，而当问题满足KKT条件的时候，这个对偶问题的解就是原问题的解，从而更好地得到最优解。&lt;br&gt;简单梳理了一下这三个问题，知识浅薄，如果有不对的希读者不吝指出。&lt;/p&gt;
&lt;h2 id=&quot;References&quot;&gt;&lt;a href=&quot;#References&quot; class=&quot;headerlink&quot; title=&quot;References&quot;&gt;&lt;/a&gt;References&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www2.isye.gatech.edu/~nemirovs/Lect_ModConvOpt.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Lectures on Modern Convex Optimization &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://cs229.stanford.edu/notes/cs229-notes3.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Andrew Ng. CS229. Note3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/90zeng/p/Lagrange_duality.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;简易解说拉格朗日对偶（Lagrange duality）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/liqizhou/archive/2012/05/11/2495689.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SVM(二）拉格朗日对偶问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.pluskid.org/?p=702&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;支持向量机：Duality&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/v_july_v/article/details/7624837&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;支持向量机通俗导论（理解SVM的三层境界）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;《机器学习》&lt;/li&gt;
&lt;li&gt;《统计学习方法》&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在形式化推导硬间隔（不允许分错）SVM分类器的时候，会做一些简化和转换，初看时并不那么好懂。最近又接触到SVM，所以从头到尾又学习了一遍。写下关于几个以前不太懂的疑问以及疑问的回答。&lt;/p&gt;
&lt;h2 id=&quot;为何令间隔为1？&quot;&gt;&lt;a href=&quot;#为何令间隔为1？&quot; cla
    
    </summary>
    
      <category term="机器学习 | Mac.Learning" scheme="http://whatbeg.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-Mac-Learning/"/>
    
    
      <category term="机器学习" scheme="http://whatbeg.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Hexo新的一些优化</title>
    <link href="http://whatbeg.com/2017/04/13/hexosomeopt.html"/>
    <id>http://whatbeg.com/2017/04/13/hexosomeopt.html</id>
    <published>2017-04-13T08:10:39.000Z</published>
    <updated>2017-06-16T01:45:51.416Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Hexo-Mathjax下划线-的渲染问题&quot;&gt;&lt;a href=&quot;#Hexo-Mathjax下划线-的渲染问题&quot; class=&quot;headerlink&quot; title=&quot;Hexo Mathjax下划线_的渲染问题&quot;&gt;&lt;/a&gt;Hexo Mathjax下划线&lt;code&gt;_&lt;/code&gt;的渲染问题&lt;/h2&gt;&lt;p&gt;以前Hexo渲染数学公式的时候有时候下划线会渲染成&lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;，导致渲染不出公式的情况。&lt;br&gt;比如下面这种情况：&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hexosomeopt1.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;但是在其他markdown中又能够正确显示，这时候其实是Hexo的锅，它渲染的时候把&lt;code&gt;_&lt;/code&gt;渲染成&lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;    ，可以修改渲染规则来使之渲染正常。&lt;br&gt;打开：&lt;code&gt;hexo\node_modules\marked\lib\marked.js&lt;/code&gt;&lt;br&gt;找到：&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hexosomeopt3.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/hexosomeopt2.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;删去选中的部分，即删除对&lt;code&gt;_&lt;/code&gt;的渲染转换，重新生成即可。&lt;br&gt;当然还有其它方式，不过这种比较简便有效。&lt;/p&gt;
&lt;h2 id=&quot;References&quot;&gt;&lt;a href=&quot;#References&quot; class=&quot;headerlink&quot; title=&quot;References&quot;&gt;&lt;/a&gt;References&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://kubicode.me/2016/03/16/Hexo/Fix-Hexo-Bug-In-Mathjax/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;修复Hexo写Mathjax公式多个下标失效的问题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2wildkids.com/2016/10/06/%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86Hexo%E5%92%8CMathJax%E7%9A%84%E5%85%BC%E5%AE%B9%E9%97%AE%E9%A2%98/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何处理Hexo和MathJax的兼容问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Hexo-Mathjax下划线-的渲染问题&quot;&gt;&lt;a href=&quot;#Hexo-Mathjax下划线-的渲染问题&quot; class=&quot;headerlink&quot; title=&quot;Hexo Mathjax下划线_的渲染问题&quot;&gt;&lt;/a&gt;Hexo Mathjax下划线&lt;code&gt;_&lt;
    
    </summary>
    
      <category term="错误解决与优化 | Err_n_Opt" scheme="http://whatbeg.com/categories/%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E4%B8%8E%E4%BC%98%E5%8C%96-Err-n-Opt/"/>
    
    
      <category term="Hexo" scheme="http://whatbeg.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 使用中的问题集锦</title>
    <link href="http://whatbeg.com/2017/04/01/ubuntuproblems.html"/>
    <id>http://whatbeg.com/2017/04/01/ubuntuproblems.html</id>
    <published>2017-04-01T12:38:53.000Z</published>
    <updated>2017-06-23T03:55:17.163Z</updated>
    
    <content type="html">&lt;p&gt;新开一贴，记录一下Ubuntu使用中的一些问题。&lt;/p&gt;
&lt;h5 id=&quot;Ubuntu-搜狗输入法问题&quot;&gt;&lt;a href=&quot;#Ubuntu-搜狗输入法问题&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu 搜狗输入法问题&quot;&gt;&lt;/a&gt;Ubuntu 搜狗输入法问题&lt;/h5&gt;&lt;p&gt;搜狗输入法突然不能用，打字的时候界面也没了，就剩个框框，打着打着就没了。&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/error_sogoupinyin.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;重装了fcitx和sogoupinyin也不行，最后在&lt;a href=&quot;http://forum.ubuntu.org.cn/viewtopic.php?f=8&amp;amp;t=483206&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ubuntu Forum&lt;/a&gt;找到了解决方案。&lt;br&gt;据说是自动升级什么造成的，deepin里提示说&lt;br&gt;&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mv  ~/.&lt;span class=&quot;built_in&quot;&gt;config&lt;/span&gt;/SogouPY*  /tmp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;发现了一个好地方，Ubuntu出问题可以多去&lt;a href=&quot;http://forum.ubuntu.org.cn/index.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ubuntu 论坛&lt;/a&gt;看看。&lt;/p&gt;
&lt;h5 id=&quot;shell中source命令不存在的问题&quot;&gt;&lt;a href=&quot;#shell中source命令不存在的问题&quot; class=&quot;headerlink&quot; title=&quot;shell中source命令不存在的问题&quot;&gt;&lt;/a&gt;shell中source命令不存在的问题&lt;/h5&gt;&lt;p&gt;shell脚本中使用source命令可能会报&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;source &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; found&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;错误，这是因为几种shell的不同导致，许多版本使用&lt;code&gt;/bin/bash&lt;/code&gt;做&lt;code&gt;sh&lt;/code&gt;，但是Ubuntu和另一些系统、版本中已逐渐使用&lt;code&gt;/bin/dash&lt;/code&gt;，后者不支持&lt;code&gt;source&lt;/code&gt;。&lt;br&gt;解决方法：&lt;br&gt;（1）使用 &lt;code&gt;.&lt;/code&gt; 替换 &lt;code&gt;source&lt;/code&gt; 命令&lt;br&gt;（2）使用如下命令变更shell，从&lt;code&gt;dash&lt;/code&gt;变更到&lt;code&gt;bash&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ls&lt;/span&gt; -&lt;span class=&quot;keyword&quot;&gt;l&lt;/span&gt; `&lt;span class=&quot;keyword&quot;&gt;which&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/bin/&lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt; -&amp;gt; &lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$sudo&lt;/span&gt; dpkg-reconfigure dash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 选择[&lt;span class=&quot;keyword&quot;&gt;no&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ls&lt;/span&gt; -&lt;span class=&quot;keyword&quot;&gt;l&lt;/span&gt; `&lt;span class=&quot;keyword&quot;&gt;which&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt;`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/bin/&lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt; -&amp;gt; bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;新开一贴，记录一下Ubuntu使用中的一些问题。&lt;/p&gt;
&lt;h5 id=&quot;Ubuntu-搜狗输入法问题&quot;&gt;&lt;a href=&quot;#Ubuntu-搜狗输入法问题&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu 搜狗输入法问题&quot;&gt;&lt;/a&gt;Ubuntu 搜狗输入法
    
    </summary>
    
      <category term="错误解决与优化 | Err_n_Opt" scheme="http://whatbeg.com/categories/%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E4%B8%8E%E4%BC%98%E5%8C%96-Err-n-Opt/"/>
    
    
      <category term="Linux" scheme="http://whatbeg.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>合并多个Commits，请注意！</title>
    <link href="http://whatbeg.com/2017/04/01/combinecommits.html"/>
    <id>http://whatbeg.com/2017/04/01/combinecommits.html</id>
    <published>2017-04-01T11:47:16.000Z</published>
    <updated>2017-04-01T11:48:28.282Z</updated>
    
    <content type="html">&lt;h2 id=&quot;合并多个Commits&quot;&gt;&lt;a href=&quot;#合并多个Commits&quot; class=&quot;headerlink&quot; title=&quot;合并多个Commits&quot;&gt;&lt;/a&gt;合并多个Commits&lt;/h2&gt;&lt;p&gt;我们提交Pull Request的时候有时候并不是一个Commit就完成的，往往会做一些修改，然后再提交Commit，通常会走多轮，到最后就可能会有多个Commit，这时候往往需要合并这些Commits为一个，然后Manager帮你Merge。&lt;br&gt;这时候我们就需要使用git rebase了。&lt;br&gt;这里我并不打算详解rebase，这是Git book做的事，这里只是记录一下自己做的一个过程。&lt;/p&gt;
&lt;p&gt;关于rebase可以参看这几篇文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://git-scm.com/book/zh/v2/Git-%E5%88%86%E6%94%AF-%E5%8F%98%E5%9F%BA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;3.6 Git 分支 - 变基&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zerodie.github.io/blog/2012/01/19/git-rebase-i/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何合併多個commits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/964de879904a&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;「Git」合并多个 Commit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;首先&lt;code&gt;git log&lt;/code&gt;查看需要合并的Commits，比如如下形式：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;commit&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;ade56efc466c093d7e8e25c520293cesedc96cc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Author: xxx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;:   Wed Mar &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt; +&lt;span class=&quot;number&quot;&gt;0800&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;Commit&lt;/span&gt; Message &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;commit&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;546&lt;/span&gt;ffc32692d3f935feb9b04d6ecb66feda9560b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Author: xxx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;:   Mon Feb &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt; +&lt;span class=&quot;number&quot;&gt;0800&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;Commit&lt;/span&gt; Message &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;commit&lt;/span&gt; f48b8644013c23f132c3fe72f8cc38ea288e6f3d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Author: xxx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;:   Thu Feb &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;52&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;39&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt; +&lt;span class=&quot;number&quot;&gt;0800&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;Commit&lt;/span&gt; Message &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;commit&lt;/span&gt; fe72f8cc38ea288e6c3fe72f8cc38ea288e6f3de&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Author: xxx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;:   Thu Feb &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;39&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2017&lt;/span&gt; +&lt;span class=&quot;number&quot;&gt;0800&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;Commit&lt;/span&gt; Message &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;比如说我们需要合并Commit 2-4这三个提交，我们运行&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git rebase -i &amp;lt;SHA&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; Commit &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;gt;  &lt;span class=&quot;comment&quot;&gt;# -i后面的参数为最后一个不需要合并的Commit，这里为Commit 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后出现交互框，出现三个pick&lt;br&gt;&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pick ... Commit &lt;span class=&quot;keyword&quot;&gt;Message&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pick ... Commit &lt;span class=&quot;keyword&quot;&gt;Message&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pick ... Commit &lt;span class=&quot;keyword&quot;&gt;Message&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们将后两个pick改成squash，即：&lt;br&gt;&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pick ... Commit &lt;span class=&quot;keyword&quot;&gt;Message&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;squash ... Commit &lt;span class=&quot;keyword&quot;&gt;Message&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;squash ... Commit &lt;span class=&quot;keyword&quot;&gt;Message&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里两个操作的区别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pick的意思是要会选择合并到这个commit&lt;/li&gt;
&lt;li&gt;squash(挤压)的意思是这个commit会被合并到前一个commit&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后输入新的Commit Message，保存，即合并成功，最后看只剩一个Commit了。&lt;br&gt;最后Push到remote，这时会提示版本不合，因为本地这个进行了合并后，已经比remote老了，这时只需强推即可：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git push -f &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;upstream&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;localbranch&lt;/span&gt;&amp;gt;&lt;/span&gt;:&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;remotebranch&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后，多个提交就变成了一个提交，可以被merge了。&lt;/p&gt;
&lt;h2 id=&quot;后悔药&quot;&gt;&lt;a href=&quot;#后悔药&quot; class=&quot;headerlink&quot; title=&quot;后悔药&quot;&gt;&lt;/a&gt;后悔药&lt;/h2&gt;&lt;p&gt;注意，如果出现了什么不想看到的结果或者操作错误，可以使用&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git rebase &lt;span class=&quot;comment&quot;&gt;--abort&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;进行挽救，即可恢复到rebase之前的状态。&lt;/p&gt;
&lt;h2 id=&quot;简易方法&quot;&gt;&lt;a href=&quot;#简易方法&quot; class=&quot;headerlink&quot; title=&quot;简易方法&quot;&gt;&lt;/a&gt;简易方法&lt;/h2&gt;&lt;p&gt;如果只需合并两个Commit，且又是最近的两个Commit，其实可以更简单地使用：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;reset&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--soft HEAD^1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;commit&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--amend&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;来解决。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;合并多个Commits&quot;&gt;&lt;a href=&quot;#合并多个Commits&quot; class=&quot;headerlink&quot; title=&quot;合并多个Commits&quot;&gt;&lt;/a&gt;合并多个Commits&lt;/h2&gt;&lt;p&gt;我们提交Pull Request的时候有时候并不是一个Commit就
    
    </summary>
    
      <category term="计算机相关 | CS.Related" scheme="http://whatbeg.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3-CS-Related/"/>
    
    
      <category term="Git" scheme="http://whatbeg.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Deep Learning读书笔记（1）【开篇】</title>
    <link href="http://whatbeg.com/2017/03/29/deeplearningbook-01.html"/>
    <id>http://whatbeg.com/2017/03/29/deeplearningbook-01.html</id>
    <published>2017-03-29T14:39:32.000Z</published>
    <updated>2017-03-30T12:01:25.924Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;“深度学习”的概念萌芽于2006年，2010年以后逐渐兴起，到2015,2016年达到顶峰，尤其是2016年，感觉各种IT网站，业界公号，微博等等都充斥着”深度学习”这个词语，论文数量急剧增加，盛况空前。到现在，2017年上半年，火热之势不减，诸多meetup，讨论会，交流会，分享会此起彼伏，人头攒动，业界大牛则在展望未来，规划前程或是默默做着前沿探索。&lt;br&gt;初次接触深度学习是在去年做一个NLP比赛的时候，尝试了深度学习的方法，效果确实不错，未加集成，融合的单模型就能表现出很好的效果，于是入坑，，直至遇到Bengio,Goodfellow,Courville合著的这本《Deep Learning》，想把它啃下来，陆陆续续看了一些，前几章还好，越到后面会难一些，借着这个机会，分享下自己的阅读心得，也督促自己继续把它啃完。&lt;/p&gt;
&lt;h2 id=&quot;智能机器&quot;&gt;&lt;a href=&quot;#智能机器&quot; class=&quot;headerlink&quot; title=&quot;智能机器&quot;&gt;&lt;/a&gt;智能机器&lt;/h2&gt;&lt;p&gt;人类一直以来都有一个梦想，就是制造出能够思考的机器。可是一直到近代，计算机的发明，才使得这一梦想有了巨大的推进。再到今天，人工智能(Artificial Intelligence)，起源于1956年夏季”达特茅斯会议”的这门学科，经过1997年IBM DeepBlue战胜国际象棋大师卡斯帕罗夫，再到2016年3月AlphaGo战胜李世石，到最近的Master，已经成为了最蓬勃发展的一个领域之一，此时，我们重新问自己这个问题: “人类能否制造出有智能的机器？”。诚然，”智能”的定义又有许多种，有人说，通过图灵测试的机器就具有智能，有人说，有自我意识，会思考的机器才算具有智能，总的来说没有一致公认的定义。于是观点逐渐分为两派，一个是强AI观点，一个是弱AI观点，强AI观点认为人类有可能制造出能推理和解决问题，并具有自我意识和直觉的机器，弱AI观点则认为不能。&lt;/p&gt;
&lt;p&gt;但是，纠结于智能的标准，以及能不能使机器达到智能对我们并无太大助益，我们现在所希望的是制造出更加”聪明”一点的机器，帮我们做很多事情。这是好的，但是”人工智能威胁论”也随之应运而生，客观来说，人工智能真正能够对人类产生威胁还有很长的路要走，但是不得不承认，很多机械性的工作，机器拿手的问题很可能会逐渐被机器人取代，从而会加高工作的知识壁垒，也会使一些工人失业，这是大势，阻挡不了。&lt;/p&gt;
&lt;h2 id=&quot;深度学习&quot;&gt;&lt;a href=&quot;#深度学习&quot; class=&quot;headerlink&quot; title=&quot;深度学习&quot;&gt;&lt;/a&gt;深度学习&lt;/h2&gt;&lt;p&gt;那么哪些问题是机器拿手的，哪些问题又是人类拿手的呢？&lt;/p&gt;
&lt;p&gt;我们知道，早期计算机在处理问题时，需要人类把问题，规则，策略描述给它，硬编码到系统中，然后交给计算机去做，但是人们逐渐遇到了依赖硬编码的系统带来的许多困难与问题，也让人们意识到，必须要让AI系统具有获得他们自己知识的能力。计算机在复杂计算，规则明确的策略搜索(如棋类)，大规模存储记忆等方面的处理能力远超人类，这些问题对于机器来说，无非是执行规则而已，但是人的直觉是很难被机器学到的，包括物体识别，观察判断和听说读写等等，这些问题很难形式化地描述给计算机，但是这些问题我们仍想去解决，仍然需要被解决。&lt;/p&gt;
&lt;p&gt;本书就集中描述一种解决方案，它让计算机从经验中学习，按照概念的层级(Hierarchy of Concepts)来理解世界，其中每个概念定义在比它更简单的概念之上，从而避免让人类去指定计算机需要的知识。这种方法我们称之为深度学习。深度学习只是机器学习领域的一个很小的课题，从下图可以看出，但是由于它解决了许多以前无法解决的问题，提升了以前解决得不好的问题，从而名声大噪，进入了大众的视野。&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/dl_001.png&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

&lt;p&gt;给一个较明确的定义如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“深度学习是一种表示学习方法,把原始数据通过一些简单的非线性模型转变为更高层次的,更加抽象的表达。通过足够多的转换的组合,非常复杂的函数也可以被学习。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;深度学习处在什么位置？&quot;&gt;&lt;a href=&quot;#深度学习处在什么位置？&quot; class=&quot;headerlink&quot; title=&quot;深度学习处在什么位置？&quot;&gt;&lt;/a&gt;深度学习处在什么位置？&lt;/h2&gt;&lt;p&gt;从上图我们看出，我们首先聚焦AI领域，AI包括基于知识的AI(类似以前的专家系统)，另外还包括机器学习，机器学习又分为几类，一类如SVM，LR等传统的分类回归方法，另一类即表示学习，传统的机器学习方法意图学习一个表示-&amp;gt;输出的映射$\mathcal F$，其中表示往往需要做特征工程，人工指定数据的表示方法，表示的选择对机器学习的性能有着巨大的影响，而表示学习的精髓在于，它不仅学习表示-&amp;gt;输出的映射，还学习表示本身，即学习更好的对输入数据的表示，表示学习就像一个端到端的过程，直接得出输入到输出的一系列映射关系，表示学习包括浅层的自动编码器(autoencoders)，意在学习出输入到另一个表示的尽可能降低信息损失的映射，意在得到一个具有输入不具有的良好性质的表示。表示学习的另一大类就是深度学习，深度学习，在于一个深字，也称为深度神经网络，因为这种深度通过多层的神经网络来组成，比如多层感知机(MLP)就属于深度学习范畴。说白一点就是，深度学习就是很多层神经网络组合而成，利用深度和非线性单元的一起作用，更多的学习函数或者概念的组合，使得机器能够学习到更加复杂的映射，解决那些更加复杂的问题，一般认为，有某些因素在背后影响着我们具体问题中的观察数据，深度学习的目的就是学习出这种因素及这种因素是如何变化的。至于多深才算深，也没有统一的意见。&lt;br&gt;书上这张图更加清晰地阐明了深度学习的方法。&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/dl_002.png&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

&lt;h2 id=&quot;历史与趋势&quot;&gt;&lt;a href=&quot;#历史与趋势&quot; class=&quot;headerlink&quot; title=&quot;历史与趋势&quot;&gt;&lt;/a&gt;历史与趋势&lt;/h2&gt;&lt;p&gt;深度学习在历史进程中总的来说有几大趋势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;深度学习有着很长很丰富的历史，但是许多反映着不同哲学观点的人的名字已经消逝，不被人记起&lt;/li&gt;
&lt;li&gt;随着训练数据的增多，深度学习的效果变得更好了&lt;/li&gt;
&lt;li&gt;软件和硬件的迅速提升给深度学习提供了物质基础&lt;/li&gt;
&lt;li&gt;深度学习有了更高的准确率，逐渐在解决日益复杂的问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可能有很多人认为神经科学是对大脑的模拟，确实，脑神经科学的研究给予了神经网络重大的启示，但是深度学习，或者神经网络，更多的是受到多个其他领域的启发，比如应用数学基础，信息论和数值优化等等，我们甚至可以直接说，神经网络是一个数学问题。&lt;/p&gt;
&lt;p&gt;深度学习的历史要追溯到上个世纪40年代，40年代是神经网络的萌芽期，1943年McCulloch-Pitts Neuron的发明，控制论(Cybernetics)的兴起，和1945年Hebb学习规则的提出，逐渐萌生了神经网络这门学科。到后来，1950年代到60年代末，期间有1958年感知机的提出，1960年ADALINE(Adaptive Linear Element)的提出，促使了这段时间的逐渐繁荣。但是，以上模型终究只是线性模型，无法解决更复杂的问题，甚至无法学习异或(XOR)操作，这让人们很失望，于是知道70年代末期，整个领域陷入了一片沉寂。到80年代，联结主义和并行分布式计算的浪潮掀起，1986年著名的后向传播算法(BP, Back Propagation)的发明，分布式表示(Distributed Representation)的提出，以及序列建模，LSTM都相继提出，构成了另一波的繁荣期。联结主义是统合了认知心理学、人工智能和心理哲学领域的一种理论，认为”大量的简单计算单元相互联结时能够达到智能行为”。繁荣了不久(很可能当时也是如现在一般火热)，许多创业者纷纷涌入，为了获得投资，鼓吹之风逐渐升起，导致最后许诺的效果无法兑现，投资者逐渐丧失信心，加之当时数据少，层数浅，训练慢，很容易造成过拟合或者欠拟合的问题，以及SVM和图模型的巨大成功，使得神经网络再次被压了下去，陷入沉寂，而此事，有一个名为CIFAR(Canadian Institute for Advanced Research)的学术组织，成员包括现在大家耳熟能详的LeCun，Bengio，Hinton等人，没错，就是本书作者Bengio，他们一直在坚持神经网络的研究。到了2006年，Hinton发表著名论文，表明深度信念网络可以采用Greedy Layer-wise Pretraining的策略高效地训练，后来人发现这种方法在其他深度网络上作用也很大，从此以后，深度学习开始在各领域大放异彩，2006年也因此被称为”深度学习元年”。&lt;/p&gt;
&lt;p&gt;目前深度学习作用最为显著的领域当属计算机视觉，语音识别和自然语言处理了。&lt;/p&gt;
&lt;h2 id=&quot;为什么是深度学习？&quot;&gt;&lt;a href=&quot;#为什么是深度学习？&quot; class=&quot;headerlink&quot; title=&quot;为什么是深度学习？&quot;&gt;&lt;/a&gt;为什么是深度学习？&lt;/h2&gt;&lt;p&gt;很简单，从以下几个方面可以一窥究竟&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据集规模：如今越来越数字化，数据量成爆炸式增长，使得人们想从巨量的数据中挖掘各种各样的模式和价值&lt;/li&gt;
&lt;li&gt;计算能力和模型大小：计算能力的提升使得我们能够训练越来越大的模型，提高了模型大小，也就增加了能解决的问题的复杂度&lt;/li&gt;
&lt;li&gt;准确率，问题复杂性：深度学习在诸多领域表现出色，在某些识别问题上甚至超过人类，解决着越来越复杂的问题&lt;/li&gt;
&lt;li&gt;实际应用：深度学习的落地，解决了人们很多需求，带来了很多价值，让人们逐渐对他倾心。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;弱点？&quot;&gt;&lt;a href=&quot;#弱点？&quot; class=&quot;headerlink&quot; title=&quot;弱点？&quot;&gt;&lt;/a&gt;弱点？&lt;/h2&gt;&lt;p&gt;可是，深度学习就没有一点缺陷么？不是的，辩证法来说，事物总是具有两面性，深度学习的一些弱点如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;很多时候,初始数据表示就已经很合适了&lt;/li&gt;
&lt;li&gt;需要大量的数据&lt;/li&gt;
&lt;li&gt;巨大的计算开销,小的机构有点虚&lt;/li&gt;
&lt;li&gt;容易陷入局部最优&lt;/li&gt;
&lt;li&gt;难以解释，“玄乎”&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;最后&quot;&gt;&lt;a href=&quot;#最后&quot; class=&quot;headerlink&quot; title=&quot;最后&quot;&gt;&lt;/a&gt;最后&lt;/h2&gt;&lt;p&gt;本文取材自本书第一章导引部分，第一章介绍了深度学习的概念，以及深度学习在整个领域中所处的位置，然后交代了深度学习的历史发展与趋势，以及能够站上如此高的舞台的内在外在原因。再加上自己的一些理解，促成了本文。笔者才疏学浅，如果不妥之处，还望不吝指出，感谢阅读到最后的朋友们。&lt;br&gt;另附上笔者在一次Talk中的演讲PPT，也有很大一部分取材于本书第一章，可以尝试下载观看。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://ogbh7uglm.bkt.clouddn.com/%E6%B5%85%E8%B0%88%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%20.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;浅谈深度学习.PDF&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;References&quot;&gt;&lt;a href=&quot;#References&quot; class=&quot;headerlink&quot; title=&quot;References&quot;&gt;&lt;/a&gt;References&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;《Deep Learning》GoodFellow, Bengio etc.&lt;/li&gt;
&lt;li&gt;《Deep Learning Revew》LeCun, Bengio, Hinton&lt;/li&gt;
&lt;li&gt;《Deep Learning学习笔记整理系列》zouxy&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;“深度学习”的概念萌芽于2006年，2010年以后逐渐兴起，到2015,2016年达到顶峰，尤其是2016年，感觉各种IT网站，业界公号，微
    
    </summary>
    
      <category term="深度学习 | Deep Learning" scheme="http://whatbeg.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-Deep-Learning/"/>
    
    
      <category term="Deep Learning" scheme="http://whatbeg.com/tags/Deep-Learning/"/>
    
      <category term="深度学习" scheme="http://whatbeg.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>给静态博客加上邮件订阅功能</title>
    <link href="http://whatbeg.com/2017/03/23/addemailsubscribe.html"/>
    <id>http://whatbeg.com/2017/03/23/addemailsubscribe.html</id>
    <published>2017-03-23T12:54:09.000Z</published>
    <updated>2017-06-16T01:57:17.619Z</updated>
    
    <content type="html">&lt;p&gt;平时工作中常常会订阅一些业界日报，周报等，俨然已经成为了每天、每周获取业界消息的重要来源。于是突发奇想，想能不能自己的博客加上邮件订阅功能呢。&lt;/p&gt;
&lt;p&gt;一搜，发现有很多工具，也没多比较，根据&lt;a href=&quot;http://www.race604.com/add-email-subscribe&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇文章&lt;/a&gt;选择了&lt;a href=&quot;https://mailchimp.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MailChimp&lt;/a&gt;这个工具。功能比较强大比较老牌，界面也很炫酷，就是访问体验差了一些，不知道是不是网络的原因，有时候加载的延迟比较长，但是也在可接受范围内啦。鉴于上面的文章介绍的不是太详尽，这里介绍下自己做的一个流程。&lt;/p&gt;
&lt;p&gt;流程大概分以下几步：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注册账号&lt;/li&gt;
&lt;li&gt;创建初始邮件列表&lt;/li&gt;
&lt;li&gt;设定订阅点击栏&lt;/li&gt;
&lt;li&gt;创建邮件订阅活动Campaign及制定邮件格式&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;注册账号&quot;&gt;&lt;a href=&quot;#注册账号&quot; class=&quot;headerlink&quot; title=&quot;注册账号&quot;&gt;&lt;/a&gt;注册账号&lt;/h3&gt;&lt;p&gt;首先注册MailChimp账号，在&lt;a href=&quot;https://login.mailchimp.com/signup/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;注册。一般每个月2000个订阅者以下免费。要注意的是，邮件地址（住址/公司地址，非email）后面会出现在订阅者订阅的时候的信息里，以及默认的邮件模板里，所以好好填为好，不要乱填。&lt;/p&gt;
&lt;h3 id=&quot;创建一个邮件列表&quot;&gt;&lt;a href=&quot;#创建一个邮件列表&quot; class=&quot;headerlink&quot; title=&quot;创建一个邮件列表&quot;&gt;&lt;/a&gt;创建一个邮件列表&lt;/h3&gt;&lt;p&gt;我们是最终需要向邮件列表中所有用户发送订阅邮件，所以需要新建邮件列表，点面板上的List，然后Create List，然后填入一些必要信息，保存。填写发送邮箱的时候需要认证一下邮箱，点击Verify即可。&lt;/p&gt;
&lt;h3 id=&quot;设定订阅点击栏&quot;&gt;&lt;a href=&quot;#设定订阅点击栏&quot; class=&quot;headerlink&quot; title=&quot;设定订阅点击栏&quot;&gt;&lt;/a&gt;设定订阅点击栏&lt;/h3&gt;&lt;p&gt;然后我们需要确定在你的网站/博客上做一个什么样的订阅入口，有直接显式的表单，也可以是重定向到一个专门填写信息表单的网址，我采用的是后者。&lt;br&gt;到刚刚创建的List的主界面，点击工具栏的”Signup forms”，选择一种表单形式，&lt;br&gt;如果是重定向的表单的话，选择”General forms”&lt;br&gt;如果是嵌入形式的直接填写提交的表单，选择”Embedded forms”&lt;br&gt;其他两种不太了解。&lt;/p&gt;
&lt;p&gt;然后就是修改相应你想显示的信息，保存完成。&lt;/p&gt;
&lt;h3 id=&quot;创建邮件订阅活动Campaign及制定邮件格式&quot;&gt;&lt;a href=&quot;#创建邮件订阅活动Campaign及制定邮件格式&quot; class=&quot;headerlink&quot; title=&quot;创建邮件订阅活动Campaign及制定邮件格式&quot;&gt;&lt;/a&gt;创建邮件订阅活动Campaign及制定邮件格式&lt;/h3&gt;&lt;p&gt;设定了邮件列表之后，我们需要创建邮件订阅服务了，即创建自动发送邮件的服务。点击主面板Campaigns，创建活动，填写相应信息，期间要填写发送邮件的邮箱，建议注册一个新的邮箱，比如说&lt;code&gt;xx_noreply@some.com&lt;/code&gt;格式的。&lt;br&gt;MailChimp提供了集中Campaign类型，由于博客的话一般是RSS订阅，我们可以直接利用RSS的内容来发送给Subscribers，所以我们选择RSS-Driven Campaign，填入博客RSS地址，然后设置频率，发送时间，接收者，一直点右下角的Next，然后选一个邮件模板，我选的是1 Column - Full Width。然后做一番设计，由于我们是发送RSS信息，所以需拖入一个RSS Items模块，然后可以做一些修改，比如修改对齐，字体等。期间有些信息是不能预览的，可以点击Preview and Test发送测试邮件看看效果。&lt;br&gt;最后Next到Confirm，确认后点击Start RSS，跳到Done And Done界面，表示一切完成，你的订阅List中的订阅者就会按时收到邮件了。&lt;br&gt;&lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/mailchimp.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;添加到hexo博客组件&quot;&gt;&lt;a href=&quot;#添加到hexo博客组件&quot; class=&quot;headerlink&quot; title=&quot;添加到hexo博客组件&quot;&gt;&lt;/a&gt;添加到hexo博客组件&lt;/h3&gt;&lt;p&gt;这里演示如何添加到你的hexo博客的侧边栏。&lt;br&gt;到hexo主目录的&lt;code&gt;\themes\YOUR_THEMES\layout\_widget&lt;/code&gt;下添加emailist.ejs文件，写入&lt;br&gt;&lt;figure class=&quot;highlight erb&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;rsspart&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://eepurl.com/cHO5An&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;target&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;_blank&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;title&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;email&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;ruby&quot;&gt; _&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;Email 订阅&#39;&lt;/span&gt;) &lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里我直接做成了和RSS订阅相同的形式，所以直接利用class=”rsspart”，具体可以根据自己的主题设置自己想要的格式。&lt;/p&gt;
&lt;p&gt;最后，欢迎订阅本博客，由于更新并不是太频繁，只做了月报，订阅地址：&lt;br&gt;&lt;a href=&quot;http://eepurl.com/cHO5An&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://eepurl.com/cHO5An&lt;/a&gt;&lt;br&gt;或点击侧边栏订阅。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;平时工作中常常会订阅一些业界日报，周报等，俨然已经成为了每天、每周获取业界消息的重要来源。于是突发奇想，想能不能自己的博客加上邮件订阅功能呢。&lt;/p&gt;
&lt;p&gt;一搜，发现有很多工具，也没多比较，根据&lt;a href=&quot;http://www.race604.com/add-ema
    
    </summary>
    
      <category term="错误解决与优化 | Err_n_Opt" scheme="http://whatbeg.com/categories/%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E4%B8%8E%E4%BC%98%E5%8C%96-Err-n-Opt/"/>
    
    
      <category term="hexo" scheme="http://whatbeg.com/tags/hexo/"/>
    
      <category term="Web" scheme="http://whatbeg.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Linux备忘命令</title>
    <link href="http://whatbeg.com/2017/03/11/linuxmemo.html"/>
    <id>http://whatbeg.com/2017/03/11/linuxmemo.html</id>
    <published>2017-03-11T04:42:52.000Z</published>
    <updated>2017-06-25T03:03:33.935Z</updated>
    
    <content type="html">&lt;h5 id=&quot;图片压缩&quot;&gt;&lt;a href=&quot;#图片压缩&quot; class=&quot;headerlink&quot; title=&quot;图片压缩&quot;&gt;&lt;/a&gt;图片压缩&lt;/h5&gt;&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt; imagemagick&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;convert&lt;/span&gt; -resize &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;x100 &lt;span class=&quot;built_in&quot;&gt;from&lt;/span&gt;.jpg &lt;span class=&quot;built_in&quot;&gt;to&lt;/span&gt;.jpg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;convert&lt;/span&gt; -resize &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;%x50% &lt;span class=&quot;built_in&quot;&gt;from&lt;/span&gt;.jpg &lt;span class=&quot;built_in&quot;&gt;to&lt;/span&gt;.jpg&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;Neural-Artistic-Style&quot;&gt;&lt;a href=&quot;#Neural-Artistic-Style&quot; class=&quot;headerlink&quot; title=&quot;Neural Artistic Style&quot;&gt;&lt;/a&gt;Neural Artistic Style&lt;/h5&gt;&lt;figure class=&quot;highlight brainfuck&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;python&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;neural_style&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;py&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;checkpoint&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;400out/out%s&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;jpg&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;checkpoint&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;iterations&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;50&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;iterations&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;1000&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;content&lt;/span&gt; &amp;lt;&lt;span class=&quot;comment&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;file&lt;/span&gt;&amp;gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;styles&lt;/span&gt; &amp;lt;&lt;span class=&quot;comment&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;file&lt;/span&gt;&amp;gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;output&lt;/span&gt; &amp;lt;&lt;span class=&quot;comment&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;file&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;删除目录下符合条件的文件&quot;&gt;&lt;a href=&quot;#删除目录下符合条件的文件&quot; class=&quot;headerlink&quot; title=&quot;删除目录下符合条件的文件&quot;&gt;&lt;/a&gt;删除目录下符合条件的文件&lt;/h5&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;find ./ -name &lt;span class=&quot;string&quot;&gt;&quot;CMakeCache.txt&quot;&lt;/span&gt; | xargs &lt;span class=&quot;keyword&quot;&gt;rm&lt;/span&gt; -rf;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TORCH_LUA_VERSION=LUA52 ./install.&lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;安装cudnn，cuda配置的环境变量&quot;&gt;&lt;a href=&quot;#安装cudnn，cuda配置的环境变量&quot; class=&quot;headerlink&quot; title=&quot;安装cudnn，cuda配置的环境变量&quot;&gt;&lt;/a&gt;安装cudnn，cuda配置的环境变量&lt;/h5&gt;&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;export LD_LIBRARY_PATH=/usr/local/cuda-&lt;span class=&quot;number&quot;&gt;8.0&lt;/span&gt;/lib64:/usr/local/cuda-&lt;span class=&quot;number&quot;&gt;8.0&lt;/span&gt;/extras/CUPTI/lib64:$LD_LIBRARY_PATH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export CUDA_HOME=/usr/local/cuda-&lt;span class=&quot;number&quot;&gt;8.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export PATH=$CUDA_HOME/bin:$PATH&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;安装JAVA，JDK配置环境变量&quot;&gt;&lt;a href=&quot;#安装JAVA，JDK配置环境变量&quot; class=&quot;headerlink&quot; title=&quot;安装JAVA，JDK配置环境变量&quot;&gt;&lt;/a&gt;安装JAVA，JDK配置环境变量&lt;/h5&gt;&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;export JAVA_HOME=/usr/local/jdk1.&lt;span class=&quot;number&quot;&gt;8.0_121&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export JRE_HOME=$JAVA_HOME/jre&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export PATH=$JAVA_HOME/bin:$PATH&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;查找一个或多个文件中是否含有某字符串&quot;&gt;&lt;a href=&quot;#查找一个或多个文件中是否含有某字符串&quot; class=&quot;headerlink&quot; title=&quot;查找一个或多个文件中是否含有某字符串&quot;&gt;&lt;/a&gt;查找一个或多个文件中是否含有某字符串&lt;/h5&gt;&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;strings ./xx.&lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt; | &lt;span class=&quot;keyword&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;STR*&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;yarn-终结application&quot;&gt;&lt;a href=&quot;#yarn-终结application&quot; class=&quot;headerlink&quot; title=&quot;yarn 终结application&quot;&gt;&lt;/a&gt;yarn 终结application&lt;/h5&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yarn &lt;span class=&quot;built_in&quot;&gt;application&lt;/span&gt; -kill &amp;lt;application_ID&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;vim字符串查找与替换&quot;&gt;&lt;a href=&quot;#vim字符串查找与替换&quot; class=&quot;headerlink&quot; title=&quot;vim字符串查找与替换&quot;&gt;&lt;/a&gt;vim字符串查找与替换&lt;/h5&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/A          &lt;span class=&quot;comment&quot;&gt;# 查找A （从上往下）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;?A          &lt;span class=&quot;comment&quot;&gt;# 查找A （从下往上）  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;:%s/A/B/g&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;# 将所有行的A替换为B&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;:%s/A/B/&lt;/span&gt;    &lt;span class=&quot;comment&quot;&gt;# 将所有行的第一个A替换为B&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;:s/A/B/g&lt;/span&gt;    &lt;span class=&quot;comment&quot;&gt;# 替换当前行所有A为B&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;查找包含某字符串的文件及字符串出现位置&quot;&gt;&lt;a href=&quot;#查找包含某字符串的文件及字符串出现位置&quot; class=&quot;headerlink&quot; title=&quot;查找包含某字符串的文件及字符串出现位置&quot;&gt;&lt;/a&gt;查找包含某字符串的文件及字符串出现位置&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;第一种&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight haml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;grep -rn &quot;string&quot; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;grep -rn &quot;string&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* : 表示当前目录所有文件，也可以是某个文件名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;ruby&quot;&gt;r 是递归查找&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt;n 是显示行号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt;R 查找所有文件包含子目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt;i 忽略大小写&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;第二种&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;find&lt;/span&gt; ./ -name &lt;span class=&quot;string&quot;&gt;&#39;filenamepattern&#39;&lt;/span&gt; | xargs &lt;span class=&quot;keyword&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;string&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;详情见&lt;a href=&quot;http://www.cnblogs.com/wangkongming/p/4476933.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Komiles&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;图片压缩&quot;&gt;&lt;a href=&quot;#图片压缩&quot; class=&quot;headerlink&quot; title=&quot;图片压缩&quot;&gt;&lt;/a&gt;图片压缩&lt;/h5&gt;&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu
    
    </summary>
    
      <category term="计算机相关 | CS.Related" scheme="http://whatbeg.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3-CS-Related/"/>
    
    
      <category term="Linux" scheme="http://whatbeg.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>C/C++语言备忘</title>
    <link href="http://whatbeg.com/2017/03/11/candcplusplusmemo.html"/>
    <id>http://whatbeg.com/2017/03/11/candcplusplusmemo.html</id>
    <published>2017-03-11T04:42:43.000Z</published>
    <updated>2017-03-11T08:32:06.139Z</updated>
    
    <content type="html">&lt;p&gt;本文对一些常用的C/C++语言的小技巧或者小知识做一个备忘，以便查找。&lt;/p&gt;
&lt;h5 id=&quot;数字转String&quot;&gt;&lt;a href=&quot;#数字转String&quot; class=&quot;headerlink&quot; title=&quot;数字转String&quot;&gt;&lt;/a&gt;数字转String&lt;/h5&gt;&lt;figure class=&quot;highlight hsp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;string id&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stringstream ss&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ss &amp;lt;&amp;lt; x&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ss &amp;gt;&amp;gt; id&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;结构体内嵌比较函数的规则&quot;&gt;&lt;a href=&quot;#结构体内嵌比较函数的规则&quot; class=&quot;headerlink&quot; title=&quot;结构体内嵌比较函数的规则&quot;&gt;&lt;/a&gt;结构体内嵌比较函数的规则&lt;/h5&gt;&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; node&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; l,r;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt; &amp;lt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; node &amp;amp;a)&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; r &amp;lt; a.r;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此时左边那个&lt;code&gt;r&lt;/code&gt;表示自己这个&lt;code&gt;r&lt;/code&gt;，如果排序的话，会按&lt;code&gt;r&lt;/code&gt;值从小到大排序，因为&lt;code&gt;sort&lt;/code&gt;默认就是从小到大的。&lt;br&gt;而优先队列就不同了，优先队列中默认是大值优先，所以大小关系相反，比如下面这个：&lt;br&gt;&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; SELL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; price,num;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt; &amp;lt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; SELL &amp;amp;a)&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; price&amp;gt;a.price;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;priority_queue&amp;lt;SELL&amp;gt; que;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;那么这个优先队列是按&lt;code&gt;price&lt;/code&gt;小的优先出队。&lt;br&gt;总之记住：&lt;strong&gt;结构体中直接写比较函数一定是左边那个裸的r表示当前&lt;code&gt;this&lt;/code&gt;值，如果&lt;code&gt;r&amp;lt;a.r&lt;/code&gt;，那么就是从小到大排序，而优先队列恰恰相反&lt;/strong&gt;，就行了。&lt;/p&gt;
&lt;h5 id=&quot;拷贝vector-v1到vector-v2&quot;&gt;&lt;a href=&quot;#拷贝vector-v1到vector-v2&quot; class=&quot;headerlink&quot; title=&quot;拷贝vector v1到vector v2&quot;&gt;&lt;/a&gt;拷贝vector v1到vector v2&lt;/h5&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;v2.insert&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;meta&quot;&gt;.end&lt;/span&gt;(), &lt;span class=&quot;built_in&quot;&gt;v1&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;begin(), &lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;meta&quot;&gt;.end&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;一些数据类型的表示范围&quot;&gt;&lt;a href=&quot;#一些数据类型的表示范围&quot; class=&quot;headerlink&quot; title=&quot;一些数据类型的表示范围&quot;&gt;&lt;/a&gt;一些数据类型的表示范围&lt;/h5&gt;&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;～&lt;span class=&quot;number&quot;&gt;4294967295&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;             &lt;span class=&quot;number&quot;&gt;-2147483648&lt;/span&gt;～&lt;span class=&quot;number&quot;&gt;2147483647&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;～&lt;span class=&quot;number&quot;&gt;4294967295&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;            &lt;span class=&quot;number&quot;&gt;-2147483648&lt;/span&gt;～&lt;span class=&quot;number&quot;&gt;2147483647&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;：     &lt;span class=&quot;number&quot;&gt;-9223372036854775808&lt;/span&gt;~&lt;span class=&quot;number&quot;&gt;9223372036854775807&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;的最大值：  &lt;span class=&quot;number&quot;&gt;1844674407370955161&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__int64：       &lt;span class=&quot;number&quot;&gt;-9223372036854775808&lt;/span&gt;~&lt;span class=&quot;number&quot;&gt;9223372036854775807&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; __int64的最大值：   &lt;span class=&quot;number&quot;&gt;18446744073709551615&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;的范围为 &lt;span class=&quot;number&quot;&gt;-2&lt;/span&gt;^&lt;span class=&quot;number&quot;&gt;128&lt;/span&gt; ~ +&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;^&lt;span class=&quot;number&quot;&gt;128&lt;/span&gt; 也即&lt;span class=&quot;number&quot;&gt;-3.40E+38&lt;/span&gt; ~ +&lt;span class=&quot;number&quot;&gt;3.40E+38&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;的范围为 &lt;span class=&quot;number&quot;&gt;-2&lt;/span&gt;^&lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt; ~ +&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;^&lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt;   也即&lt;span class=&quot;number&quot;&gt;-1.79E+308&lt;/span&gt; ~ +&lt;span class=&quot;number&quot;&gt;1.79E+308&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;字符串转数字&quot;&gt;&lt;a href=&quot;#字符串转数字&quot; class=&quot;headerlink&quot; title=&quot;字符串转数字&quot;&gt;&lt;/a&gt;字符串转数字&lt;/h5&gt;&lt;figure class=&quot;highlight hsp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; num&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;string s&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stringstream ss(s)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ss&amp;gt;&amp;gt;num&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;char &lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;[]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sscanf( &lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;, &amp;amp;num )&lt;span class=&quot;comment&quot;&gt;;         // 将字符串转换成整数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sscanf( &lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;%f&quot;&lt;/span&gt;, &amp;amp;floatnum )&lt;span class=&quot;comment&quot;&gt;;    // 将字符串转换成浮点数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;char &lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;[]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;floatnum = atof(&lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;   // 字符串转浮点数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;num = atoi(&lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;        // 字符串转整数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;若字符串为string类型，则要用c_str()方法获取其字符串指针&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;string &lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;floatnum = atof(&lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;.c_str())&lt;span class=&quot;comment&quot;&gt;;   // string转浮点数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;num = atoi(&lt;span class=&quot;keyword&quot;&gt;str&lt;/span&gt;.c_str())&lt;span class=&quot;comment&quot;&gt;;        // string转整数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;排序vector结构体最好内嵌比较函数&quot;&gt;&lt;a href=&quot;#排序vector结构体最好内嵌比较函数&quot; class=&quot;headerlink&quot; title=&quot;排序vector结构体最好内嵌比较函数&quot;&gt;&lt;/a&gt;排序vector结构体最好内嵌比较函数&lt;/h5&gt;&lt;p&gt;比如内嵌：&lt;br&gt;&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;&amp;lt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; node &amp;amp;B)&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; r&amp;lt;B.r;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;时 &lt;code&gt;sort(v.begin(),v.end())&lt;/code&gt;  比  &lt;code&gt;sort(v.begin(),v.end(),cmp)&lt;/code&gt; 快。 而且是超时的点。 注意！&lt;/p&gt;
&lt;h5 id=&quot;lower-bound-upper-bound-和unique函数的下标关系&quot;&gt;&lt;a href=&quot;#lower-bound-upper-bound-和unique函数的下标关系&quot; class=&quot;headerlink&quot; title=&quot;lower_bound(),upper_bound()和unique函数的下标关系&quot;&gt;&lt;/a&gt;lower_bound(),upper_bound()和unique函数的下标关系&lt;/h5&gt;&lt;p&gt;我们经常要用到这两个函数，但是每次都要斟酌到底下标减不减1.&lt;br&gt;正确规则是：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;*unique函数想要得到正确的不相同元素个数，那么下标在以1开始时要减去num+1&lt;/strong&gt;&lt;br&gt;即应该如此调用：&lt;br&gt;&lt;figure class=&quot;highlight maxima&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tot = &lt;span class=&quot;built_in&quot;&gt;unique&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;+tot)-&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tot = &lt;span class=&quot;built_in&quot;&gt;unique&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;+tot+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)-&lt;span class=&quot;built_in&quot;&gt;num&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;因为tot是记录个数，个数必然是与最初的下标的距离，所以最初的下标是0或1则减去0或1.&lt;/p&gt;
&lt;p&gt;而&lt;code&gt;lower_bound()&lt;/code&gt;则不同，&lt;code&gt;lower_bound()&lt;/code&gt;,&lt;code&gt;upper_bound()&lt;/code&gt;得到的是大于（等于）某数的第一个数的下标，无论数组从0还是1开始，都只要减num（数组）即可，得到的下标自会调整为应该的下标。&lt;br&gt;即 应该如此调用：&lt;br&gt;&lt;figure class=&quot;highlight autoit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; K1 = upper_bound(a+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,a+n+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;now&lt;/span&gt;)-a&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; K2 = upper_bound(a,a+n,&lt;span class=&quot;built_in&quot;&gt;now&lt;/span&gt;)-a&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;vector中unique与erase结合去重&quot;&gt;&lt;a href=&quot;#vector中unique与erase结合去重&quot; class=&quot;headerlink&quot; title=&quot;vector中unique与erase结合去重&quot;&gt;&lt;/a&gt;vector中unique与erase结合去重&lt;/h5&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sort(&lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt;.begin(),&lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt;.end())&lt;span class=&quot;comment&quot;&gt;;       &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt;.erase(unique(&lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt;.begin(),&lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt;.end()),&lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt;.end())&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;G-与C-的区别&quot;&gt;&lt;a href=&quot;#G-与C-的区别&quot; class=&quot;headerlink&quot; title=&quot;G++与C++的区别&quot;&gt;&lt;/a&gt;G++与C++的区别&lt;/h5&gt;&lt;p&gt;1、输出&lt;code&gt;double&lt;/code&gt;类型时，如果采用G++提交，&lt;code&gt;scanf&lt;/code&gt;采用&lt;code&gt;%lf&lt;/code&gt;，&lt;code&gt;prinf&lt;/code&gt;采用&lt;code&gt;%f&lt;/code&gt;，否则会报错&lt;br&gt;2、使用GCC/G++的提醒:&lt;br&gt;对于64位整数, long long int 和 __int64 都是支持并且等价的.但是在读和写的时候只支持&lt;code&gt;scanf(&amp;quot;%I64d&amp;quot;, ...)&lt;/code&gt;和&lt;code&gt;printf(&amp;quot;%I64d&amp;quot;, ...)&lt;/code&gt;.&lt;br&gt;不支持&lt;code&gt;%lld&lt;/code&gt;是因为MinGW下的GCC和G++使用的&lt;code&gt;msvcrt.dll&lt;/code&gt;动态链接库并不支持C99标准.&lt;br&gt;根据ISO C++标准,在G++下, main函数的返回值必须是int,否则将会导致Compile Error(编译错误)的判答.&lt;/p&gt;
&lt;h5 id=&quot;字符串Split&quot;&gt;&lt;a href=&quot;#字符串Split&quot; class=&quot;headerlink&quot; title=&quot;字符串Split&quot;&gt;&lt;/a&gt;字符串Split&lt;/h5&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SplitString&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;amp; s, &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;gt;&amp;amp; v, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;&amp;amp; c)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;::size_type pos1, pos2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  pos2 = s.find(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  pos1 = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;::npos != pos2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    v.push_back(s.substr(pos1, pos2-pos1));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pos1 = pos2 + c.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pos2 = s.find(c, pos1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(pos1 != s.length())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    v.push_back(s.substr(pos1));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;C文件读写&quot;&gt;&lt;a href=&quot;#C文件读写&quot; class=&quot;headerlink&quot; title=&quot;C文件读写&quot;&gt;&lt;/a&gt;C文件读写&lt;/h5&gt;&lt;figure class=&quot;highlight hsp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fscanf(fp, &lt;span class=&quot;string&quot;&gt;&quot;%s&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;input&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fprintf(fp, &lt;span class=&quot;string&quot;&gt;&quot;%s&quot;&lt;/span&gt;, output)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 二进制读写&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fread(datastream, &lt;span class=&quot;number&quot;&gt;17700&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, fp)&lt;span class=&quot;comment&quot;&gt;; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fwrite(outstream, sizeof(outstream), &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, fp)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文对一些常用的C/C++语言的小技巧或者小知识做一个备忘，以便查找。&lt;/p&gt;
&lt;h5 id=&quot;数字转String&quot;&gt;&lt;a href=&quot;#数字转String&quot; class=&quot;headerlink&quot; title=&quot;数字转String&quot;&gt;&lt;/a&gt;数字转String&lt;/h5&gt;&lt;f
    
    </summary>
    
      <category term="编程语言 | Program Lang." scheme="http://whatbeg.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80-Program-Lang/"/>
    
    
      <category term="CS" scheme="http://whatbeg.com/tags/CS/"/>
    
  </entry>
  
  <entry>
    <title>用信号量解决进程的同步与互斥探讨</title>
    <link href="http://whatbeg.com/2017/03/06/semaphore.html"/>
    <id>http://whatbeg.com/2017/03/06/semaphore.html</id>
    <published>2017-03-06T11:41:49.000Z</published>
    <updated>2017-03-06T11:48:09.838Z</updated>
    
    <content type="html">&lt;p&gt;本篇也是一篇老文，发布于2015年5月，文章比较长，算老博客看的比较多的了，贴到这儿与大家分享，以求多多交流探讨。&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;现代操作系统采用多道程序设计机制，多个进程可以并发执行，CPU在进程之间来回切换，共享某些资源，提高了资源的利用率，但这也使得处理并发执行的多个进程之间的冲突和相互制约关系成为了一道难题。如果对并发进程的调度不当，则可能会出现运行结果与切换时间有关的情况，令结果不可再现，影响系统的效率和正确性，严重时还会使系统直接崩溃。就比如你只有一台打印机，有两个进程都需要打印文件，如果直接让他们简单地并发访问打印机，那么你很可能什么都打印不出来或者打印的文件是…anyway，我们需要增加一些机制来控制并发进程间的这种相互制约关系。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;进程间通信的很多问题的根本原因是我们不知道进程何时切换。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;p&gt;首先我们了解一下临界资源与临界区的概念：临界资源就是一次只允许一个进程访问的资源，一个进程在使用临界资源的时候，另一个进程是无法访问的，操作系统也不能够中途剥夺正在使用者的使用权利，正所谓“泼出去的女儿嫁出去的水”是也。即临界资源是不可剥夺性资源。那么临界区呢？所谓临界区就是进程中范文临界资源的那段程序代码，注意，是程序代码，不是内存资源了，这就是临界资源与临界区的区别。我们规定临界区的使用原则（也即同步机制应遵循的准则）十六字诀：“空闲让进，忙则等待，有限等待，让权等待”–strling。让我们分别来解释一下：&lt;/p&gt;
&lt;p&gt;（1）空闲让进：临界资源空闲时一定要让进程进入，不发生“互斥礼让”行为。&lt;br&gt;（2）忙则等待：临界资源正在使用时外面的进程等待。&lt;br&gt;（3）有限等待：进程等待进入临界区的时间是有限的，不会发生“饿死”的情况。&lt;br&gt;（4）让权等待：进程等待进入临界区是应该放弃CPU的使用。&lt;/p&gt;
&lt;p&gt;好了，我们进入下一部分。&lt;/p&gt;
&lt;p&gt;进程间通常存在着两种制约关系：直接制约关系和间接制约关系，就是我们通常所说的进程的同步与互斥。顾名思义，一个是合作关系，一个是互斥关系。进程互斥说白了就是“你用的时候别人都不能用，别人用的时候，你也不能去用”，是一种源于资源共享的间接制约关系。进程同步指的是“我们大家利用一些共同的资源区，大家一起合作，完成某些事情，但是我在干某些小事的时候，可能要等到你做完另一些小事”，是一种源于相互合作的直接制约关系。两者区别在于互斥的进程间没有必然的联系，属于竞争者关系，谁竞争到资源（的使用权），谁就使用它，直到使用完才归还。就比如洗衣房的洗衣机这个资源，去洗衣的同学并不需要有必然联系，你们可以互不认识，但是谁竞争到洗衣机的使用权，就可以使用，直到洗完走人。而同步的进程间是有必然联系的，即使竞争到使用权，如果合作者没有发出必要的信息，该进程依然不能执行。就比如排队打水，即使排到你了，如果水箱没水了，你就打不了水，说明你和水箱是有着必然联系的，你得从它里面取水，你们是同步关系，你们合作完成“打水”这个过程。&lt;/p&gt;
&lt;p&gt;那么先来讨论如何实现进程的互斥控制。有下列几种方法：严格轮换（每个进程每次都从头执行到尾，效率不高，可能等待很久），屏蔽中断（刚刚进入临界区时就屏蔽中断，刚要出临界区就打开中断），专用机器指令test_and_set,test_and_clear，加锁，软件方法，信号量机制。讲一下加锁和软件方法，加锁方法如下：设置一个锁标志K表示临界资源的状态，K=1表示临界资源正在被使用，K=0表示没有进程在访问临界资源。如果一个进程需要访问临界资源，那么先检查锁标志K：&lt;br&gt;&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;K&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, 循环检测，直到&lt;span class=&quot;keyword&quot;&gt;K&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;K&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;，设置锁标志为&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;，进入临界区&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;离开临界区时设置锁标志K为0. 软件方法类似，如爱斯基摩人的小屋协议，爱斯基摩人的小屋很小，每次只能容纳一个人进入，小屋内有一个黑板，上面标志这能够进入临界区的进程。若进程申请进入临界区，则先进入小屋检查黑板标志，如果是自己，那么离开小屋进入临界区，执行完后进入小屋修改黑板标志为其他进程，离开小屋。如果小屋黑板标志不是自己，那么反复进入小屋考察黑板标志是不是自己。这两种方法都实现了互斥访问，但是都违反了四条原则之一：让权等待，都需要不断的循环重复检测标志，霸占了CPU资源，不是很好的方法。&lt;/p&gt;
&lt;p&gt;到后来，荷兰计算机科学家Dijkstra于1965年提出了解决进程同步与互斥问题的信号量机制，收到了很好的效果，被一直沿用至今，广泛应用与单处理机和多处理机系统以及计算机网络中。信号量机制就是说两个或者多个进程通过他们都可以利用的一个或多个信号来实现准确无误不冲突的并发执行。如果临界资源不够，就会有一个信号表示出来，如果进程此时想访问，那么就会阻塞到一个队列中，等待调度。当临界资源使用完毕，一个进程改变信号，并及时唤醒阻塞的进程，这就实现了进程间的同步和互斥问题。&lt;/p&gt;
&lt;p&gt;信号量分为整型信号量，记录型信号量，AND信号量以及信号量集。最初的信号量就是整型信号量，定义信号量为一个整型变量，仅能通过两个原子操作P,V来访问，所谓原子操作就是指一组相联的操作要么不间断地执行，要么不执行。这两个操作又称为wait和signal操作或者down和up操作。之所以叫P,V操作是因为Dijkstra是荷兰人，P指的是荷兰语中的“proberen”，意为“测试”，而V指的是荷兰语中的“verhogen”，意为“增加”。最初P,V操作被描述为：&lt;br&gt;&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;P(&lt;span class=&quot;keyword&quot;&gt;S&lt;/span&gt;):   &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;S&lt;/span&gt;≤&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)  &amp;#123;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; nothing&amp;#125;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;S&lt;/span&gt;=&lt;span class=&quot;keyword&quot;&gt;S&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;V(&lt;span class=&quot;keyword&quot;&gt;S&lt;/span&gt;):   &lt;span class=&quot;keyword&quot;&gt;S&lt;/span&gt;=&lt;span class=&quot;keyword&quot;&gt;S&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;但是这样明显违反了“让权等待的原则”，后来发展为记录型信号量，记录型信号量的数据结构是一个两元组，包含信号量的值value和关于此信号量的阻塞队列Q，value具有非负初值，一般反映了资源的数量，只能由P,V操作改变其值。（还有另一种定义，信号量由value和P组成，value为信号量的值，P为指向PCB队列的指针）。&lt;/p&gt;
&lt;p&gt;记录型信号量的P,V操作原语为：&lt;br&gt;&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;P(&lt;span class=&quot;keyword&quot;&gt;S&lt;/span&gt;):   &lt;span class=&quot;keyword&quot;&gt;S&lt;/span&gt;.value = &lt;span class=&quot;keyword&quot;&gt;S&lt;/span&gt;.value-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;S&lt;/span&gt;.value &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           block(&lt;span class=&quot;keyword&quot;&gt;S&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;Q&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;V(&lt;span class=&quot;keyword&quot;&gt;S&lt;/span&gt;):   &lt;span class=&quot;keyword&quot;&gt;S&lt;/span&gt;.value = &lt;span class=&quot;keyword&quot;&gt;S&lt;/span&gt;.value + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;S&lt;/span&gt;.value &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            wakeup(&lt;span class=&quot;keyword&quot;&gt;S&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;Q&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们来详细解释一下这两个操作的含义：&lt;/p&gt;
&lt;p&gt;首先，P操作，首先将S.value减1，表示该进程需要一个临界资源，如果S.value&lt;0，那么说明原来的s.value &lt;=&quot;0，即已经没有资源可用了，于是将进程阻塞到与信号量S相关的阻塞队列中去，如果S.value&lt;0,那么|S.value|其实就表示阻塞队列的长度，即等待使用资源的进程数量。然后，V操作：首先S.value加1，表示释放一个资源，如果S.value&quot; 0，阻塞队列中是由进程的，于是唤醒该队列中的一个进程。那么，为什么s.value=&quot;&quot;&gt; 0时不唤醒进程呢，很简单，因为阻塞队列中没有进程了。&lt;/0，那么说明原来的s.value&gt;&lt;/p&gt;
&lt;p&gt;P操作相当于“等待一个信号”，而V操作相当于“发送一个信号”，在实现同步过程中，V操作相当于发送一个信号说合作者已经完成了某项任务，在实现互斥过程中，V操作相当于发送一个信号说临界资源可用了。实际上，在实现互斥时，P,V操作相当于申请资源和释放资源。&lt;/p&gt;
&lt;p&gt;我们将信号量初值设置为1时通常可实现互斥，因为信号量表示资源可用数目，互斥信号量保证只有一个进程访问临界资源，相当于只有一个访问权可用。设置为0或者N时可以用来实现同步。我们后面将会在生产者-消费者问题中看到这点。用P,V操作实现互斥类似于加锁的实现，在临界区之前加P操作，在临界区之后加V操作，即可互斥控制进程进入临界区，访问临界资源。记录型信号量由于引入了阻塞机制，消除了不让权等待的情况，提高了实现的效率。&lt;/p&gt;
&lt;h2 id=&quot;经典问题&quot;&gt;&lt;a href=&quot;#经典问题&quot; class=&quot;headerlink&quot; title=&quot;经典问题&quot;&gt;&lt;/a&gt;经典问题&lt;/h2&gt;&lt;p&gt;下面通过一些实例详细讲解如何使用信号量机制解决进程同步与互斥问题。先说明一条规律，即：同步与互斥实现的P,V操作虽然都是成对出现，但是互斥的P,V操作出现在同一个进程的程序里，而同步的P,V操作出现在不同进程的程序中。&lt;/p&gt;
&lt;h3 id=&quot;问题1：生产者-消费者问题&quot;&gt;&lt;a href=&quot;#问题1：生产者-消费者问题&quot; class=&quot;headerlink&quot; title=&quot;问题1：生产者-消费者问题&quot;&gt;&lt;/a&gt;问题1：生产者-消费者问题&lt;/h3&gt;&lt;p&gt;经典的同步互斥问题，也称作“有界缓冲区问题”。具体表现为：&lt;/p&gt;
&lt;p&gt;1.两个进程对同一个内存资源进行操作，一个是生产者，一个是消费者。&lt;br&gt;2.生产者往共享内存资源填充数据，如果区域满，则等待消费者消费数据。&lt;br&gt;3.消费者从共享内存资源取数据，如果区域空，则等待生产者填充数据。&lt;br&gt;4.生产者的填充数据行为和消费者的消费数据行为不可在同一时间发生。&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://images.cnitblog.com/blog2015/591194/201504/301954238803051.jpg&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

&lt;p&gt;生产者-消费者之间的同步关系表现为缓冲区空，则消费者需要等待生产者往里填充数据，缓冲区满则生产者需要等待消费者消费。两者共同完成数据的转移或传送。生产者-消费者之间的互斥关系表现为生产者往缓冲区里填充数据的时候，消费者无法进行消费，需要等待生产者完成工作，反之亦然。&lt;/p&gt;
&lt;p&gt;既然了解了互斥与同步关系，那么我们就来设置信号量：&lt;/p&gt;
&lt;p&gt;由于有互斥关系，所以我们应该设置一个互斥量mutex控制两者不能同时操作缓冲区。此外，为了控制同步关系，我们设置两个信号量empty和full来表示缓冲区的空槽数目和满槽数目，即有数据的缓冲区单元的个数。mutex初值为1，empty初值为n，即缓冲区容量，代表初始没有任何数据，有n个空的单元，类似的，full初值为0.&lt;/p&gt;
&lt;p&gt;下面进行生产者-消费者行为设计：&lt;br&gt;&lt;figure class=&quot;highlight hsp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void Productor() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//制造数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P(&amp;amp;empty)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P(&amp;amp;mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//填充数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V(&amp;amp;mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V(&amp;amp;full)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void Consumer() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P(&amp;amp;full)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P(&amp;amp;mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//消费数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V(&amp;amp;mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V(&amp;amp;empty)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样我们的分析也就完成了，&lt;a href=&quot;http://www.cnblogs.com/whatbeg/p/4419979.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/whatbeg/p/4419979.html&lt;/a&gt; 这篇文章里有我用Windows API实现的用信号量实现生产者-消费者问题。&lt;/p&gt;
&lt;p&gt;下面，问题来了，我们的生产者和消费者里面都有两个P,两个V操作，那么两个P操作可否调换顺序呢？V操作呢？想一想。&lt;/p&gt;
&lt;p&gt;答案是P操作不可对换，V操作可以。为什么呢？想象一下这种情况，生产者执行P(mutex)把互斥量锁住，然后再P(empty),此时empty &amp;lt; 0，锁住，无法继续生产，等待消费者消费，消费者倒是也想消费，可是mutex被锁住了啊，于是两个人就等啊等，就成了等待戈多了。。但是V操作是可以随意调换的，因为V操作是解锁和唤醒，不会因为它锁住什么。&lt;/p&gt;
&lt;h3 id=&quot;问题2：读者-写者问题&quot;&gt;&lt;a href=&quot;#问题2：读者-写者问题&quot; class=&quot;headerlink&quot; title=&quot;问题2：读者-写者问题&quot;&gt;&lt;/a&gt;问题2：读者-写者问题&lt;/h3&gt;&lt;p&gt;第二个经典问题是读者-写着问题，它为数据库的访问建立了一个模型。规则如下：&lt;/p&gt;
&lt;p&gt;1.一个进程在读的时候，其他进程也可以读。&lt;br&gt;2.一个进程在读/写的时候，其他进程不能进行写/读。&lt;br&gt;3.一个进程在写的时候，其他进程不能写。&lt;/p&gt;
&lt;p&gt;我们来分析他们的关系，首先，这个问题没有明显的同步关系，因为在这个问题里，读和写并不要合作完成某些事情。但是是有互斥关系的，写者和写者，写者和读者是有互斥关系的，我们需要设置一个mutex来控制其访问，但是单纯一个信号量的话会出现读者和读者的互斥也出现了，因为我们可能有多个读者，所以我们设置一个变量ReadCount表示读者的数量，好，这个时候，对于ReadCount又要实现多个读者对他的互斥访问，所以还要设置一个RC_mutex。这样就好了。然后是行为设计：&lt;br&gt;&lt;figure class=&quot;highlight gcode&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void Reader&lt;span class=&quot;comment&quot;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;(1)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P&lt;span class=&quot;comment&quot;&gt;(&amp;amp;RC_mutex)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rc = rc + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;(rc == 1)&lt;/span&gt; P&lt;span class=&quot;comment&quot;&gt;(&amp;amp;mutex)&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;//如果是第一个读者，那么限制写者的访问&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V&lt;span class=&quot;comment&quot;&gt;(&amp;amp;RC_mutex)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//读数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P&lt;span class=&quot;comment&quot;&gt;(&amp;amp;RC_mutex)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rc = rc - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;(rc == 0)&lt;/span&gt; V&lt;span class=&quot;comment&quot;&gt;(&amp;amp;mutex)&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;//如果是最后一个读者，那么释放以供写者或读者访问&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V&lt;span class=&quot;comment&quot;&gt;(&amp;amp;RC_mutex)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void Writer&lt;span class=&quot;comment&quot;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;(1)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P&lt;span class=&quot;comment&quot;&gt;(&amp;amp;mutex)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//写数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V&lt;span class=&quot;comment&quot;&gt;(&amp;amp;mutex)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其实，这个方法是有一定问题的，只要趁前面的读者还没读完的时候新一个读者进来，这样一直保持，那么写者会一直得不到机会，导致饿死。有一种解决方法就是在一个写者到达时，如果后面还有新的读者进来，那么先挂起那些读者，先执行写者，但是这样的话并发度和效率又会降到很低。有人提出了一种写者优先的解法，有点不好理解，这里给出实现：&lt;br&gt;&lt;figure class=&quot;highlight hsp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//写者优先的读者-写者问题解法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Semaphore x = y = z = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;    //x控制ReadCount的互斥访问，y控制WriteCount的互斥访问&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Semaphore rsem = wsem = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;  //rsem,wsem分别表示对读和写的互斥控制&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ReadCount = WriteCount = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void Reader() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    P(z)&lt;span class=&quot;comment&quot;&gt;;                       //z保证写跳过读，做到写优先&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    P(rsem)&lt;span class=&quot;comment&quot;&gt;;                    //控制对读的访问，如果有写者，那么此处不成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    P(x)&lt;span class=&quot;comment&quot;&gt;;                       //对RC的互斥控制&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ReadCount++&lt;span class=&quot;comment&quot;&gt;;                &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(ReadCount == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) P(wsem)&lt;span class=&quot;comment&quot;&gt;; //第一个读者出现后，锁住不让写&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    V(x)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    V(rsem)&lt;span class=&quot;comment&quot;&gt;;                    //释放读的访问，以使其他读者进入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    V(z)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//读数据...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    P(x)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ReadCount--&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(ReadCount == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) V(wsem)&lt;span class=&quot;comment&quot;&gt;; //如果是最后一个读者，释放对写的信号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    V(x)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void Writer() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    P(y)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    WriteCount++&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(WriteCount == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) P(rsem)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    V(y)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    P(wsem)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//写数据...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    V(wsem)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    P(y)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    WriteCount--&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(WriteCount == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) V(rsem)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    V(y)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;问题3：哲学家就餐问题&quot;&gt;&lt;a href=&quot;#问题3：哲学家就餐问题&quot; class=&quot;headerlink&quot; title=&quot;问题3：哲学家就餐问题&quot;&gt;&lt;/a&gt;问题3：哲学家就餐问题&lt;/h3&gt;&lt;p&gt;哲学家就餐问题描述如下：&lt;/p&gt;
&lt;p&gt;有五个哲学家，他们的生活方式是交替地进行思考和进餐，哲学家们共用一张圆桌，分别坐在周围的五张椅子上，在圆桌上有五个碗和五支筷子，平时哲学家进行思考，饥饿时便试图取其左、右最靠近他的筷子，只有在他拿到两支筷子时才能进餐，进餐完毕，放下筷子又继续思考。&lt;/p&gt;
&lt;p&gt;约束条件&lt;br&gt;(1)只有拿到两只筷子时，哲学家才能吃饭。&lt;br&gt;(2)如果筷子已被别人拿走，则必须等别人吃完之后才能拿到筷子。&lt;br&gt;(3)任一哲学家在自己未拿到两只筷子吃饭前，不会放下手中拿到的筷子。&lt;br&gt;(4)用完之后将筷子返回原处&lt;/p&gt;
&lt;p&gt;分析：筷子是临界资源，每次只被一个哲学家拿到，这是互斥关系。如果筷子被拿走，那么需要等待，这是同步关系。&lt;/p&gt;
&lt;p&gt;容易想到一种错误的解法，所以设置一个信号量表示一只筷子，有5只筷子，所以设置5个信号量，哲学家每次饥饿时先试图拿左边的筷子，再试图拿右边的筷子，拿不到则等待，拿到了就进餐，最后逐个放下筷子。这种情况可能会产生死锁，因为我们不知道进程何时切换（这也是很多IPC问题的根本原因），如果5个哲学家同时饥饿，同时试图拿起左边的筷子，也很幸运地都拿到了，那么他们拿右边的筷子的时候都会拿不到，而根据第三个约束条件，都不会放下筷子，这就产生了死锁。《现代操作系统》中记载的一种解法是仅当一个哲学家左右的筷子都可用时，才拿起筷子，将“试图获取两个筷子”作为临界资源，用一个互斥量mutex实现对其的互斥控制，然后用n个变量记录哲学家的状态（饥饿，进餐，思考&amp;lt;可有可无，因为除了前两者以外只会思考&amp;gt;），然后用一个同步信号量数组，每个信号量对应一个哲学家，来保证哲学家得不到自己所需筷子的时候阻塞。算法如下：&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://images.cnitblog.com/blog2015/591194/201504/302312154437620.jpg&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

&lt;p&gt;还有一种解法是让奇数号与偶数号的哲学家拿筷子的先后顺序不同，以破坏环路等待条件。还可以只允许4个哲学家同时进餐（4个人都拿起一只筷子的时候，第5个人不能再拿筷子，这样就会空出一只筷子）&lt;/p&gt;
&lt;h2 id=&quot;例子分析&quot;&gt;&lt;a href=&quot;#例子分析&quot; class=&quot;headerlink&quot; title=&quot;例子分析&quot;&gt;&lt;/a&gt;例子分析&lt;/h2&gt;&lt;p&gt;至此，我们已经可以总结出一点用信号量解决同步互斥问题的基本规律和一般步骤：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（1）分析各进程间的制约关系，从而得出同步与互斥关系&lt;br&gt;（2）根据（1）中的分析，设置信号量&lt;br&gt;（3）编写伪代码，实施P,V操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;同步：多个进程在执行次序上的协调，相互等待消息&lt;br&gt;互斥：对临界资源的使用&lt;/p&gt;
&lt;p&gt;要注意的是，&lt;strong&gt;虽然P,V操作在每一个进程中都是成对出现的，但不一定是针对一个信号量。互斥信号量的P,V操作总是出现在一个进程中的临界区的前后，而同步信号量的P,V操作总是出现在具有同步关系的两个进程中，需要等待消息的一方执行P操作，发出消息的一方执行V操作。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下面通过诸多例题来熟悉，掌握及训练用信号量解决同步与互斥问题的一般方法。&lt;/p&gt;
&lt;h3 id=&quot;问题4：放水果问题&quot;&gt;&lt;a href=&quot;#问题4：放水果问题&quot; class=&quot;headerlink&quot; title=&quot;问题4：放水果问题&quot;&gt;&lt;/a&gt;问题4：放水果问题&lt;/h3&gt;&lt;p&gt;桌上有一空盘，最多允许存放一只水果。爸爸可向盘中放一个苹果，妈妈可向盘中放一个桔子。&lt;br&gt;儿子专等吃盘中的桔子，女儿专等吃苹果。&lt;br&gt;试用P、V操作实现爸爸、妈妈、儿子、女儿四个并发进程的同步。&lt;/p&gt;
&lt;p&gt;分析：临界资源是盘子，放的时候不能取，取的时候不能放，取的时候不能再取。同步关系：爸爸、妈妈与盘子为空，儿子与盘中有桔，女儿与盘中有苹果。&lt;/p&gt;
&lt;p&gt;所以设置一个mutex互斥信号量来控制对盘子的访问，用empty，orange，apple分别代表以上同步关系。程序如下：&lt;br&gt;&lt;figure class=&quot;highlight hsp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Semaphore mutex = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Semaphore empty = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, orange = apple = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mother:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P(empty)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P(mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//放入桔子&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V(mutex)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V(orange)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;father:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P(empty)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P(mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//放入苹果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V(mutex)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V(apple)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;son:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P(orange)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P(mutex)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//取桔子&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V(mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V(empty)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;daughter:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P(apple)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P(mutex)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//取苹果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V(mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V(empty)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;问题5：读文件问题&quot;&gt;&lt;a href=&quot;#问题5：读文件问题&quot; class=&quot;headerlink&quot; title=&quot;问题5：读文件问题&quot;&gt;&lt;/a&gt;问题5：读文件问题&lt;/h3&gt;&lt;p&gt;四个进程A、B、C、D都要读一个共享文件F，系统允许多个进程同时读文件F。但限制是进程A和进程C不能同时读文件F，进程B和进程D也不能同时读文件F。为了使这四个进程并发执行时能按系统要求使用文件，现用P、V操作进行管理。&lt;/p&gt;
&lt;p&gt;分析：互斥关系：A和C读文件时互斥，B和D读文件时互斥，没有同步关系。&lt;/p&gt;
&lt;p&gt;所以设置两个互斥信号量：AC_mutex,BD_mutex即可。伪代码如下：&lt;br&gt;&lt;figure class=&quot;highlight gcode&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Semaphore AC_mutex = BD_mutex = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;A:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;(1)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P&lt;span class=&quot;comment&quot;&gt;(AC_mutex)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//read F&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V&lt;span class=&quot;comment&quot;&gt;(AC_mutex)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;B:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;(1)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P&lt;span class=&quot;comment&quot;&gt;(BD_mutex)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//read F&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V&lt;span class=&quot;comment&quot;&gt;(BD_mutex)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;(1)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P&lt;span class=&quot;comment&quot;&gt;(AC_mutex)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//read F&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V&lt;span class=&quot;comment&quot;&gt;(AC_mutex)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;D:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;(1)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P&lt;span class=&quot;comment&quot;&gt;(BD_mutex)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//read F&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V&lt;span class=&quot;comment&quot;&gt;(BD_mutex)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;问题6：阅览室问题-图书馆问题&quot;&gt;&lt;a href=&quot;#问题6：阅览室问题-图书馆问题&quot; class=&quot;headerlink&quot; title=&quot;问题6：阅览室问题 / 图书馆问题&quot;&gt;&lt;/a&gt;问题6：阅览室问题 / 图书馆问题&lt;/h3&gt;&lt;p&gt;有一阅览室，读者进入时必须先在一张登记表上进行登记，该表为每一座位列一表目，包括座号和读者姓名。读者离开时要消掉登记信号&lt;br&gt;，阅览室中共有100个座位。用PV操作控制这个过程。&lt;/p&gt;
&lt;p&gt;分析：&lt;/p&gt;
&lt;p&gt;由于每个读者都会进行一样的操作：登记-&amp;gt;进入-&amp;gt;阅读-&amp;gt;撤销登记-&amp;gt;离开，所以建立一个读者模型即可。&lt;br&gt;临界资源有：座位，登记表&lt;br&gt;读者间有座位和登记表的互斥关系，所以设信号量empty表示空座位的数量，初始为100，mutex表示对登记表的互斥访问，初始为1。&lt;/p&gt;
&lt;p&gt;P,V操作如下：&lt;br&gt;&lt;figure class=&quot;highlight gcode&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Semaphore mutex = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, empty = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Reader&lt;span class=&quot;comment&quot;&gt;()&lt;/span&gt;：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;While&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;(true)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    P&lt;span class=&quot;comment&quot;&gt;(empty)&lt;/span&gt;           &lt;span class=&quot;comment&quot;&gt;//申请空座位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    P&lt;span class=&quot;comment&quot;&gt;(mutex)&lt;/span&gt;           &lt;span class=&quot;comment&quot;&gt;//申请登记表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//登记  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    V&lt;span class=&quot;comment&quot;&gt;(mutex)&lt;/span&gt;           &lt;span class=&quot;comment&quot;&gt;//释放登记表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//进入阅读&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    P&lt;span class=&quot;comment&quot;&gt;(mutex)&lt;/span&gt;            &lt;span class=&quot;comment&quot;&gt;//申请登记表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//撤销登记&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    V&lt;span class=&quot;comment&quot;&gt;(mutex)&lt;/span&gt;            &lt;span class=&quot;comment&quot;&gt;//释放登记表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    V&lt;span class=&quot;comment&quot;&gt;(empty)&lt;/span&gt;            &lt;span class=&quot;comment&quot;&gt;//释放座位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;问题7：单行道问题&quot;&gt;&lt;a href=&quot;#问题7：单行道问题&quot; class=&quot;headerlink&quot; title=&quot;问题7：单行道问题&quot;&gt;&lt;/a&gt;问题7：单行道问题&lt;/h3&gt;&lt;p&gt;一段双向行驶的公路，由于山体滑坡，一小段路的一般车道被阻隔，该段每次只能容纳一辆车通过，一个方向的多个车辆可以紧接着通过，试用P,V操作控制此过程。&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://images.cnitblog.com/blog2015/591194/201505/010058320368735.jpg&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

&lt;p&gt;分析：&lt;br&gt;临界资源为一半被阻隔的一小段区域，所以需要Go_mutex,Come_mutex来控制每个方向车辆通过该路段，以及实现两个方向的同步关系，同步关系即为：当某方向已有车辆在通行时，另一方向的车辆必须等待，反之亦然。类似于读者-写者问题，车辆从两边通过相当于两个读者，我们设立两个计数器A和B分别代表两个方向的汽车数量，还要设置两个信号量A_mutex和B_mutex来实现对计数器的互斥访问，因为山体滑坡处只允许一辆车通过，所以还需设置一个互斥量mutex保证相同方向的车辆依次通过该处。&lt;/p&gt;
&lt;p&gt;于是程序如下（PV操作包含其中）：&lt;br&gt;&lt;figure class=&quot;highlight hsp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &amp;lt;Windows.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; N &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; TRUE &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;typedef &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; Semaphore&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Semaphore A = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, B = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HANDLE Go_mutex,Come_mutex&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HANDLE A_mutex,B_mutex&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HANDLE mutex&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void down(HANDLE handle) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    WaitForSingleObject(handle, INFINITE)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void up(HANDLE handle) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ReleaseSemaphore(handle, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, NULL)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DWORD WINAPI Come(LPVOID v) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(TRUE) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        down(Come_mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        down(A_mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        A = A+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(A == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            down(Go_mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            printf(&lt;span class=&quot;string&quot;&gt;&quot;                    &amp;lt;&amp;lt;&amp;lt;=====开始自东向西\n&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        up(A_mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        up(Come_mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        down(mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//自东向西通过该路段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        printf(&lt;span class=&quot;string&quot;&gt;&quot;                    &amp;lt;&amp;lt;&amp;lt;=====第%s辆车\n&quot;&lt;/span&gt;,(char *)v)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        printf(&lt;span class=&quot;string&quot;&gt;&quot;         END        &amp;lt;&amp;lt;&amp;lt;=====第%s辆车\n&quot;&lt;/span&gt;,(char *)v)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        up(mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        down(A_mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        A = A&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(A == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            up(Go_mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            printf(&lt;span class=&quot;string&quot;&gt;&quot;                    自东向西的所有车辆行驶完毕\n&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        up(A_mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Sleep(&lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DWORD WINAPI Go(LPVOID v) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(TRUE) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        down(Go_mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        down(B_mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        B = B+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(B == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            down(Come_mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            printf(&lt;span class=&quot;string&quot;&gt;&quot;开始自西向东====&amp;gt;\n&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        up(B_mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        up(Go_mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        down(mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//自西向东通过该路段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        printf(&lt;span class=&quot;string&quot;&gt;&quot;第%s辆车=====&amp;gt;&amp;gt;&amp;gt;\n&quot;&lt;/span&gt;,(char *)v)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        printf(&lt;span class=&quot;string&quot;&gt;&quot;第%s辆车=====&amp;gt;&amp;gt;&amp;gt;     END\n&quot;&lt;/span&gt;,(char *)v)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        up(mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        down(B_mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        B = B&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(B == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            up(Come_mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            printf(&lt;span class=&quot;string&quot;&gt;&quot;自西向东的所有车辆行驶完毕\n&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        up(B_mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Sleep(&lt;span class=&quot;number&quot;&gt;2000&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; main()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DWORD Tid&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    char AThread[&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    char BThread[&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mutex      = CreateSemaphore(NULL, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, NULL)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    A_mutex    = CreateSemaphore(NULL, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, NULL)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    B_mutex    = CreateSemaphore(NULL, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, NULL)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Go_mutex   = CreateSemaphore(NULL, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, NULL)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Come_mutex = CreateSemaphore(NULL, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, NULL)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;i&amp;lt;4;i++) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AThread[i][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;+&lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AThread[i][&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CreateThread(NULL,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,Come,AThread[i],&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&amp;amp;Tid)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;i&amp;lt;8;i++) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BThread[i][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;+&lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BThread[i][&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CreateThread(NULL,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,Go,BThread[i],&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&amp;amp;Tid)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Sleep(&lt;span class=&quot;number&quot;&gt;20000&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行结果：&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://images0.cnblogs.com/blog2015/591194/201505/241529590481971.png&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

&lt;p&gt;从其中可以看出，车辆正常交替顺序通过该路段。数字重复出现是因为线程被重复地调度执行。&lt;/p&gt;
&lt;h3 id=&quot;问题8：理发师问题&quot;&gt;&lt;a href=&quot;#问题8：理发师问题&quot; class=&quot;headerlink&quot; title=&quot;问题8：理发师问题&quot;&gt;&lt;/a&gt;问题8：理发师问题&lt;/h3&gt;&lt;p&gt;理发店理有一位理发师、一把理发椅和n把供等候理发的顾客坐的椅子 如果没有顾客，理发师便在理发椅上睡觉。 一个顾客到来时，它必须叫醒理发师，如果理发师正在理发时又有顾客来到，则如果有空椅子可坐，就坐下来等待，否则就离开。用PV操作管理该过程。&lt;/p&gt;
&lt;p&gt;分析：&lt;/p&gt;
&lt;p&gt;法1：首先设置一个count表示等待的人数（包括理发椅上的那个人），初值为0，以供后来者判断是否应该离开。同时对count的访问要保证互斥，所以设置mutex信号量来保证互斥，初值为1。&lt;br&gt;临界资源：凳子，理发椅。 分别设置waitchair,barchair信号量，初值分别为n和1，表示临界资源数量。&lt;br&gt;同步关系：顾客和理发师之间有同步关系，用ready和done信号量来表示，初值均为0，ready表示顾客有没有准备好，done表示理发师是否完成一次理发。&lt;br&gt;注意：&lt;strong&gt;并非每一个进程都需要while(1)无限循环，比如此例，顾客剪完一次头发就走了，不可能马上再来剪，而以前的生产者-消费者不同，他们都是可以不断生产消费的。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;写出P,V操作如下：&lt;br&gt;&lt;figure class=&quot;highlight hsp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Semaphore waitchair = n&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Semaphore barchair = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Semaphore ready = done = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; count = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Semaphore mutex = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;barber:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P(ready)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        理发&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V(done)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;consumer:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    P(mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(count &amp;lt;= n) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        count = count + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V(mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V(mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        离开&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    P(waitchair)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    P(barchair)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    V(waitchair)&lt;span class=&quot;comment&quot;&gt;;   //离开等待椅去理发椅需要释放等待椅!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    V(ready)&lt;span class=&quot;comment&quot;&gt;;       //准备好了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    P(done)&lt;span class=&quot;comment&quot;&gt;;        //等待理发完成&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    V(barchair)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    P(mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    count = count - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    V(mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    离开&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;法2：将凳子和理发椅看做同一种资源，因为只要理发椅空就一定会有人凑上去，所以相当于每个位置都是理发椅，理发师只需要去每个有人的座位理发即可。&lt;br&gt;还是设置count表示正在理发店中的人数，以便决定后来者是否离开。&lt;br&gt;同步关系仍用ready和done来表示。&lt;/p&gt;
&lt;p&gt;算法：&lt;br&gt;&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Semaphore ready = done = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int &lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Semaphore mutex = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;barber:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    while(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P(ready)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        理发&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V(done)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;consumer:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    P(mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(&lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt; &amp;lt;= n) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V(mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        V(mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        离开&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    V(ready)&lt;span class=&quot;comment&quot;&gt;;       //准备好了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    P(done)&lt;span class=&quot;comment&quot;&gt;;        //等待理发完成&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    P(mutex)&lt;span class=&quot;comment&quot;&gt;;      //也可由理发师来做count-1的操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    V(mutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    离开&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;好了，先说这么多，例题会持续更新增加，感兴趣的朋友可以关注下。&lt;br&gt;鄙人学力有限，有不足或错误之处敬请指出，不胜感激。&lt;/p&gt;
&lt;h2 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;&gt;&lt;/a&gt;参考文献&lt;/h2&gt;&lt;p&gt;1.《现代操作系统》           –Andrew S. Tanenbaum&lt;br&gt;2.《操作系统设计与实现》 –Andrew S. Tanenbaum&lt;br&gt;3.《操作系统精髓与设计原理》  –Strling&lt;br&gt;4.《2015操作系统高分笔记》  –刘泱主编&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本篇也是一篇老文，发布于2015年5月，文章比较长，算老博客看的比较多的了，贴到这儿与大家分享，以求多多交流探讨。&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;现代操作系
    
    </summary>
    
      <category term="计算机相关 | CS.Related" scheme="http://whatbeg.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3-CS-Related/"/>
    
    
      <category term="CS" scheme="http://whatbeg.com/tags/CS/"/>
    
  </entry>
  
  <entry>
    <title>Deep Learning读书笔记系列 写作计划</title>
    <link href="http://whatbeg.com/2017/02/27/deeplearning0.html"/>
    <id>http://whatbeg.com/2017/02/27/deeplearning0.html</id>
    <published>2017-02-27T14:48:25.000Z</published>
    <updated>2017-03-30T12:01:05.083Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;之前看了一些Bengio的《Deep Learning》，有许多收获和感触，但是由于缺乏回顾，反思与实践加以消化，许多东西已经忘记了，借这个契机，想写一套专门阐述自己阅读Deep Learning及Machine Learning相关资料的阅读心得或者读书笔记的文章，文章不拘深浅，不拘长短，只求能够阐述出自己的心得收获，便于加深理解，如果能够把一件事情讲明白，那就不会那么轻易地忘记了，知识在脑子里也会更加成系统，不然老是东一点西一点，拣了芝麻丢了西瓜，或是狗熊掰棒子，一路掰一路扔。&lt;br&gt;其次，实践也很重要，光看书始终是纸上谈兵，只有实实在在地利用深度学习去做一些事情，实现了某些效果，那样的感受才会更深切。总而言之，知行合一很重要。&lt;br&gt;当然，文章也不仅仅局限于对Bengio的《Deep Learning》的读书笔记，也包括相关书籍，文章，论文，也不必局限于DL这一个子领域，适当拓展到Machine Learning也是可以的。&lt;br&gt;虽然计划着，却仍有两个忧虑，一是怕没有时间，二是实在才疏学浅，写的浅不要紧，怕就怕出错，闹出笑话还误了读者朋友们，那可是要被骂惨的。但是反过来又提醒自己，“怕什么真理无穷，进一寸有进一寸的欢喜”，没时间不要紧，一点一滴慢慢做就是了，二一个实在有不妥之处相比读者们也会提出来的，所以就不要脸【捂脸】的先忽略这两个问题。&lt;/p&gt;
&lt;h2 id=&quot;写作计划&quot;&gt;&lt;a href=&quot;#写作计划&quot; class=&quot;headerlink&quot; title=&quot;写作计划&quot;&gt;&lt;/a&gt;写作计划&lt;/h2&gt;&lt;p&gt;写作计划暂时包括但不限于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://whatbeg.com/2017/03/29/deeplearningbook-01.html&quot;&gt;Deep Learning读书笔记（1）【开篇】&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Deep Learning读书笔记（2）–数学基础简摘&lt;/li&gt;
&lt;li&gt;Deep Learning读书笔记（3）–数值计算&lt;/li&gt;
&lt;li&gt;Deep Learning读书笔记（4）–机器学习基础&lt;/li&gt;
&lt;li&gt;Deep Learning读书笔记（5）–关于机器学习的提纲（或机器学习总论）&lt;/li&gt;
&lt;li&gt;Deep Learning读书笔记（6）–神经网络&lt;/li&gt;
&lt;li&gt;Deep Learning读书笔记（7）–DL的优化&lt;/li&gt;
&lt;li&gt;Deep Learning读书笔记（8）–DL的正则化&lt;/li&gt;
&lt;li&gt;Deep Learning读书笔记（9）–实践方法论&lt;/li&gt;
&lt;li&gt;Deep Learning读书笔记（10）–DL前沿&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;计划1年时间完成，即2018年3月1日前完成，希望能够有始有终，千万不要烂尾。。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;之前看了一些Bengio的《Deep Learning》，有许多收获和感触，但是由于缺乏回顾，反思与实践加以消化，许多东西已经忘记了，借这个
    
    </summary>
    
      <category term="深度学习 | Deep Learning" scheme="http://whatbeg.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-Deep-Learning/"/>
    
    
      <category term="深度学习" scheme="http://whatbeg.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="机器学习" scheme="http://whatbeg.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>《暗时间》读书笔记</title>
    <link href="http://whatbeg.com/2017/02/20/darktime.html"/>
    <id>http://whatbeg.com/2017/02/20/darktime.html</id>
    <published>2017-02-20T07:57:39.000Z</published>
    <updated>2017-02-20T08:02:51.020Z</updated>
    
    <content type="html">&lt;p&gt;去年冬天在机缘巧合之下，开始阅读刘未鹏老师的这本《暗时间》，受益良多，得到了很多启发，觉得应该做做读书笔记，方不枉费读书的功夫。&lt;/p&gt;
&lt;p&gt;总的来说，《暗时间》是一本关于思维，学习的本质知识以及解题，如何解题等的一些想法，第一原则就是为了帮助读者提高思维能力，培养思考的习惯，从而能够充分利用我们身边的“暗时间”，在同样的生命中获得更多的收获。&lt;/p&gt;
&lt;p&gt;书中一些要点摘录如下，并做了自己的一些思考总结，以备翻看。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;说到对某件事投入时间，实际投入的是时间与效率的乘积&lt;/strong&gt;&lt;br&gt;不是说投入的绝对时间越多，收获就越多，进步就越大。即使程序员有时整天面对着电脑，但是如果心没有静下来，这里翻翻那里看看，这样的时间的效率就很低，基本上就算浪费了。所以说，专注地做1个小时事情可能比得上在那盲目地坐一下午强得多，这就是为什么有些人看似很努力，却得不到很好地效果的原因之一吧。记得有位大师说过，一个人一天只能够全神贯注的工作最多4个小时，这一天的绝大部分收获也在这4个小时，所以，并不是“显得很努力”就是最好的，与其在“无效时间”里面耗费精力做着各种“无聊”的事，倒不如对睡觉养足精神来的好。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;把要做的事情，要学习的东西，常驻脑中，利用“暗时间”（即我们做很多琐事的时间）去反刍与消化。&lt;/strong&gt;&lt;br&gt;书中指的暗时间包括吃饭，睡前，行走，上厕所等等琐碎的时间，在这段时间如果有一个问题在脑中，利用这些时间去思考这个问题，这些知识，就相当于有了比别人更加“充足”的时间，并且也增加了对该问题，该知识的深入，多角度思考，一举两得。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;任务切换是有开销的，所以专注很重要。能不能做到高效学习，关键在于能不能够迅速进入专注状态以及能够保持专注状态多久。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;设计自己的进度条，避免看不到尽头而产生放弃的心理。&lt;/strong&gt;&lt;br&gt;我们生活中很多事情都是三分钟热度，一个重要原因就是，我们在开始做某件事情后，发现“啥时候是个头啊”，看不到完成的希望，看不到达成目标的激励，让我们萌生放弃的想法。举个例子来说，去年我有一段很长的空闲时间，正好那时候有个很火的韩剧播出，于是我就决定去学学韩语，也坚持了一段时间，也享受过一点点进步的喜悦，看到电视剧中的很多句子居然能够听懂一些了，非常兴奋，但是当那个韩剧播完的时候，我渐渐的就提不起精神去学了，一大原因就是缺少了直接的激励，也没有什么明确地目标，或者进度条的概念，总觉得还有好多要学啊，加之别的事情又来了，于是就渐渐地扔下了。如果说真的确定要学，并且学好的话，我就可以定一个目标，比如说多久以后达到TOPIK多少级，然后定期地测试自己的学习成果，那么应该在这条路上会走的更远吧。归根结底，人类看不到激励的时候总是容易放弃，这是人的本性之一，所以说没有坚持有时候不是你自制力的问题，而是知识的问题，即你是否知道这一人类的本性，并且采取办法去抵抗这一本性，引导你的本性的问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;过早退出是一切失败的根源。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;兴趣遍地都是，真正稀缺的是专注和持之以恒。&lt;/strong&gt;&lt;br&gt;世界上有趣的东西很多，有好奇心的人也非常多，所有有很多兴趣是很正常的，也是很好的，这至少说明你对这个世界还抱有很多好奇心，可是只有一定的持之以恒才能真正把一份兴趣变成爱好，再加上一份专注，才能使之真正变成一份技能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;饿死在干草堆中的驴子。&lt;/strong&gt;&lt;br&gt;我们常常会进入一种焦虑状态，有时间，可以做的也很多，可是难以选择，做这个有这个的好处，做那个有那个的好处，然而两个没法兼顾，所以我们会一直纠结，然后时间过去了。。就像一只驴子，有很多干草，它却一直在纠结吃哪堆，结果饿死了。这时候唯一的方法就是通过自己的判断，迅速选择一件事，做下去再说，即使最后发现并不是你最想做的，或者说走了弯路，也不会白做，总会比在纠结焦虑中把时间消耗掉要强得多。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;记忆时，抽象出来得到范围更广的知识，来理解记忆，解决问题是，抽象出本质，便于找到解决方法。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;经常回顾所学知识，不管什么方式，最好能够抽象，推广和举一反三。&lt;/strong&gt;&lt;br&gt;常常回顾才能够逐渐融入到自己的知识结构中去，不然学完很快就忘了，就失去了这个知识的联想，遇到这方面问题时便想不起来学过的那个知识了，只有不断地捡起来，捡的多了，慢慢就内化了。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;让思考成为习惯，时刻有一个问题在脑中。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;趁着有热情，一股脑儿把开头熬过去。&lt;/strong&gt;&lt;br&gt;万事开头难，结束似乎也不容易。就算把开头熬过去，也不见得会将这件事坚持下去，但是熬过这段最难的开头，似乎对接下来的“熬”有帮助作用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;重要的事情优先，无关紧要的琐事能不做就不做。&lt;/strong&gt;&lt;br&gt;节省精力，节省精力，节省精力，重说三，把精力花费在真正重要的事情上，产生更大的价值，当然，适当的娱乐和消遣也是必要。听老人们说，长寿的秘诀在于少操心。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;根据主题来查阅资料，而非反之。&lt;/strong&gt;&lt;br&gt;有两种解决问题或者学习的方式，一种是先把书过一遍，再看是否应用在这个问题上，一个问题可能关联很多知识，所以可能要看的书很多；另一种是先去做，遇到不会的才去看书，找这方面的知识帮助解决问题。第一种对于解决特定问题来说时间消耗有点大，除非是希望在这方面精通的，这时可以广泛地涉猎这方面的书籍，否则，为了解决一个问题要从基本理论学期也太慢了。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;带着问题学习。&lt;/strong&gt;&lt;br&gt;不错的学习方式，值得尝试。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;有选择的阅读，而不是逐字逐句。&lt;/strong&gt;&lt;br&gt;不要做读书的强迫症，有些时候并不需要逐字逐句看完，生命宝贵。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;失败即成功，成功即失败。&lt;/strong&gt;&lt;br&gt;即使失败，却能够带来不少的信息，带来经验与教训，有利于下一次的实践。&lt;br&gt;而有时候太顺利的成功却会让我们忽略掉过程中的许多重要的点，并不是一件特别好的事。&lt;br&gt;把这个“成功”放到世俗意义上来讲，成功者在成功之后可能获得了丰厚的财富或者名誉或者权力，但是他背负的东西也更多了，责任也更多了，手脚逐渐被束缚起来，于是，许多成功者在成功之后也就逐渐变得“平庸”，所以也可以说，“成功即失败”。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;从别人的错误中学习。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;客观意味着承认存在未知信息的可能性，理性意味着能够从对立面的视角去看问题和思考。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;改变即有的习惯，依靠的不是自制力，而是知识。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;持续学习和思考，只写你真正思考和总结之后的产物，其他的一切都会随之而来。（博客）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;困难的路越走越容易，容易的路越走越困难，遇到问题不必急着找捷径，在自己解决的过程中可能会有意想不到的收获。&lt;/strong&gt;&lt;br&gt;就像做题不会不要急着看答案，自己找找方法，多琢磨琢磨，收获可能比较大。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;个人核心竞争力是指自己独特的个性，背景，知识和经验的组合，如果这种组合 1)绝无仅有 2)在实践中有价值 3)具有可持续发展性，那么这就是核心竞争力。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;专业技能，跨领域技能，学习能力，性格要素（专注，持之以恒，好奇心，自省，自信，谦卑）。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;“我是不是已经掌握了这个知识最深刻最本质的东西？”。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;手中有锤，心中无锤。&lt;/strong&gt;&lt;br&gt;看到问题，分析问题，再找解决问题的“锤子”（方法），而不是方法去套问题。**&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;理解本质才能做到难以忘却。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;已知-&amp;gt;可知， 结论-&amp;gt;须知， 寻找可知与须知的结合点，就能实现成功解决问题。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;去年冬天在机缘巧合之下，开始阅读刘未鹏老师的这本《暗时间》，受益良多，得到了很多启发，觉得应该做做读书笔记，方不枉费读书的功夫。&lt;/p&gt;
&lt;p&gt;总的来说，《暗时间》是一本关于思维，学习的本质知识以及解题，如何解题等的一些想法，第一原则就是为了帮助读者提高思维能力，培养思考的
    
    </summary>
    
      <category term="读书 | Reading" scheme="http://whatbeg.com/categories/%E8%AF%BB%E4%B9%A6-Reading/"/>
    
    
      <category term="读书" scheme="http://whatbeg.com/tags/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>关于KMP算法的本质之思考</title>
    <link href="http://whatbeg.com/2017/02/18/kmpreview.html"/>
    <id>http://whatbeg.com/2017/02/18/kmpreview.html</id>
    <published>2017-02-18T09:47:43.000Z</published>
    <updated>2017-02-18T09:51:41.659Z</updated>
    
    <content type="html">&lt;p&gt;以前看KMP算法的时候，总是无法理解next函数以及next函数的求法以及匹配时j=next[j]的做法的直观意义。这次看《暗时间》这本书的时候谈到一个知识的本质问题，有提到KMP，于是就想着能不能够从本质的角度出发去重新理解下KMP呢？&lt;/p&gt;
&lt;p&gt;KMP的本质是什么？或者说，这个算法做了什么？以前的确从来没有问过自己这个问题。或许是习惯于在书上扫一眼KMP是干嘛的，具体怎么操作，怎么用，下次做字符串匹配时套一下模板就好了。但是现在，我要试着探寻一下KMP的内在本质。&lt;/p&gt;
&lt;p&gt;上面的问题不难回答，KMP是用来做字符串匹配的，但是，这个答案还不够完善，应该说KMP是能够在O(n+m)时间内完成字符串匹配的一个算法。后者强调了KMP的高效性，相比于朴素的字符串匹配中O(nm)的复杂度，这是一个巨大的提升。&lt;/p&gt;
&lt;p&gt;这里我不打算详述KMP算法过程，&lt;a href=&quot;http://www.ruanyifeng.com/blog/2013/05/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;字符串匹配的KMP算法. 阮一峰&lt;/a&gt;这篇文章讲解得非常清楚，其实这篇文章是我认为所有的网上博文中解释最通俗易懂的。当然，我在这次的理解中配合了&lt;a href=&quot;http://blog.csdn.net/u011564456/article/details/20862555?utm_source=tuicool&amp;amp;utm_medium=referral&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文章1&lt;/a&gt;和&lt;a href=&quot;http://blog.csdn.net/yutianzuijin/article/details/11954939/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文章2&lt;/a&gt;来完成理解。&lt;/p&gt;
&lt;p&gt;假设原串为S，长度为n，我们需要看字符串f（长度为m）是否在S中。&lt;br&gt;总的来说，当我们朴素地去进行字符串匹配时，首先将S和f对齐，从头开始匹配过去，我们是发现到哪里不匹配了，就把f右移一位再从头开始一个一个匹配，这样每次移动一位是完全正确的但是不够快，事实上，如果匹配了一些，假如f的前m-1位与S中的一段完全匹配(m-1长)，这是一个很好的消息！但最后一位不匹配，如果朴素地右移一位再重新匹配的话，前面m-1位完全匹配的喜人消息会被完全抛弃，那么为什么不利用起来呢？所以说，KMP最本质的思想就在于，&lt;strong&gt;利用已有的一些信息，来加快解空间的搜索&lt;/strong&gt;。说起来很简单，但是大道至简，简单的道理却蕴含着巨大的能量。&lt;/p&gt;
&lt;p&gt;如何利用呢？盗一张图来说，我们希望找到如图所示的结构：&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/KMP1.png&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

&lt;p&gt;两块绿色的完全相等，这样的话我们移动f时就没必要一步一步移动了，可以直接像下面这样移动，&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/KMP2.png&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

&lt;p&gt;这样大大节省了时间。而next数组就是来找出这样的结构的。&lt;br&gt;比如f串为&lt;code&gt;ABCDABD&lt;/code&gt;，它的next数组如下：&lt;br&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;f    |  &lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt; B C D &lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt; B D&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;next | -&lt;span class=&quot;number&quot;&gt;1 0 0 0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;找出了两个对称的&lt;code&gt;AB&lt;/code&gt;，即如果匹配到最后的&lt;code&gt;D&lt;/code&gt;不匹配了，说明需要移动了，又因为&lt;code&gt;D&lt;/code&gt;之前的串有长度为2的后缀等于前缀，我们可以直接吧f的前缀移到后缀对齐的地方继续走，即&lt;br&gt;&lt;figure class=&quot;highlight autohotkey&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;移动长度=已匹配总长度-后缀的长度=已匹配长度-`D`对应的next值=&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/KMP3.png&quot; alt=&quot;&quot;&gt; &lt;/center&gt;&lt;br&gt;这也是代码中&lt;code&gt;j=next[j]&lt;/code&gt;的原因，上面那个例子中j=6，j=next[6]=2，说明下面一步就是，现在的i(i处为&lt;code&gt;C&lt;/code&gt;)和f的下标为j=2处的字符比较，即相当于右移了4位。&lt;/p&gt;
&lt;p&gt;一般的KMP核心算法包括以下两个部分：&lt;br&gt;&lt;figure class=&quot;highlight hsp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void getnext()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;next&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,j = &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(i&amp;lt;m&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(j == &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt; || b[i] == b[j])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;next&lt;/span&gt;[++i] = ++j&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            j = &lt;span class=&quot;keyword&quot;&gt;next&lt;/span&gt;[j]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; kmp()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,j = &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(i&amp;lt;n &amp;amp;&amp;amp; j&amp;lt;m)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(j == &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt; || a[i] == b[j])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i++,j++&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            j = &lt;span class=&quot;keyword&quot;&gt;next&lt;/span&gt;[j]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(j == m)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; i-j+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;按照上面的思路，就不难理解了。&lt;/p&gt;
&lt;p&gt;归根结底一句话，我们要充分利用已经做过的工作中的一些收获和经验，来促进现有问题的解决。抽象到最顶端，KMP就不仅仅是一种算法，更意味着一种解决问题的方式方法了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;以前看KMP算法的时候，总是无法理解next函数以及next函数的求法以及匹配时j=next[j]的做法的直观意义。这次看《暗时间》这本书的时候谈到一个知识的本质问题，有提到KMP，于是就想着能不能够从本质的角度出发去重新理解下KMP呢？&lt;/p&gt;
&lt;p&gt;KMP的本质是什么？
    
    </summary>
    
      <category term="算法 | Algorithm" scheme="http://whatbeg.com/categories/%E7%AE%97%E6%B3%95-Algorithm/"/>
    
    
      <category term="算法" scheme="http://whatbeg.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>TensorFlow白皮书阅读笔记</title>
    <link href="http://whatbeg.com/2017/01/11/tensorflowwhitepaper.html"/>
    <id>http://whatbeg.com/2017/01/11/tensorflowwhitepaper.html</id>
    <published>2017-01-11T06:48:19.000Z</published>
    <updated>2017-01-11T06:58:16.768Z</updated>
    
    <content type="html">&lt;p&gt;Martín Abadi, Ashish Agarwal, Paul Barham, Eugene Brevdo, Zhifeng Chen, Craig Citro, Gregory S. Corrado, Andy Davis,Jeffrey Dean, Matthieu Devin, Sanjay Ghemawat, Ian J. Goodfellow, Andrew Harp, Geoffrey Irving, Michael Isard,Yangqing Jia, Rafal Józefowicz, Lukasz Kaiser, Manjunath Kudlur, Josh Levenberg, Dan Mané, Rajat Monga, Sherry Moore,Derek Gordon Murray, Chris Olah, Mike Schuster, Jonathon Shlens, Benoit Steiner, Ilya Sutskever, Kunal Talwar, Paul A. Tucker, Vincent Vanhoucke, Vijay Vasudevan, Fernanda B. Viégas, Oriol Vinyals, Pete Warden, Martin Wattenberg, Martin Wicke, Yuan Yu, Xiaoqiang Zheng:&lt;br&gt;&lt;a href=&quot;https://arxiv.org/abs/1603.04467&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TensorFlow: Large-Scale Machine Learning on Heterogeneous Distributed Systems&lt;/a&gt;. (2015.11)&lt;/p&gt;
&lt;h2 id=&quot;编程模型与基本概念&quot;&gt;&lt;a href=&quot;#编程模型与基本概念&quot; class=&quot;headerlink&quot; title=&quot;编程模型与基本概念&quot;&gt;&lt;/a&gt;编程模型与基本概念&lt;/h2&gt;&lt;p&gt;TensorFlow的计算过程采用一张有向图（DAG）来描述，有向图由许多节点（nodes）构成，图代表了一个数据流（dataflow）计算过程，用户通常用某种前端语言(C++/Python)建立一个计算图，来执行某个过程。&lt;/p&gt;
&lt;p&gt;在TensorFlow图中，每个节点（node）可以有任意个输入，任意个输出，代表了一个操作的实例化，流过图中正常的边（edge）（从输出到输入）的值（Values）称为张量（Tensor），可以理解为任意维的array。有一些特殊的边，称为控制依赖（control dependencies），没有数据流过，表示节点与节点之间一种序关系，也即happens-before关系。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;操作(Operation)：一个操作代表一次抽象计算，有一个名字，还能有一个属性，所有的属性必须给定或者能够在图建立的时候就推断出来，属性的作用主要就是是操作在不同的张量类型上保持多态(?)&lt;/li&gt;
&lt;li&gt;核(Kernel)：操作的特殊实现，可以运行在一个特定设备上。&lt;/li&gt;
&lt;li&gt;会话(Session)：用户与TensorFlow系统交互的客户端程序，提供许多操作。主要是Run，即获取需要计算的输出，以及fed进来的输入，运行一次整个流图的计算，得到结果填入输出中。一般是对一个图启动一个Session，然后执行多次。&lt;/li&gt;
&lt;li&gt;变量(Variable)：大多数情况下，图是执行多次的，大多数的Tensor在一次执行后不会继续存活，然而变量(Variable)是一种特殊的操作，它返回一个到持久化可变张量(persistent mutable tensor)的句柄，就是说它的生命周期是整个图的计算过程。这样可以保证许多机器学习任务中参数的持续迭代改变。&lt;/li&gt;
&lt;li&gt;设备(device)：设备是TensorFlow的计算核心，每个worker负责一到多个设备，每个设备有一个名字，设备通常指的就是某个CPU或者GPU，它的命名方式有一定讲究，比如&lt;code&gt;/job:localhost/device:cpu:0&lt;/code&gt;等。&lt;/li&gt;
&lt;li&gt;张量(Tensor)：一种有类型的多维数组，元素类型包括大小为从 8 bit 到 64 bit 的带符号和无符号整型，IEEE 浮点数和双精度类型、复数类型和字符串类型（任意长的字节数组）。通过一个分配器来管理其后台存储(backing store)，且维持一个引用计数，在没有引用时释放。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Implementation&quot;&gt;&lt;a href=&quot;#Implementation&quot; class=&quot;headerlink&quot; title=&quot;Implementation&quot;&gt;&lt;/a&gt;Implementation&lt;/h2&gt;&lt;h3 id=&quot;单设备执行&quot;&gt;&lt;a href=&quot;#单设备执行&quot; class=&quot;headerlink&quot; title=&quot;单设备执行&quot;&gt;&lt;/a&gt;单设备执行&lt;/h3&gt;&lt;p&gt;单设备执行不用说了，一切都在本地，每个节点维护一个依赖计数，表示该节点的先序节点还有多少个没有执行，如果该计数为0，则将该节点放入准备队列ReadyQueue等待执行。&lt;/p&gt;
&lt;h3 id=&quot;多设备执行&quot;&gt;&lt;a href=&quot;#多设备执行&quot; class=&quot;headerlink&quot; title=&quot;多设备执行&quot;&gt;&lt;/a&gt;多设备执行&lt;/h3&gt;&lt;p&gt;多设备执行中，主要有两个复杂性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何分配哪个节点在哪台设备上计算？&lt;/li&gt;
&lt;li&gt;管理跨设备的数据通信&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;节点置放&quot;&gt;&lt;a href=&quot;#节点置放&quot; class=&quot;headerlink&quot; title=&quot;节点置放&quot;&gt;&lt;/a&gt;节点置放&lt;/h4&gt;&lt;p&gt;现在有一张计算图，TensorFlow需要将这些节点的计算放置到可用给的设备上，如何分配每个节点到具体的设备是要解决的问题。&lt;/p&gt;
&lt;p&gt;此版本的TensorFlow采用了一种模拟执行过程的启发式的cost model，即先模拟一遍图的执行过程，采用启发式贪心策略来分配。首先设备需要满足能够执行该node所需的操作，然后再谈分配的问题，在备选的设备中选取一个预计执行时间最小的设备，放置，然后进行下面的分配，当然在有控制依赖的时候还需要加以考虑。目前来说，&lt;strong&gt;置放算法还在进一步地研究优化&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&quot;设备间通信&quot;&gt;&lt;a href=&quot;#设备间通信&quot; class=&quot;headerlink&quot; title=&quot;设备间通信&quot;&gt;&lt;/a&gt;设备间通信&lt;/h4&gt;&lt;p&gt;TensorFlow采用Send节点和Receive节点来实现跨设备的数据交换。将设备A中a节点到设备B中b节点之间的边用send和recv的节点隔开，如图所示。&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/tensorflow1.png&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

&lt;p&gt;这使得我们将Send和Receive内部的通信机制与节点与节点之间的通信隔离开来。而且这种方式下，master只需要提出“任务”(通过Run)给workers，而无需管理workers之间的通信，这就相当于去中心化(decentralized)了，大大减小了master的负载。&lt;/p&gt;
&lt;p&gt;要注意的是，如果一台设备上的两个或多个tensor都依赖于另一台设备的某一个tensor，TensorFlow只使用一个Recv节点，参看上图右边的b,c。&lt;/p&gt;
&lt;h3 id=&quot;分布式执行&quot;&gt;&lt;a href=&quot;#分布式执行&quot; class=&quot;headerlink&quot; title=&quot;分布式执行&quot;&gt;&lt;/a&gt;分布式执行&lt;/h3&gt;&lt;p&gt;分布式执行非常像多设备执行，之中要解决容错的问题。&lt;/p&gt;
&lt;p&gt;错误主要发生在：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Send/Recv的通信错误&lt;/li&gt;
&lt;li&gt;周期性的保活检查(keep-alive)时&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果发生了错误，那么整个图会终止执行，并重启。如果简单地这样处理的话，那些正确计算好的节点就得重新计算，不高效，所以TensorFlow支持在重启过程中一致的检查点和状态恢复。&lt;br&gt;怎么实现的呢？&lt;br&gt;每个节点有一个到Save节点的连接，也被一个Restore节点所连接，周期性地执行Save，持久化变量到比如分布式文件系统等存储上。类似的，Restore节点负责在重启后的第一个迭代中恢复变量的值(或状态?)&lt;/p&gt;
&lt;h2 id=&quot;扩展&quot;&gt;&lt;a href=&quot;#扩展&quot; class=&quot;headerlink&quot; title=&quot;扩展&quot;&gt;&lt;/a&gt;扩展&lt;/h2&gt;&lt;p&gt;TensorFlow内嵌地支持自动梯度计算。&lt;/p&gt;
&lt;p&gt;在存储管理(memory management)，TensorFlow的作者们也在寻求提升的方法。一些可能的选项包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用更加复杂的启发式算法来决定图的执行顺序&lt;/li&gt;
&lt;li&gt;重新计算tensor而不用把他们保持在主存&lt;/li&gt;
&lt;li&gt;将长久存在的tensor从GPU memory中交换到更加丰富的主机CPU&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TensorFlow支持图的部分计算，如图：&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/tensorflow2.png&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

&lt;p&gt;显然，支持条件与循环会导致更加精确和高效地表示机器学习算法，TensorFlow提供了一些控制流操作原语包括Switch，Merge，Enter，Leave，NextIteration等。&lt;br&gt;每轮迭代由一个唯一的tag标识，执行状态由一个frame来表示，一个输入只要可用就可以进入一个迭代过程，因此，多个迭代可以并发地执行。&lt;/p&gt;
&lt;p&gt;尽管输入数据可以通过feed节点提供，另一个典型的训练大规模机器学习模型的机制是在图中采用特殊的输入操作节点(input operation nodes)，节点通过文件名配置，这使得工作节点可以直接从存储系统中将数据拿到内存。&lt;/p&gt;
&lt;p&gt;队列是很有用的一个特性，允许图的不同部分亦不知悉，按照不同的节奏通过Enqueue和Dequeue来处理数据。队列的一个用途是允许输入数据提前从文件中取出，此时并不耽误前一批数据的处理，更有效率。TensorFlow不仅实现了基本的FIFO队列，还实现了一个shuffling队列，可以随机shuffle一个大型内存buffer中的元素。&lt;/p&gt;
&lt;p&gt;容器是用来管理长期存在的可变状态的机制。默认的话，容器一直保持到进程结束。&lt;/p&gt;
&lt;h2 id=&quot;优化&quot;&gt;&lt;a href=&quot;#优化&quot; class=&quot;headerlink&quot; title=&quot;优化&quot;&gt;&lt;/a&gt;优化&lt;/h2&gt;&lt;p&gt;本部分描述了TensorFlow的实现过程中所做的一些优化，提升性能并且提高了资源的重用率。&lt;/p&gt;
&lt;p&gt;这些优化包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;消除公共子表达式&lt;/li&gt;
&lt;li&gt;控制数据通信与内存使用，调度优化是必要的且有效的&lt;/li&gt;
&lt;li&gt;异步核(?)&lt;/li&gt;
&lt;li&gt;核实现的优化库，cuDNN,cuda-convnet,cuBLAS等&lt;/li&gt;
&lt;li&gt;有损压缩。为了减少通信量，将一些浮点数的位数压缩，比如32位浮点数压缩到16位，通过损失一定精度换来跨机通信的高效。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;一些经验&quot;&gt;&lt;a href=&quot;#一些经验&quot; class=&quot;headerlink&quot; title=&quot;一些经验&quot;&gt;&lt;/a&gt;一些经验&lt;/h2&gt;&lt;p&gt;本部分介绍了作者们在移植/迁移机器学习模型（从一个系统到另一个系统）中的一些经验教训。&lt;/p&gt;
&lt;p&gt;包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对参数的个数有一个洞察&lt;/li&gt;
&lt;li&gt;从小（模型）开始逐步扩展&lt;/li&gt;
&lt;li&gt;保证目标函数的正确性&lt;/li&gt;
&lt;li&gt;先单机，再分布式&lt;/li&gt;
&lt;li&gt;防备数值错误/误差&lt;/li&gt;
&lt;li&gt;分析网络，理解数值误差的量级和容忍度。可以同时在两个系统中跑，看结果是否一致来判断有无数值误差/错误&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;数据并行，模型并行与并发步&quot;&gt;&lt;a href=&quot;#数据并行，模型并行与并发步&quot; class=&quot;headerlink&quot; title=&quot;数据并行，模型并行与并发步&quot;&gt;&lt;/a&gt;数据并行，模型并行与并发步&lt;/h2&gt;&lt;p&gt;TensorFlow关心的一大领域就是加速计算密集型的大规模神经网络的训练。本部分描述了一些方法。&lt;/p&gt;
&lt;h3 id=&quot;数据并行&quot;&gt;&lt;a href=&quot;#数据并行&quot; class=&quot;headerlink&quot; title=&quot;数据并行&quot;&gt;&lt;/a&gt;数据并行&lt;/h3&gt;&lt;p&gt;数据并行分为同步数据并行和异步数据并行。见图：&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/tensorflow3.png&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

&lt;p&gt;数据并行的意思是，用很多的模型副本，每个副本运行在不同的数据上，然后同时训练，更新模型。通过更新模型的方式不同，可以分为同步和异步，同步的方式是一个用户线程驱动整个大循环，如图上部，等到所有的$\Delta P$都算出来后，将它们相加去更新模型。而异步的方式不同，每个模型副本自己异步地对模型参数进行更新，不用等到所有的梯度算出来再更新，每个模型副本有一个用户线程。见图下部。&lt;/p&gt;
&lt;h3 id=&quot;模型并行和并发步-concurrent-steps&quot;&gt;&lt;a href=&quot;#模型并行和并发步-concurrent-steps&quot; class=&quot;headerlink&quot; title=&quot;模型并行和并发步(concurrent steps)&quot;&gt;&lt;/a&gt;模型并行和并发步(concurrent steps)&lt;/h3&gt;&lt;p&gt;模型并行的意思是，对于同样一批数据，模型计算的不同部分分散在不同的计算设备上同时进行。如图是一个循环深度LSTM用来做序列到序列学习的例子。(?)&lt;/p&gt;
&lt;p&gt;并发步是另一种通常的做法，即通过在同样的设备集合中运行少数的并发步来将同一设备中的模型计算流水线化。(?)&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/tensorflow4.png&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

&lt;h2 id=&quot;工具&quot;&gt;&lt;a href=&quot;#工具&quot; class=&quot;headerlink&quot; title=&quot;工具&quot;&gt;&lt;/a&gt;工具&lt;/h2&gt;&lt;p&gt;TensorBoard用来对计算图，总结信息和训练过程等进行可视化，方便观察训练过程。&lt;/p&gt;
&lt;p&gt;性能追踪(performance tracing)，了解哪些地方是瓶颈时间。EEG。&lt;/p&gt;
&lt;h2 id=&quot;未来工作&quot;&gt;&lt;a href=&quot;#未来工作&quot; class=&quot;headerlink&quot; title=&quot;未来工作&quot;&gt;&lt;/a&gt;未来工作&lt;/h2&gt;&lt;p&gt;未来工作包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;子图的重用，像函数一般&lt;/li&gt;
&lt;li&gt;置放算法与节点的调度，可能采用DNN和强化学习相结合来学习置放&lt;/li&gt;
&lt;li&gt;just-in-time compiler&lt;/li&gt;
&lt;li&gt;跨操作动态编译框架(cross-operation dynamic compilation framework)&lt;/li&gt;
&lt;li&gt;等等。。。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;总的来说，TensorFlow是一个基于数据流的编程模型，它在有足够内存来满足计算工作集时工作良好，但是速度相比于其它框架如MXNet还是显得太慢，以至于被人叫做“TensorSlow”，这些方面还需要加强。它是最火的框架但是并不是目前最优秀的框架，火起来的原因相当一部分是有谷歌这个爹。&lt;/p&gt;
&lt;p&gt;Reference: &lt;a href=&quot;http://www.jianshu.com/p/65dc64e4c81f&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Not_GOD译&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Martín Abadi, Ashish Agarwal, Paul Barham, Eugene Brevdo, Zhifeng Chen, Craig Citro, Gregory S. Corrado, Andy Davis,Jeffrey Dean, Matthie
    
    </summary>
    
      <category term="大数据系统与技术 | Big Data" scheme="http://whatbeg.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%B3%BB%E7%BB%9F%E4%B8%8E%E6%8A%80%E6%9C%AF-Big-Data/"/>
    
    
      <category term="深度学习" scheme="http://whatbeg.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="大数据" scheme="http://whatbeg.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="TensorFlow" scheme="http://whatbeg.com/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>Deep Learning论文阅读纪要（一）</title>
    <link href="http://whatbeg.com/2017/01/07/paperreading01.html"/>
    <id>http://whatbeg.com/2017/01/07/paperreading01.html</id>
    <published>2017-01-07T14:02:04.000Z</published>
    <updated>2017-01-10T08:18:27.701Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Deep-Learning-Review&quot;&gt;&lt;a href=&quot;#Deep-Learning-Review&quot; class=&quot;headerlink&quot; title=&quot;Deep Learning Review&quot;&gt;&lt;/a&gt;Deep Learning Review&lt;/h2&gt;&lt;p&gt;LeCun, Yann, Yoshua Bengio, and Geoffrey Hinton. “Deep learning.” Nature 521.7553 (2015): 436-444. &lt;a href=&quot;http://www.cs.toronto.edu/~hinton/absps/NatureDeepReview.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;传统机器学习方法在处理原始形式的自然数据时受限，需要繁杂的特征工程和大量的领域专家知识&lt;/li&gt;
&lt;li&gt;深度学习的核心在于它们用一个通用目标的学习过程来从数据中学习，无需手工做特征工程&lt;/li&gt;
&lt;li&gt;深度学习在发现高维数据的复杂结构上有一套&lt;/li&gt;
&lt;li&gt;应用方面，深度卷积网络在图像，视频，语音，音频方面，循环网络在序列数据比如文本，语音上取得了巨大突破&lt;/li&gt;
&lt;li&gt;虽然只需少量特征工程，但是需要计算能力和数据&lt;/li&gt;
&lt;li&gt;用小部分样本做SGD，这些小部分样本给出的（平均梯度）是整个样本集的平均梯度的噪声估计(noisy estimate)&lt;/li&gt;
&lt;li&gt;深度的增加使得对大量无关变量（比如图像中的背景，物体的位置等等）逐渐变得不敏感&lt;/li&gt;
&lt;li&gt;在实践中，“差的局部最小”(poor local minima)在大规模网络中一般不是问题。被困在哪个鞍点并不重要，因为他们离目标都很接近&lt;/li&gt;
&lt;li&gt;卷积神经网络的4个核心思想：局部连接，权值共享，池化和多层次&lt;/li&gt;
&lt;li&gt;共享参数是由于，在图像中，物体不论出现在哪个位置，都应该一样的看待，所以一种滤波器（卷积核）使用同样的权值来检测一种模式&lt;/li&gt;
&lt;li&gt;卷积网络(ConvNet)现在是几乎所有识别和检测任务中的最主要方法&lt;/li&gt;
&lt;li&gt;许多公司也在研发ConvNet芯片以实现视觉应用的实时处理，并且嵌入到设备中&lt;/li&gt;
&lt;li&gt;Neutral Turing Machine / Memory Network：用于需要推理和符号操作的任务，核心是推理！&lt;/li&gt;
&lt;li&gt;无监督学习，增强学习等是未来的趋势&lt;/li&gt;
&lt;li&gt;将深度学习与增强学习结合的系统正处于萌芽期，不过他们已经在分类任务中表现出了令人印象深刻的效果&lt;/li&gt;
&lt;li&gt;人工智能的巨大进步考表示学习与复杂推理的结合来推动&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文章讲述了深度学习中的一些关键性主题，包括监督学习，后向传播，卷积神经网络及其在图像理解上的应用，分布式表示和语言处理，以及循环神经网络，最后对深度学习的未来进行了探讨。&lt;br&gt;文章提交于2015年2月，距今约2年了，深度学习的江湖又发生了巨大的变化，单看这篇综述还不能够了解深度学习的方方面面，还需要更多的资料。&lt;/p&gt;
&lt;h2 id=&quot;Large-Scale-Distributed-Deep-Networks&quot;&gt;&lt;a href=&quot;#Large-Scale-Distributed-Deep-Networks&quot; class=&quot;headerlink&quot; title=&quot;Large Scale Distributed Deep Networks&quot;&gt;&lt;/a&gt;Large Scale Distributed Deep Networks&lt;/h2&gt;&lt;p&gt;Large Scale Distributed Deep Networks. Jeffrey Dean et al. &lt;a href=&quot;http://www.cs.toronto.edu/~ranzato/publications/DistBeliefNIPS2012_withAppendix.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PDF&lt;/a&gt; &lt;a href=&quot;http://wxwidget.github.io/blog/2014/08/17/large-scale-deep-network/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;中文译版&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分布式训练或者优化的一个难点在于各机器处理时间各异，有时候需要等最慢的机器运行完成&lt;/li&gt;
&lt;li&gt;SGD是训练深度神经网络最常用的优化过程了，但是在非凸的情况下就略显颓势了&lt;/li&gt;
&lt;li&gt;一种深度学习规模扩展的方法使，用一些GPU来训练许多小模型，将这些模型应用在数据是，将它们的预测结果平均&lt;br&gt;这篇文章对大规模分布式深度网络的训练框架内，提出了两个算法： Downpour SGD，一个支持大量模型副本的异步随机梯度下降过程，和Sandblaster L-BFGS，一个支持各种分布式批优化过程的框架，但是后者好像没什么大用，后面提到，“Sandblaster L-BFGS或许在30000个处理器的时候能够最后胜出”，暂时都用不到那么多的核，所以后面性能也没有测试结果，所以就不知道了，重点在于前面一个算法。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Downpour SGD的主要思想是，将训练集划分若干子集，并对每个子集运行一个单独的模型副本。模型副本之间的通信均通过中心参数服务器(parameter server, ps)组，该参数服务器组维护了模型参数的当前状态，并分割到多台机器上（例如，如果我们参数服务器组有10个节点，那么每个节点将负责存储和更新模型参数的1/10，如图1所示）。&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/downpoursgd.png&quot; alt=&quot;图1&quot;&gt; &lt;/center&gt;

&lt;p&gt;该方法在两个方面体现异步性：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;模型副本之间运行独立，在各自负责的数据集（子集）上独立运行&lt;/li&gt;
&lt;li&gt;参数服务器(parameter server)组各节点之间同样是独立的，PS片独立运行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;考虑Downpour SGD的一个最简单的实现，在处理每个mini-batch（译者注：小型批量）之前，模型副本都会向参数服务器请求最新的模型参数。因为DistBelief框架也是分布在多台机器上，所以其框架的每个节点只需和参数服务器组中包含和该节点有关的模型参数的那部分节点进行通信。在DistBelief副本获得更新后的模型参数后，运行一次mini-batch样本来计算参数的梯度，并推送到参数服务器，以用于更新当前的模型参数值。更新的频度也可以设置，在处理机器失效方面，Downpour SGD比标准（同步）SGD要鲁棒。对于同步SGD来讲，如果一台机器失效，整个训练过程将会延时；但是对于异步SGD来讲，如果某个模型副本的一台机器失效，其他模型副本仍然继续处理样本并更新参数服务器中的模型参数。&lt;br&gt;但是由于每个参数服务器只更新互斥的一部分参数，副本之间不会进行通信，因此可能会导致参数发散而不利于收敛。&lt;br&gt;另外一项能极大提高Downpour SGD鲁棒性的技术是使用Adagrad自适应学习速率方法。&lt;br&gt;通过这种结合，达到了最好的效果（最短的时间内达到了规定的准确率）。&lt;br&gt;Adagrad方法参见:&lt;br&gt;J. C. Duchi, E. Hazan, and Y. Singer. Adaptive subgradient methods for online learning and stochastic optimization. Journal of Machine Learning Research, 12:2121–2159, 2011.&lt;br&gt;中文版的论文翻译中有更详细的内容。&lt;/p&gt;
&lt;h2 id=&quot;A-Brief-Overview-of-Deep-Learning&quot;&gt;&lt;a href=&quot;#A-Brief-Overview-of-Deep-Learning&quot; class=&quot;headerlink&quot; title=&quot;A Brief Overview of Deep Learning&quot;&gt;&lt;/a&gt;A Brief Overview of Deep Learning&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://yyue.blogspot.jp/2015/01/a-brief-overview-of-deep-learning.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WEB&lt;/a&gt; by Ilya Sutskever. Jan 13, 2015&lt;/p&gt;
&lt;p&gt;文章论述了为什么深度学习是有效的并且强力的，以及深度学习模型的学习和泛化，然后给出了13条实践中训练深度学习模型的建议，摘其要点如下，作者用LDNN这个词来代替Deep Learning&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解决复杂问题我们需要强力的，可训练的模型，LDNN(Large Deep Neutral Network)满足这两个条件&lt;/li&gt;
&lt;li&gt;LDNNs learn computation, albeit a massively parallel computation with a modest number of steps&lt;/li&gt;
&lt;li&gt;有了指数级别的数据，任何模型都能够解决问题，但是不现实&lt;/li&gt;
&lt;li&gt;学习（Learning）意味着将有标记数据的信息表现在训练后的参数中&lt;/li&gt;
&lt;li&gt;作者提出了一个假设，neural network start their learning process by noticing the most blatant correlations between the input and the output(神经网络通过注意输入和输出之间最明显的相关性来开始他们的学习过程)&lt;/li&gt;
&lt;li&gt;Tip01: 获取大规模高质量的数据集&lt;/li&gt;
&lt;li&gt;Tip02: 处理成0均值，小方差，效果更佳&lt;/li&gt;
&lt;li&gt;Tip03: 采用minibatchs有效提高性能，降低过拟合，但是batch size不要太大(32,64,128)&lt;/li&gt;
&lt;li&gt;Tip04: gradient的正则化（gradient / batchsize）&lt;/li&gt;
&lt;li&gt;Tip05: 学习率的规划&lt;ul&gt;
&lt;li&gt;0.1是学习率的一个经典值&lt;/li&gt;
&lt;li&gt;用验证集来决定何时降低LR(Learning Rate)和何时早停&lt;/li&gt;
&lt;li&gt;如果验证集error不再降低，减小LR，可以降低过拟合（在这个标准上）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tip06: 监控update norm 和 weight norm之间的比率&lt;/li&gt;
&lt;li&gt;Tip07: 权值初始化&lt;ul&gt;
&lt;li&gt;随机初始化&lt;/li&gt;
&lt;li&gt;随机初始化对深度网络和循环网络非常重要&lt;/li&gt;
&lt;li&gt;浅层网络可以不考虑随机初始化问题，但深度网络需要&lt;/li&gt;
&lt;li&gt;尝试多种初始化方法，这份努力会得到回报&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tip08: 当训练LSTM或者RNN时，对梯度的norm采取硬约束，即对梯度的norm进行修剪&lt;/li&gt;
&lt;li&gt;Tip09: 数值梯度检验(Numerical gradient checking)，主要在Theano,Torch等自定义梯度计算的场景&lt;/li&gt;
&lt;li&gt;Tip10: 使用LSTM处理超长期依赖的时候，应将forget gate的bias设成较大的值&lt;/li&gt;
&lt;li&gt;Tip11: 数据增强，巧妙增加数据集样本，旋转，加噪声等&lt;/li&gt;
&lt;li&gt;Tip12: dropout有效提升性能，且训练越久变得越来越好&lt;/li&gt;
&lt;li&gt;Tip13: 训练多个模型，将它们的预测取平均&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些Tips还期待日后在实践过程中的运用检验，希望能够对深度模型的训练起到一些指导的作用。&lt;br&gt;最后，作者总结，LDNNs是强力的，切实可训练的，如果我们有高质量的大量数据，我们可以找到最好的LDNNs来解决问题。对未来做出预测很难，不过，通常来说，通过大量计算得出的模型更好的可能性更大，神经图灵机是这个方向上的重要进步，无监督学习也是未来的一大方向，期待进一步的突破。&lt;/p&gt;
&lt;h2 id=&quot;小小总结&quot;&gt;&lt;a href=&quot;#小小总结&quot; class=&quot;headerlink&quot; title=&quot;小小总结&quot;&gt;&lt;/a&gt;小小总结&lt;/h2&gt;&lt;p&gt;综合这几篇文章，看到他们都对深度学习的整个脉络，现在的发展和未来的预测进行了梳理。结合自己的看法，我把他们总结成以下几点，&lt;/p&gt;
&lt;p&gt;第一，深度模型在现今许多复杂任务中取得了良好的效果，在图像，视频，音频，语音，自然语言处理方面都取得了start-of-art的效果，这些也是深度学习拿手的几个方向&lt;br&gt;第二，深度学习模型只是一种有别于传统机器学习方法的模型，它大大简化了特征工程的部分，但本质上是神经网络，也即一种机器学习的方法，我们不知道深度学习的未来如何，但是机器学习的未来一定是明朗的&lt;br&gt;第三，未来的大方向在于无监督学习，增强学习，迁移学习等领域，因为无标记的样本比有标记的高质量数据来的多得多，如何有效利用这些无标签样本是需要重点研究的课题&lt;br&gt;第四，在计算能力得到根本性突破之前（比如量子计算机投入使用并且发挥所谓的强大计算能力之前），多机并行以增加计算能力，来训练更加复杂的模型是不可阻挡的趋势，分布式机器学习，分布式深度学习模型训练也是可以做的方向&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Deep-Learning-Review&quot;&gt;&lt;a href=&quot;#Deep-Learning-Review&quot; class=&quot;headerlink&quot; title=&quot;Deep Learning Review&quot;&gt;&lt;/a&gt;Deep Learning Review&lt;/h2&gt;&lt;
    
    </summary>
    
      <category term="深度学习 | Deep Learning" scheme="http://whatbeg.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-Deep-Learning/"/>
    
    
      <category term="深度学习" scheme="http://whatbeg.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="论文阅读" scheme="http://whatbeg.com/tags/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>2016CCF大数据与计算智能大赛总结</title>
    <link href="http://whatbeg.com/2017/01/01/2016ccfcontest.html"/>
    <id>http://whatbeg.com/2017/01/01/2016ccfcontest.html</id>
    <published>2017-01-01T02:08:42.000Z</published>
    <updated>2017-02-18T13:20:32.499Z</updated>
    
    <content type="html">&lt;h2 id=&quot;赛题简介及任务&quot;&gt;&lt;a href=&quot;#赛题简介及任务&quot; class=&quot;headerlink&quot; title=&quot;赛题简介及任务&quot;&gt;&lt;/a&gt;赛题简介及任务&lt;/h2&gt;&lt;p&gt;情感分析是网络舆情分析中必不可少的技术，基于视角的领域情感分析更是情感分析应用于特定领域的关键技术。在对句子进行情感分析时，站在不同的视角，同一个句子的情感倾向判断结果将有所差别。本赛题意在情感分析任务中，站在数据使用者的角度进行特定的情感分析，使数据分析的结果更具可用性。本赛题可以细分为“视角抽取”与“基于视角的情感分析”两部分。下文首先介绍“视角”的定义，而后对“视角抽取”与“基于视角的情感分析”任务进行详细介绍：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;视角定义&lt;/strong&gt;：在情感分析这一任务中，对于同一个文档或句子，不同的数据使用者去分析，将会有不同的情感倾向。同时，从文中不同内容去分析，也有可能会得到不一样的情感。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;p&gt;在“A车在第三季度一举超过B车成为销量冠军”这样一句话中，如果分析者站在A车的角度去考虑，这句话就是正面的，但是如果分析者在B车的角度，则丢失了销量冠军这样一则消息是负面的。而在本句话中，“A车”和“B车”则是两个不同的情感视角。&lt;/p&gt;
&lt;p&gt;视角泛指某一类的思考角度，可以理解为数据使用者角度，亦可以理解为文本中某些方面，在本赛题中，为了简化《基于视角的领域情感分析》这一任务，我们将视角进行具体化——特指文本中出现的汽车品牌词语（如：“上汽大众”、“美国通用”、“速派”、“POLO”等）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;视角抽取&lt;/strong&gt;：又称为“视角识别”。顾名思义，这一任务意在从文本中抽取（识别）出可以描述视角的词语。由于在本次任务中，视角特指汽车品牌词，故这一步的任务需要参赛队伍抽取（识别）出文本中的汽车品牌词（或别名）。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;“考虑到终端市场的情况，我们本次选取了全新迈腾全系的次顶配车型和帕萨特2.0T排量的顶配车型来进行对比”一句话中，参赛队伍应抽取出“迈腾”和“帕萨特”两个视角。&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;“最终我们放弃了迈腾，把小帕开回了家！”一句中，参赛队伍应抽取出“迈腾”和“小帕”两个视角。在这里“小帕”是“帕萨特”的别名。&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在本次评测中，我们将给出一个汽车品牌词语集合来供参赛队伍参考。这个品牌词集合包含了测试语料中出现的大部分汽车品牌词及少部分未出现的汽车品牌词。为了验证参赛队伍“视角抽取”方法的鲁棒性，会有评测语料中的部分汽车品牌词并未出现在这一集合中的现象。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;基于视角的情感分析：给定一个句子，如果该句子中包含“视角”词语，则应针对这一视角进行情感分析；如果句子中包含多个“视角”词语，则应对不同的视角进行单独的情感分析；如果句子中不包含视角，则不做情感判别处理。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;算法模型&quot;&gt;&lt;a href=&quot;#算法模型&quot; class=&quot;headerlink&quot; title=&quot;算法模型&quot;&gt;&lt;/a&gt;算法模型&lt;/h2&gt;&lt;p&gt;本部分介绍一下我们最终模型的演变产生过程，以及我们所做的一些探索及效果。&lt;br&gt;10月10号，我们撸了一个简单的基于规则的情感分析算法，想探一下究竟，视角没有进行细致的抽取，只是利用给的View中的视角，采用简单的字符串匹配来进行简单提取，这一交，在初赛A榜中，只拿到了0.35768的分数，虽然没用，但是我们得到了一个可以用来比较的baseline，接下来就是不断探索，尝试其他的方法了。&lt;br&gt;此后，我们4人通过定期的讨论，每个人都对一部分进行深入研究，然后定期地交流，进行思维的碰撞，以期抛弃一些错误的想法，确定正确的想法，探讨当前阶段的优势与不足，确定下一个着力点等等，ArcherW的主要工作集中在特征工程和传统方法比如逻辑回归，贝叶斯等等，提取了TF，IDF，LDA，POS等等特征，并进行了筛选，组合，后来我们使用基于TF（词频）和POS（词性标注）特征的LR（逻辑回归）算法在11月14号初赛结束前的提交中得到了0.57677的分数。而有趣的是，采用基于TF-IDF和POS的LR仅得到了0.56209的分数，即TF-IDF比纯TF还低一个多百分点，这可能也侧面说明了，在情感分析任务中，代表着词的“重要性”的逆文档频率IDF特征并没有那么重要，因为句子的情感是由整个句子的所有词综合决定，可能一个词并不重要，但是它对决定整个句子的情感却至关重要或者至少有着不可忽视的作用。chenminzoe的工作也集中于特征提取和偏竞赛类的方法比如SVM，XGBoost，GBDT等等上面，她尝试了一些自己探索的创新型的特征，也取得了不错的分数，在复赛中采用SVM模型取得过0.56708的高分，比初赛最好的模型CNN的0.5371高出了3个百分点，但是后来很难取得突破，我们猜想问题，第一个可能出在特征的组合方面，第二个可能出在我们对诸如SVM这些分类器的参数调优缺乏经验，第三个就是我们没有制定与线上一致的有效的线下评测，来对我们的参数进行多次的调优，这个问题同样也出现在传统分类器，以及笔者所做的CNN，RNN等分类器上，这也是我们队值得反思的一点。shizihao123的工作主要集中在视角抽取方面，首先探索的是模式匹配的方法，为了应对官方给的View不太全面和存在噪声的现象，他编写了诸多爬虫爬取各大汽车网站比如汽车之家，车主之家等的汽车品牌词库，以应对这个问题，并对这些词库使用了许多算法进行处理，以得到最大可能的汽车品牌词典，又尽可能少地引入噪声。开始我们就利用给的训练数据和爬取的汽车品牌词典等数据去匹配句子中的视角，速度极慢，整个测试集不到10000条数据，却需要跑一个晚上才能够全部提取出来，在复赛中我们经过商讨，采用了AC自动机来做精确匹配，原来一个晚上的时间缩短到了不到半个小时，同时shizihao123在视角品牌词筛选方面做了大量工作，去除了大量匹配到的却在当前语境中并非汽车品牌的词，这都为后面的情感分类提供了强大的助力。整个过程简图如下，&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/ccf3.png-sf7sy&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

&lt;p&gt;可以说，我们的视角工作做得非常丰富，可是不足在于我们的视角提取方法较为单一，对词典依赖比较强，有效性依赖于我们对词典的收集工作，取决于词典是否全面。笔者的主要工作在于CNN，RNN方面，在实现了基于词典和规则的方法后，我们经过调研，发现CNN在处理情感分析问题上面取得了一些成功，然后笔者阅读了大量论文，大致摸清了CNN处理情感分析的方法，然后基于TensorFlow对CNN情感分类算法进行了代码实现，第一次提交取得了0.51543的分数，此后我们进行了诸多优化，包括词向量的优化，参数的优化，数据输入的优化，值得一提的是，我们此时实现了一种相关句划分的数据预处理方式，因为此时的CNN模型是对整句进行一个情感分析，所以需要把句子分给句子所描述的视角，如果把句子分给了并非它所描述的视角，那么我们就会得出错乱的情感，也就降低了正确率。这部分工作由ArcherW来实现，主要是根据几个关键的标点符号来对句子进行划分，如逗号，感叹号等等，如果一个句子部分包含了某个视角，我们认为这部分描述了这个视角，理所当然在判断该视角的情感的时候，我们可以把这部分句子的情感判断一下，如果一个句子部分不包含任何视角，那么根据语言上的惯例，我们将这个句子部分和前一个句子部分归到一起，前一部分是描述哪个视角，这一部分也相应描述哪个视角。这样就得到了每个视角所对应的相关句，我们利用CNN对这些相关句进行情感分类，分类结果就是相关句所对应的视角的情感。在词向量优化方面，我们采用了搜狗实验室的全网新闻语料，还采用了搜狐新闻，网易新闻，以及各处下载的汽车新闻语料40M左右，后来继续增加词向量，从中国汽车新闻网，汽车之家等网站爬取了近300M的汽车语料进行训练，随着汽车语料的增加，词向量训练的越准确，从而每次增加语料后结果都得到一些提升。&lt;br&gt;在不断的优化后，从最初的0.51543的成绩，逐步提升，到0.52，0.58，到最后初赛A榜定榜，我们用CNN做出的成绩是0.5901，排在A榜24名。B榜出来后，我们最高成绩是0.56941，还是排在第24名。然后就进入复赛了。&lt;/p&gt;
&lt;p&gt;复赛阶段，沿用CNN的方法只取得了0.5371的分数，让我们大失所望，传统的LR+TF+POS却在这时取得了0.56834的成绩，SVM方法也取得了0.56708的成绩，这不禁让我们怀疑到底是我们使用CNN的问题，还是CNN本身的局限性，此时我们也对深度学习有了更加深入的了解，我们发现RNN以其独特的对序列建模的能力，在自然语言处理领域发挥了巨大的作用，于是笔者开始钻研采用RNN体系的算法来解决情感分类的问题，这时候，一篇论文给了笔者巨大的启发，这也催生了我队解决情感分类任务的核心算法-BFGRU算法，算法框架如下图，&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/ccf4.png-sf7sy&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

&lt;p&gt;算法大致过程为，首先对视角进行提取，找出句子中的所有视角，每个视角会有一个句中的位置，对每个位置进行一次处理，将该位置左边的句子进行序列建模，采用GRU单元来进行状态存储，转换与记忆，最后得到一个输出，我们把它看做该位置的视角左边的语义对该视角的描述，输出为一个实值向量，然后我们再从句子最后跑一遍GRU直到该视角的右边，这又生成了该位置后面句子的语义对它的描述，综合前后的描述，再用softmax进行三分类，如此进行训练，就得到了对句子某个位置的视角进行情感判断的算法，这个算法我们称之为BFGRU(Bidirectional Focus Gated Recurrent Unit)，是从TDLSTM延伸过来的。这个算法初次提交得到0.56813的分数，稍低于LR方法，后来经过各种各样的优化，不断得到提升，从0.59972，到0.63763，再进行视角情感投票法的采用，提升到0.64，再到0.643，最后A榜封榜时我们取得了0.6481的成绩，排在全榜第6！&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/ccf5.png-sf7sy&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

&lt;p&gt;最终进入决赛，虽然最后没有取得1,2名的荣誉，但是我们收获了很多，虽然艰辛，我们无悔。真的很谢谢大赛主办方。&lt;br&gt;最后，给出我们整个解决方案的框架图，&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/ccf6.png-sf7sy&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

&lt;p&gt;上面就是我们整个比赛的方案提出过程，以及其中的团队合作，成功与失败，点点滴滴，都构成了我们能够站上决赛舞台的基础。&lt;/p&gt;
&lt;h2 id=&quot;应用场景&quot;&gt;&lt;a href=&quot;#应用场景&quot; class=&quot;headerlink&quot; title=&quot;应用场景&quot;&gt;&lt;/a&gt;应用场景&lt;/h2&gt;&lt;p&gt;算法解决了汽车领域评论的基于视角的情感分析，提出了一套基于视角的情感分析的解决方案，包括视角提取的方案以及对于评论句进行准确的情感分类的方案。可以应用在汽车领域评论挖掘，情感分析，汽车销售指导，由于视角提取的方案是与情感分类的方案分离的，所以我们可以将视角抽取推广到方面(aspect)抽取，得到对产品某个方面的评价，比如汽车中的油耗，空间等等。进一步的，我们可以推广到各种各样的领域，而不只是局限于汽车领域，在购物网站中完全可以用到我们的这套方案。我们的方案还可以用于舆情分析领域，对社会媒体或者自媒体的评论或者状态或者消息进行情感分析，了解社会中人们对于某个热点事件的看法，这有着巨大的意义。&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/ccf7.png-sf7sy&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;赛题简介及任务&quot;&gt;&lt;a href=&quot;#赛题简介及任务&quot; class=&quot;headerlink&quot; title=&quot;赛题简介及任务&quot;&gt;&lt;/a&gt;赛题简介及任务&lt;/h2&gt;&lt;p&gt;情感分析是网络舆情分析中必不可少的技术，基于视角的领域情感分析更是情感分析应用于特定领域的关键技术。
    
    </summary>
    
      <category term="深度学习 | Deep Learning" scheme="http://whatbeg.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-Deep-Learning/"/>
    
    
      <category term="Summary" scheme="http://whatbeg.com/tags/Summary/"/>
    
      <category term="机器学习" scheme="http://whatbeg.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>【数据分析】工作日发文章比周末发文章访问量高？</title>
    <link href="http://whatbeg.com/2016/12/31/zhoumovisit.html"/>
    <id>http://whatbeg.com/2016/12/31/zhoumovisit.html</id>
    <published>2016-12-31T10:02:30.000Z</published>
    <updated>2016-12-31T10:08:32.922Z</updated>
    
    <content type="html">&lt;p&gt;本文是一片老文，用Python做了一个简单的数据分析，2016年1月发表在&lt;a href=&quot;http://www.cnblogs.com/whatbeg/p/5127850.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;老博客&lt;/a&gt;上，在整理旧文的时候翻了出来，觉得有点价值，故移过来与大家分享一下。&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;看前面有位朋友分析了一下每天某个时间发文章的访问量区别，以讨论非系统性因素对文章访问量的影响。之所以进一步讨论工作日和周末发文对文章访问量的影响，一是觉得很有意思，二是毕业设计与此有很大关系，三是觉得还是有点意义的，于是决定做一下这个工作。那么到底周末发文的访问量是不是总体来说比工作日低呢，请往下看。&lt;/p&gt;
&lt;h2 id=&quot;工具&quot;&gt;&lt;a href=&quot;#工具&quot; class=&quot;headerlink&quot; title=&quot;工具&quot;&gt;&lt;/a&gt;工具&lt;/h2&gt;&lt;p&gt;1.Python 3.5&lt;br&gt;2.BeautifulSoup 4.4.1&lt;br&gt;3.Requests模块&lt;/p&gt;
&lt;h2 id=&quot;分析网页&quot;&gt;&lt;a href=&quot;#分析网页&quot; class=&quot;headerlink&quot; title=&quot;分析网页&quot;&gt;&lt;/a&gt;分析网页&lt;/h2&gt;&lt;p&gt;由于之前的工作已知博客园博客展览页是要通过ajax请求换页，这里我采用了Requests模块，post一个请求即可。&lt;br&gt;&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;payload&lt;/span&gt; = &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;CategoryType&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;SiteHome&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;ParentCategoryId&quot;&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;CategoryId&quot;&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;808&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;PageIndex&quot;&lt;/span&gt;:i,&lt;span class=&quot;string&quot;&gt;&quot;ItemListActionName&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;PostList&quot;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;r&lt;/span&gt; = requests.post(posturl,data = payload)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样就可以接收到第i页的博文列表的HTML内容了。&lt;br&gt;再来看一下我们要爬取的内容： &lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/zhoumo1.png&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

&lt;p&gt;我们要爬取两个内容：发布时间 与 阅读量，这次我们爬取40—200页共161页的内容，并分两种情况：剔除3000以上访问量的文章以及考虑全部文章，然后要做的工作有两个：根据打扫过的数据，统计出一周周一到周日每天的文章总数与访问量总数，最后用WPS表格来制作出对比图。一提到解析网页，我毫无疑问地又想到了BeautifulSoup这款工具，简单好用，功能强大，推荐。&lt;/p&gt;
&lt;p&gt;那么我们首先用BeautifulSoup抓出 &lt;code&gt;class = post_item_foot&lt;/code&gt; 的 &lt;code&gt;‘发布于...’&lt;/code&gt; 内容，以及抓出 &lt;code&gt;class = &amp;#39;article_view&amp;#39;&lt;/code&gt; 的 &lt;code&gt;‘阅读(...)’&lt;/code&gt;内容，再去除一些无用的部分，最后提取出日期三个数据y,m,d，以及阅读量，这里我们无需关心文章到底是谁发的或者具体时间。&lt;br&gt;（ps:Python 3.5下装BeautifulSoup老是不成功，后来发现有更高的版本4.4.1，就果断换了，然后一发成功，不知道什么原因）&lt;br&gt;部分代码如下：&lt;br&gt;&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;bs&lt;/span&gt; = BeautifulSoup(r.text,&lt;span class=&quot;string&quot;&gt;&quot;html.parser&quot;&lt;/span&gt;)           #转化成beautifulsoup对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;View&lt;/span&gt; = bs.findAll(attrs = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;class&#39;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&#39;article_view&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;class&#39;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&#39;post_item_foot&#39;&lt;/span&gt;&amp;#125;)  #找出两个class内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;strallview&lt;/span&gt; = str(View)  #转化为字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;viewcountsmatch&lt;/span&gt; = re.findall(&lt;span class=&quot;string&quot;&gt;&#39;阅读\(\d+\)&#39;&lt;/span&gt;,strallview)   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;viewdaymatch&lt;/span&gt;    = re.findall(&lt;span class=&quot;string&quot;&gt;&#39;发布于 ....-\d+-\d+&#39;&lt;/span&gt;,strallview)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;得出日期三个数据以后，这里我使用蔡勒公式（Zeller Fomula）直接计算出该日是星期几。蔡勒公式函数代码如下：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ZellerFomula&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(y,m,d)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; m == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; m == &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        y -= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        m += &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    c = y // &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    y = y - c * &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    w = (c // &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * c + (y + y // &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) + (&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt; * (m + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) // &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;) + d - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; w &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        w += &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    w %= &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; w == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        w += &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; w&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后就是简单的统计了。&lt;br&gt;这里我有一个考虑，由于日子越早的文章显然访问量总是会更高，所以为了在一定程度上抵消这种效应，我为每一页的20篇文章设置了一个权重：&lt;br&gt;&lt;figure class=&quot;highlight gcode&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;weight = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;0.0005&lt;/span&gt; * &lt;span class=&quot;comment&quot;&gt;(i - 40)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;即i越大，页数越大，发布越早，访问量相应打一个折扣，这里我设置的最大折扣为92%，即第200页的文章相应的阅读量为其原来阅读量的92%，希望能稍微提升一下结果的公平性。&lt;/p&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;p&gt;这时候写出python代码（剔除3000+文章版本）：&lt;br&gt;&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; urllib&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; bs4 &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; BeautifulSoup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; ZellerFomula(y,m,d):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; m == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; or m == &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        y -= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        m += &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    c = y &lt;span class=&quot;comment&quot;&gt;// 100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    y = y - c * &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    w = (c &lt;span class=&quot;comment&quot;&gt;// 4) - 2 * c + (y + y // 4) + (13 * (m + 1) // 5) + d - 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; w &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        w += &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    w %= &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; w == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        w += &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; w&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f = open(&lt;span class=&quot;string&quot;&gt;&#39;keyvalue.txt&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;posturl = &lt;span class=&quot;string&quot;&gt;&#39;http://www.cnblogs.com/mvc/AggSite/PostList.aspx&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;daysum = [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt;  = [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i in range(&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;201&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    weight = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;0.0005&lt;/span&gt; * (i - &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    payload = &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;CategoryType&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;SiteHome&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;ParentCategoryId&quot;&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;CategoryId&quot;&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;808&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;PageIndex&quot;&lt;/span&gt;:i,&lt;span class=&quot;string&quot;&gt;&quot;ItemListActionName&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;PostList&quot;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r = requests.post(posturl,data = payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bs = BeautifulSoup(r.text,&lt;span class=&quot;string&quot;&gt;&quot;html.parser&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    View = bs.&lt;span class=&quot;keyword&quot;&gt;findAll&lt;/span&gt;(attrs = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;class&#39;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&#39;article_view&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;class&#39;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&#39;post_item_foot&#39;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    strallview = str(View)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    viewcountsmatch = re.&lt;span class=&quot;keyword&quot;&gt;findall&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;阅读\(\d+\)&#39;&lt;/span&gt;,strallview)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    viewdaymatch    = re.&lt;span class=&quot;keyword&quot;&gt;findall&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;发布于 ....-\d+-\d+&#39;&lt;/span&gt;,strallview)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt;(viewcountsmatch)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt;(viewdaymatch)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j in range(len(viewcountsmatch)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        vcm = viewcountsmatch[j]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        vcm = re.sub(&lt;span class=&quot;string&quot;&gt;&#39;阅读\(&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,vcm)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        vcm = re.sub(&lt;span class=&quot;string&quot;&gt;&#39;\)&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,vcm)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        #&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt;(vcm)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        vc = &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;(vcm)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(vc &amp;gt; &lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        vdm = viewdaymatch[j]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        vdm = re.sub(&lt;span class=&quot;string&quot;&gt;&#39;发布于 &#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,vdm)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        vdm = vdm.split(&lt;span class=&quot;string&quot;&gt;&#39;-&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        #&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt;(vdm)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ans = ZellerFomula(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;(vdm[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]),&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;(vdm[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]),&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;(vdm[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        #&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt;(ans)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ass = &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;(weight*vc)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        #&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt;(str(ass)+ &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt; +str(vc))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        daysum[ans] += ass&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt;[ans] += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i in range(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    f.&lt;span class=&quot;keyword&quot;&gt;write&lt;/span&gt;(str(daysum[i])+&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    f.&lt;span class=&quot;keyword&quot;&gt;write&lt;/span&gt;(str(&lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt;[i]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    f.&lt;span class=&quot;keyword&quot;&gt;write&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这代码写了很久，主要python很久没碰也不熟悉了。&lt;/p&gt;
&lt;h2 id=&quot;运行结果与分析&quot;&gt;&lt;a href=&quot;#运行结果与分析&quot; class=&quot;headerlink&quot; title=&quot;运行结果与分析&quot;&gt;&lt;/a&gt;运行结果与分析&lt;/h2&gt;&lt;p&gt;然后我们运行就可以爬了，耗时大约40+秒，结果如下：&lt;/p&gt;
&lt;p&gt;1.剔除版本数据&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/zhoumo2.png&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

&lt;p&gt;每行前面是161篇文章中星期1~7的文章访问总量，后面是文章数量。不算3000+访问以上的文章总数3104篇，贡献访问量1573399。&lt;/p&gt;
&lt;p&gt;2.未剔除版本&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/zhoumo3.png&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

&lt;p&gt;文章总数3220 = 161 x 20篇，贡献访问量2176232.&lt;/p&gt;
&lt;p&gt;由上可以看出，3000+访问以上的较优质文章116篇，占比3.6%，其贡献的访问量为602833，占比27.7%，这也是预料之中的。&lt;/p&gt;
&lt;h2 id=&quot;图表&quot;&gt;&lt;a href=&quot;#图表&quot; class=&quot;headerlink&quot; title=&quot;图表&quot;&gt;&lt;/a&gt;图表&lt;/h2&gt;&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/zhoumo4.png&quot; alt=&quot;&quot;&gt;  &lt;/center&gt;&lt;br&gt;&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/zhoumo5.png&quot; alt=&quot;&quot;&gt; &lt;/center&gt;&lt;br&gt;&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/zhoumo6.png&quot; alt=&quot;&quot;&gt; &lt;/center&gt;&lt;br&gt;&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/zhoumo7.png&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

&lt;p&gt;由图可得，两种方式总体上的差距并不大，从发文数量上看，周一发文最多，可能是大家都上班了，开始新一周的工作使然。随后周二到周四发文数量略有波动，但是都差不太多，并且比周一少。到周五由于放假了，文章数量也相应减少。到周末两天发文数量就有了很大下降，这也是预料之中。&lt;/p&gt;
&lt;p&gt;从文章访问量来看，周一达到最大，随后又以较周一低的水平波动，到周末达到低谷，一大原因也是由于文章数量的减少。&lt;/p&gt;
&lt;p&gt;从平均访问情况来看，周一至周五的平均访问量普遍比周末稍高一点，印证了结论“工作日发文要比周末发文平均访问量多”，但是并没有多太多，其中周一达到最高峰，随后有波动，到周日有一个反弹，说明“周一效应”还是有一点的。&lt;/p&gt;
&lt;p&gt;两幅图的有些显著的不同就是访问量来看，剔除3000+文章以后，周二的访问量有10W+的显著下降，这是否说明周二的时候高质量文章的访问在急速增长的原因呢。&lt;/p&gt;
&lt;h2 id=&quot;补充&quot;&gt;&lt;a href=&quot;#补充&quot; class=&quot;headerlink&quot; title=&quot;补充&quot;&gt;&lt;/a&gt;补充&lt;/h2&gt;&lt;p&gt;后来我发现光考虑篇均访问还不全面，因为周一即使篇均访问较高，但是它的文章数也是很大的，所以周一的文章必然会很快被覆盖过去，所以这里有一个性价比的问题，于是我又算了一项指标，即篇均访问与当日文章数量之比，底数越大小即文章数量越小，越晚被覆盖，曝光率越大，篇均访问越大自然带来的效应越大。所以有了下面这张图：&lt;/p&gt;
&lt;center&gt; &lt;img src=&quot;http://7xsl28.com1.z0.glb.clouddn.com/zhoumo8.png&quot; alt=&quot;&quot;&gt; &lt;/center&gt;

&lt;p&gt;事实证明，性价比最高的发文日期居然是发的很少，访问很少的周末！&lt;/p&gt;
&lt;h2 id=&quot;后续工作&quot;&gt;&lt;a href=&quot;#后续工作&quot; class=&quot;headerlink&quot; title=&quot;后续工作&quot;&gt;&lt;/a&gt;后续工作&lt;/h2&gt;&lt;p&gt;虽然本次挖掘3220篇文章数据较小，感觉还是可以从速度方面进行优化的。&lt;br&gt;权重也是我自己简单设计的，这方面也可以进一步优化。&lt;br&gt;欢迎大家提出意见与建议。&lt;/p&gt;
&lt;h2 id=&quot;结论与启示&quot;&gt;&lt;a href=&quot;#结论与启示&quot; class=&quot;headerlink&quot; title=&quot;结论与启示&quot;&gt;&lt;/a&gt;结论与启示&lt;/h2&gt;&lt;p&gt;所以说，如果你想要让你的文章获得更多的访问量，获得更大的影响力，尽量在工作日发文吧。当然，我前面说过，这些都只是非系统性因素，俗话说，打铁还需自身硬，提高自己文章的质量和水平才是获得更大文章影响力的决定性因素。希望广大园友能够致力于发布质量更高的文章，共同构建一个属于我们的优质的博客园。&lt;br&gt;本文就是上星期四晚上写就的，一直到现在才发，试下效果。事实是写完文章很难忍住不发，哈哈。&lt;/p&gt;
&lt;p&gt;同样，爬取博客园只是为了学习之用，无其他目的，望理解。感谢韩子迟的工作。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文是一片老文，用Python做了一个简单的数据分析，2016年1月发表在&lt;a href=&quot;http://www.cnblogs.com/whatbeg/p/5127850.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;老博客&lt;/a&gt;上，在整理旧
    
    </summary>
    
      <category term="数据科学 | Data Science" scheme="http://whatbeg.com/categories/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6-Data-Science/"/>
    
    
      <category term="Python" scheme="http://whatbeg.com/tags/Python/"/>
    
      <category term="数据分析" scheme="http://whatbeg.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
</feed>
